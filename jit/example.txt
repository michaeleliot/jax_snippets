{ lambda ; a:f32[200] b:f32[200] c:i32[] d:u32[2]. let
    e:key<fry>[] = random_wrap[impl=fry] d
    f:f32[2] = pjit[
      name=_uniform
      jaxpr={ lambda ; g:key<fry>[] h:f32[] i:f32[]. let
          j:f32[] = convert_element_type[new_dtype=float32 weak_type=False] h
          k:f32[] = convert_element_type[new_dtype=float32 weak_type=False] i
          l:f32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] j
          m:f32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] k
          n:u32[2] = random_bits[bit_width=32 shape=(2,)] g
          o:u32[2] = shift_right_logical n 9
          p:u32[2] = or o 1065353216
          q:f32[2] = bitcast_convert_type[new_dtype=float32] p
          r:f32[2] = sub q 1.0
          s:f32[1] = sub m l
          t:f32[2] = mul r s
          u:f32[2] = add t l
          v:f32[2] = max l u
        in (v,) }
    ] e 0.0 1.0
    w:f32[1] = slice[limit_indices=(1,) start_indices=(0,) strides=(1,)] f
    x:f32[] = squeeze[dimensions=(0,)] w
    y:f32[1] = slice[limit_indices=(2,) start_indices=(1,) strides=(1,)] f
    z:f32[] = squeeze[dimensions=(0,)] y
    ba:f32[200] = mul x a
    bb:f32[200] = add ba z
    bc:f32[200] = sub b bb
    bd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    be:f32[] = div -2.0 bd
    bf:f32[200] = mul a bc
    bg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] be
    bh:f32[200] = mul bg bf
    bi:f32[] = reduce_sum[axes=(0,)] bh
    bj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bk:f32[] = div -2.0 bj
    bl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bk
    bm:f32[200] = mul bl bc
    bn:f32[] = reduce_sum[axes=(0,)] bm
    bo:f32[] = mul 0.0010000000474974513 bi
    bp:f32[] = sub x bo
    bq:f32[] = mul 0.0010000000474974513 bn
    br:f32[] = sub z bq
    bs:f32[200] = mul bp a
    bt:f32[200] = add bs br
    bu:f32[200] = sub b bt
    bv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bw:f32[] = div -2.0 bv
    bx:f32[200] = mul a bu
    by:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bw
    bz:f32[200] = mul by bx
    ca:f32[] = reduce_sum[axes=(0,)] bz
    cb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cc:f32[] = div -2.0 cb
    cd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cc
    ce:f32[200] = mul cd bu
    cf:f32[] = reduce_sum[axes=(0,)] ce
    cg:f32[] = mul 0.0010000000474974513 ca
    ch:f32[] = sub bp cg
    ci:f32[] = mul 0.0010000000474974513 cf
    cj:f32[] = sub br ci
    ck:f32[200] = mul ch a
    cl:f32[200] = add ck cj
    cm:f32[200] = sub b cl
    cn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    co:f32[] = div -2.0 cn
    cp:f32[200] = mul a cm
    cq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] co
    cr:f32[200] = mul cq cp
    cs:f32[] = reduce_sum[axes=(0,)] cr
    ct:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cu:f32[] = div -2.0 ct
    cv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cu
    cw:f32[200] = mul cv cm
    cx:f32[] = reduce_sum[axes=(0,)] cw
    cy:f32[] = mul 0.0010000000474974513 cs
    cz:f32[] = sub ch cy
    da:f32[] = mul 0.0010000000474974513 cx
    db:f32[] = sub cj da
    dc:f32[200] = mul cz a
    dd:f32[200] = add dc db
    de:f32[200] = sub b dd
    df:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dg:f32[] = div -2.0 df
    dh:f32[200] = mul a de
    di:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dg
    dj:f32[200] = mul di dh
    dk:f32[] = reduce_sum[axes=(0,)] dj
    dl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dm:f32[] = div -2.0 dl
    dn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dm
    do:f32[200] = mul dn de
    dp:f32[] = reduce_sum[axes=(0,)] do
    dq:f32[] = mul 0.0010000000474974513 dk
    dr:f32[] = sub cz dq
    ds:f32[] = mul 0.0010000000474974513 dp
    dt:f32[] = sub db ds
    du:f32[200] = mul dr a
    dv:f32[200] = add du dt
    dw:f32[200] = sub b dv
    dx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dy:f32[] = div -2.0 dx
    dz:f32[200] = mul a dw
    ea:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dy
    eb:f32[200] = mul ea dz
    ec:f32[] = reduce_sum[axes=(0,)] eb
    ed:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ee:f32[] = div -2.0 ed
    ef:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ee
    eg:f32[200] = mul ef dw
    eh:f32[] = reduce_sum[axes=(0,)] eg
    ei:f32[] = mul 0.0010000000474974513 ec
    ej:f32[] = sub dr ei
    ek:f32[] = mul 0.0010000000474974513 eh
    el:f32[] = sub dt ek
    em:f32[200] = mul ej a
    en:f32[200] = add em el
    eo:f32[200] = sub b en
    ep:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eq:f32[] = div -2.0 ep
    er:f32[200] = mul a eo
    es:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eq
    et:f32[200] = mul es er
    eu:f32[] = reduce_sum[axes=(0,)] et
    ev:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ew:f32[] = div -2.0 ev
    ex:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ew
    ey:f32[200] = mul ex eo
    ez:f32[] = reduce_sum[axes=(0,)] ey
    fa:f32[] = mul 0.0010000000474974513 eu
    fb:f32[] = sub ej fa
    fc:f32[] = mul 0.0010000000474974513 ez
    fd:f32[] = sub el fc
    fe:f32[200] = mul fb a
    ff:f32[200] = add fe fd
    fg:f32[200] = sub b ff
    fh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fi:f32[] = div -2.0 fh
    fj:f32[200] = mul a fg
    fk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fi
    fl:f32[200] = mul fk fj
    fm:f32[] = reduce_sum[axes=(0,)] fl
    fn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fo:f32[] = div -2.0 fn
    fp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fo
    fq:f32[200] = mul fp fg
    fr:f32[] = reduce_sum[axes=(0,)] fq
    fs:f32[] = mul 0.0010000000474974513 fm
    ft:f32[] = sub fb fs
    fu:f32[] = mul 0.0010000000474974513 fr
    fv:f32[] = sub fd fu
    fw:f32[200] = mul ft a
    fx:f32[200] = add fw fv
    fy:f32[200] = sub b fx
    fz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ga:f32[] = div -2.0 fz
    gb:f32[200] = mul a fy
    gc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ga
    gd:f32[200] = mul gc gb
    ge:f32[] = reduce_sum[axes=(0,)] gd
    gf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gg:f32[] = div -2.0 gf
    gh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gg
    gi:f32[200] = mul gh fy
    gj:f32[] = reduce_sum[axes=(0,)] gi
    gk:f32[] = mul 0.0010000000474974513 ge
    gl:f32[] = sub ft gk
    gm:f32[] = mul 0.0010000000474974513 gj
    gn:f32[] = sub fv gm
    go:f32[200] = mul gl a
    gp:f32[200] = add go gn
    gq:f32[200] = sub b gp
    gr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gs:f32[] = div -2.0 gr
    gt:f32[200] = mul a gq
    gu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gs
    gv:f32[200] = mul gu gt
    gw:f32[] = reduce_sum[axes=(0,)] gv
    gx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gy:f32[] = div -2.0 gx
    gz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gy
    ha:f32[200] = mul gz gq
    hb:f32[] = reduce_sum[axes=(0,)] ha
    hc:f32[] = mul 0.0010000000474974513 gw
    hd:f32[] = sub gl hc
    he:f32[] = mul 0.0010000000474974513 hb
    hf:f32[] = sub gn he
    hg:f32[200] = mul hd a
    hh:f32[200] = add hg hf
    hi:f32[200] = sub b hh
    hj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hk:f32[] = div -2.0 hj
    hl:f32[200] = mul a hi
    hm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hk
    hn:f32[200] = mul hm hl
    ho:f32[] = reduce_sum[axes=(0,)] hn
    hp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hq:f32[] = div -2.0 hp
    hr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hq
    hs:f32[200] = mul hr hi
    ht:f32[] = reduce_sum[axes=(0,)] hs
    hu:f32[] = mul 0.0010000000474974513 ho
    hv:f32[] = sub hd hu
    hw:f32[] = mul 0.0010000000474974513 ht
    hx:f32[] = sub hf hw
    hy:f32[200] = mul hv a
    hz:f32[200] = add hy hx
    ia:f32[200] = sub b hz
    ib:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ic:f32[] = div -2.0 ib
    id:f32[200] = mul a ia
    ie:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ic
    if:f32[200] = mul ie id
    ig:f32[] = reduce_sum[axes=(0,)] if
    ih:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ii:f32[] = div -2.0 ih
    ij:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ii
    ik:f32[200] = mul ij ia
    il:f32[] = reduce_sum[axes=(0,)] ik
    im:f32[] = mul 0.0010000000474974513 ig
    in:f32[] = sub hv im
    io:f32[] = mul 0.0010000000474974513 il
    ip:f32[] = sub hx io
    iq:f32[200] = mul in a
    ir:f32[200] = add iq ip
    is:f32[200] = sub b ir
    it:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iu:f32[] = div -2.0 it
    iv:f32[200] = mul a is
    iw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iu
    ix:f32[200] = mul iw iv
    iy:f32[] = reduce_sum[axes=(0,)] ix
    iz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ja:f32[] = div -2.0 iz
    jb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ja
    jc:f32[200] = mul jb is
    jd:f32[] = reduce_sum[axes=(0,)] jc
    je:f32[] = mul 0.0010000000474974513 iy
    jf:f32[] = sub in je
    jg:f32[] = mul 0.0010000000474974513 jd
    jh:f32[] = sub ip jg
    ji:f32[200] = mul jf a
    jj:f32[200] = add ji jh
    jk:f32[200] = sub b jj
    jl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jm:f32[] = div -2.0 jl
    jn:f32[200] = mul a jk
    jo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jm
    jp:f32[200] = mul jo jn
    jq:f32[] = reduce_sum[axes=(0,)] jp
    jr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    js:f32[] = div -2.0 jr
    jt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] js
    ju:f32[200] = mul jt jk
    jv:f32[] = reduce_sum[axes=(0,)] ju
    jw:f32[] = mul 0.0010000000474974513 jq
    jx:f32[] = sub jf jw
    jy:f32[] = mul 0.0010000000474974513 jv
    jz:f32[] = sub jh jy
    ka:f32[200] = mul jx a
    kb:f32[200] = add ka jz
    kc:f32[200] = sub b kb
    kd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ke:f32[] = div -2.0 kd
    kf:f32[200] = mul a kc
    kg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ke
    kh:f32[200] = mul kg kf
    ki:f32[] = reduce_sum[axes=(0,)] kh
    kj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kk:f32[] = div -2.0 kj
    kl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kk
    km:f32[200] = mul kl kc
    kn:f32[] = reduce_sum[axes=(0,)] km
    ko:f32[] = mul 0.0010000000474974513 ki
    kp:f32[] = sub jx ko
    kq:f32[] = mul 0.0010000000474974513 kn
    kr:f32[] = sub jz kq
    ks:f32[200] = mul kp a
    kt:f32[200] = add ks kr
    ku:f32[200] = sub b kt
    kv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kw:f32[] = div -2.0 kv
    kx:f32[200] = mul a ku
    ky:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kw
    kz:f32[200] = mul ky kx
    la:f32[] = reduce_sum[axes=(0,)] kz
    lb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lc:f32[] = div -2.0 lb
    ld:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lc
    le:f32[200] = mul ld ku
    lf:f32[] = reduce_sum[axes=(0,)] le
    lg:f32[] = mul 0.0010000000474974513 la
    lh:f32[] = sub kp lg
    li:f32[] = mul 0.0010000000474974513 lf
    lj:f32[] = sub kr li
    lk:f32[200] = mul lh a
    ll:f32[200] = add lk lj
    lm:f32[200] = sub b ll
    ln:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lo:f32[] = div -2.0 ln
    lp:f32[200] = mul a lm
    lq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lo
    lr:f32[200] = mul lq lp
    ls:f32[] = reduce_sum[axes=(0,)] lr
    lt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lu:f32[] = div -2.0 lt
    lv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lu
    lw:f32[200] = mul lv lm
    lx:f32[] = reduce_sum[axes=(0,)] lw
    ly:f32[] = mul 0.0010000000474974513 ls
    lz:f32[] = sub lh ly
    ma:f32[] = mul 0.0010000000474974513 lx
    mb:f32[] = sub lj ma
    mc:f32[200] = mul lz a
    md:f32[200] = add mc mb
    me:f32[200] = sub b md
    mf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mg:f32[] = div -2.0 mf
    mh:f32[200] = mul a me
    mi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mg
    mj:f32[200] = mul mi mh
    mk:f32[] = reduce_sum[axes=(0,)] mj
    ml:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mm:f32[] = div -2.0 ml
    mn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mm
    mo:f32[200] = mul mn me
    mp:f32[] = reduce_sum[axes=(0,)] mo
    mq:f32[] = mul 0.0010000000474974513 mk
    mr:f32[] = sub lz mq
    ms:f32[] = mul 0.0010000000474974513 mp
    mt:f32[] = sub mb ms
    mu:f32[200] = mul mr a
    mv:f32[200] = add mu mt
    mw:f32[200] = sub b mv
    mx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    my:f32[] = div -2.0 mx
    mz:f32[200] = mul a mw
    na:f32[] = convert_element_type[new_dtype=float32 weak_type=False] my
    nb:f32[200] = mul na mz
    nc:f32[] = reduce_sum[axes=(0,)] nb
    nd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ne:f32[] = div -2.0 nd
    nf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ne
    ng:f32[200] = mul nf mw
    nh:f32[] = reduce_sum[axes=(0,)] ng
    ni:f32[] = mul 0.0010000000474974513 nc
    nj:f32[] = sub mr ni
    nk:f32[] = mul 0.0010000000474974513 nh
    nl:f32[] = sub mt nk
    nm:f32[200] = mul nj a
    nn:f32[200] = add nm nl
    no:f32[200] = sub b nn
    np:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nq:f32[] = div -2.0 np
    nr:f32[200] = mul a no
    ns:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nq
    nt:f32[200] = mul ns nr
    nu:f32[] = reduce_sum[axes=(0,)] nt
    nv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nw:f32[] = div -2.0 nv
    nx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nw
    ny:f32[200] = mul nx no
    nz:f32[] = reduce_sum[axes=(0,)] ny
    oa:f32[] = mul 0.0010000000474974513 nu
    ob:f32[] = sub nj oa
    oc:f32[] = mul 0.0010000000474974513 nz
    od:f32[] = sub nl oc
    oe:f32[200] = mul ob a
    of:f32[200] = add oe od
    og:f32[200] = sub b of
    oh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oi:f32[] = div -2.0 oh
    oj:f32[200] = mul a og
    ok:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oi
    ol:f32[200] = mul ok oj
    om:f32[] = reduce_sum[axes=(0,)] ol
    on:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oo:f32[] = div -2.0 on
    op:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oo
    oq:f32[200] = mul op og
    or:f32[] = reduce_sum[axes=(0,)] oq
    os:f32[] = mul 0.0010000000474974513 om
    ot:f32[] = sub ob os
    ou:f32[] = mul 0.0010000000474974513 or
    ov:f32[] = sub od ou
    ow:f32[200] = mul ot a
    ox:f32[200] = add ow ov
    oy:f32[200] = sub b ox
    oz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pa:f32[] = div -2.0 oz
    pb:f32[200] = mul a oy
    pc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pa
    pd:f32[200] = mul pc pb
    pe:f32[] = reduce_sum[axes=(0,)] pd
    pf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pg:f32[] = div -2.0 pf
    ph:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pg
    pi:f32[200] = mul ph oy
    pj:f32[] = reduce_sum[axes=(0,)] pi
    pk:f32[] = mul 0.0010000000474974513 pe
    pl:f32[] = sub ot pk
    pm:f32[] = mul 0.0010000000474974513 pj
    pn:f32[] = sub ov pm
    po:f32[200] = mul pl a
    pp:f32[200] = add po pn
    pq:f32[200] = sub b pp
    pr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ps:f32[] = div -2.0 pr
    pt:f32[200] = mul a pq
    pu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ps
    pv:f32[200] = mul pu pt
    pw:f32[] = reduce_sum[axes=(0,)] pv
    px:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    py:f32[] = div -2.0 px
    pz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] py
    qa:f32[200] = mul pz pq
    qb:f32[] = reduce_sum[axes=(0,)] qa
    qc:f32[] = mul 0.0010000000474974513 pw
    qd:f32[] = sub pl qc
    qe:f32[] = mul 0.0010000000474974513 qb
    qf:f32[] = sub pn qe
    qg:f32[200] = mul qd a
    qh:f32[200] = add qg qf
    qi:f32[200] = sub b qh
    qj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qk:f32[] = div -2.0 qj
    ql:f32[200] = mul a qi
    qm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qk
    qn:f32[200] = mul qm ql
    qo:f32[] = reduce_sum[axes=(0,)] qn
    qp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qq:f32[] = div -2.0 qp
    qr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qq
    qs:f32[200] = mul qr qi
    qt:f32[] = reduce_sum[axes=(0,)] qs
    qu:f32[] = mul 0.0010000000474974513 qo
    qv:f32[] = sub qd qu
    qw:f32[] = mul 0.0010000000474974513 qt
    qx:f32[] = sub qf qw
    qy:f32[200] = mul qv a
    qz:f32[200] = add qy qx
    ra:f32[200] = sub b qz
    rb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rc:f32[] = div -2.0 rb
    rd:f32[200] = mul a ra
    re:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rc
    rf:f32[200] = mul re rd
    rg:f32[] = reduce_sum[axes=(0,)] rf
    rh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ri:f32[] = div -2.0 rh
    rj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ri
    rk:f32[200] = mul rj ra
    rl:f32[] = reduce_sum[axes=(0,)] rk
    rm:f32[] = mul 0.0010000000474974513 rg
    rn:f32[] = sub qv rm
    ro:f32[] = mul 0.0010000000474974513 rl
    rp:f32[] = sub qx ro
    rq:f32[200] = mul rn a
    rr:f32[200] = add rq rp
    rs:f32[200] = sub b rr
    rt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ru:f32[] = div -2.0 rt
    rv:f32[200] = mul a rs
    rw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ru
    rx:f32[200] = mul rw rv
    ry:f32[] = reduce_sum[axes=(0,)] rx
    rz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sa:f32[] = div -2.0 rz
    sb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sa
    sc:f32[200] = mul sb rs
    sd:f32[] = reduce_sum[axes=(0,)] sc
    se:f32[] = mul 0.0010000000474974513 ry
    sf:f32[] = sub rn se
    sg:f32[] = mul 0.0010000000474974513 sd
    sh:f32[] = sub rp sg
    si:f32[200] = mul sf a
    sj:f32[200] = add si sh
    sk:f32[200] = sub b sj
    sl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sm:f32[] = div -2.0 sl
    sn:f32[200] = mul a sk
    so:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sm
    sp:f32[200] = mul so sn
    sq:f32[] = reduce_sum[axes=(0,)] sp
    sr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ss:f32[] = div -2.0 sr
    st:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ss
    su:f32[200] = mul st sk
    sv:f32[] = reduce_sum[axes=(0,)] su
    sw:f32[] = mul 0.0010000000474974513 sq
    sx:f32[] = sub sf sw
    sy:f32[] = mul 0.0010000000474974513 sv
    sz:f32[] = sub sh sy
    ta:f32[200] = mul sx a
    tb:f32[200] = add ta sz
    tc:f32[200] = sub b tb
    td:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    te:f32[] = div -2.0 td
    tf:f32[200] = mul a tc
    tg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] te
    th:f32[200] = mul tg tf
    ti:f32[] = reduce_sum[axes=(0,)] th
    tj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tk:f32[] = div -2.0 tj
    tl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tk
    tm:f32[200] = mul tl tc
    tn:f32[] = reduce_sum[axes=(0,)] tm
    to:f32[] = mul 0.0010000000474974513 ti
    tp:f32[] = sub sx to
    tq:f32[] = mul 0.0010000000474974513 tn
    tr:f32[] = sub sz tq
    ts:f32[200] = mul tp a
    tt:f32[200] = add ts tr
    tu:f32[200] = sub b tt
    tv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tw:f32[] = div -2.0 tv
    tx:f32[200] = mul a tu
    ty:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tw
    tz:f32[200] = mul ty tx
    ua:f32[] = reduce_sum[axes=(0,)] tz
    ub:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uc:f32[] = div -2.0 ub
    ud:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uc
    ue:f32[200] = mul ud tu
    uf:f32[] = reduce_sum[axes=(0,)] ue
    ug:f32[] = mul 0.0010000000474974513 ua
    uh:f32[] = sub tp ug
    ui:f32[] = mul 0.0010000000474974513 uf
    uj:f32[] = sub tr ui
    uk:f32[200] = mul uh a
    ul:f32[200] = add uk uj
    um:f32[200] = sub b ul
    un:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uo:f32[] = div -2.0 un
    up:f32[200] = mul a um
    uq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uo
    ur:f32[200] = mul uq up
    us:f32[] = reduce_sum[axes=(0,)] ur
    ut:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uu:f32[] = div -2.0 ut
    uv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uu
    uw:f32[200] = mul uv um
    ux:f32[] = reduce_sum[axes=(0,)] uw
    uy:f32[] = mul 0.0010000000474974513 us
    uz:f32[] = sub uh uy
    va:f32[] = mul 0.0010000000474974513 ux
    vb:f32[] = sub uj va
    vc:f32[200] = mul uz a
    vd:f32[200] = add vc vb
    ve:f32[200] = sub b vd
    vf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vg:f32[] = div -2.0 vf
    vh:f32[200] = mul a ve
    vi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vg
    vj:f32[200] = mul vi vh
    vk:f32[] = reduce_sum[axes=(0,)] vj
    vl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vm:f32[] = div -2.0 vl
    vn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vm
    vo:f32[200] = mul vn ve
    vp:f32[] = reduce_sum[axes=(0,)] vo
    vq:f32[] = mul 0.0010000000474974513 vk
    vr:f32[] = sub uz vq
    vs:f32[] = mul 0.0010000000474974513 vp
    vt:f32[] = sub vb vs
    vu:f32[200] = mul vr a
    vv:f32[200] = add vu vt
    vw:f32[200] = sub b vv
    vx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vy:f32[] = div -2.0 vx
    vz:f32[200] = mul a vw
    wa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vy
    wb:f32[200] = mul wa vz
    wc:f32[] = reduce_sum[axes=(0,)] wb
    wd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    we:f32[] = div -2.0 wd
    wf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] we
    wg:f32[200] = mul wf vw
    wh:f32[] = reduce_sum[axes=(0,)] wg
    wi:f32[] = mul 0.0010000000474974513 wc
    wj:f32[] = sub vr wi
    wk:f32[] = mul 0.0010000000474974513 wh
    wl:f32[] = sub vt wk
    wm:f32[200] = mul wj a
    wn:f32[200] = add wm wl
    wo:f32[200] = sub b wn
    wp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wq:f32[] = div -2.0 wp
    wr:f32[200] = mul a wo
    ws:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wq
    wt:f32[200] = mul ws wr
    wu:f32[] = reduce_sum[axes=(0,)] wt
    wv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ww:f32[] = div -2.0 wv
    wx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ww
    wy:f32[200] = mul wx wo
    wz:f32[] = reduce_sum[axes=(0,)] wy
    xa:f32[] = mul 0.0010000000474974513 wu
    xb:f32[] = sub wj xa
    xc:f32[] = mul 0.0010000000474974513 wz
    xd:f32[] = sub wl xc
    xe:f32[200] = mul xb a
    xf:f32[200] = add xe xd
    xg:f32[200] = sub b xf
    xh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xi:f32[] = div -2.0 xh
    xj:f32[200] = mul a xg
    xk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xi
    xl:f32[200] = mul xk xj
    xm:f32[] = reduce_sum[axes=(0,)] xl
    xn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xo:f32[] = div -2.0 xn
    xp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xo
    xq:f32[200] = mul xp xg
    xr:f32[] = reduce_sum[axes=(0,)] xq
    xs:f32[] = mul 0.0010000000474974513 xm
    xt:f32[] = sub xb xs
    xu:f32[] = mul 0.0010000000474974513 xr
    xv:f32[] = sub xd xu
    xw:f32[200] = mul xt a
    xx:f32[200] = add xw xv
    xy:f32[200] = sub b xx
    xz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ya:f32[] = div -2.0 xz
    yb:f32[200] = mul a xy
    yc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ya
    yd:f32[200] = mul yc yb
    ye:f32[] = reduce_sum[axes=(0,)] yd
    yf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yg:f32[] = div -2.0 yf
    yh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yg
    yi:f32[200] = mul yh xy
    yj:f32[] = reduce_sum[axes=(0,)] yi
    yk:f32[] = mul 0.0010000000474974513 ye
    yl:f32[] = sub xt yk
    ym:f32[] = mul 0.0010000000474974513 yj
    yn:f32[] = sub xv ym
    yo:f32[200] = mul yl a
    yp:f32[200] = add yo yn
    yq:f32[200] = sub b yp
    yr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ys:f32[] = div -2.0 yr
    yt:f32[200] = mul a yq
    yu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ys
    yv:f32[200] = mul yu yt
    yw:f32[] = reduce_sum[axes=(0,)] yv
    yx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yy:f32[] = div -2.0 yx
    yz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yy
    za:f32[200] = mul yz yq
    zb:f32[] = reduce_sum[axes=(0,)] za
    zc:f32[] = mul 0.0010000000474974513 yw
    zd:f32[] = sub yl zc
    ze:f32[] = mul 0.0010000000474974513 zb
    zf:f32[] = sub yn ze
    zg:f32[200] = mul zd a
    zh:f32[200] = add zg zf
    zi:f32[200] = sub b zh
    zj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zk:f32[] = div -2.0 zj
    zl:f32[200] = mul a zi
    zm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zk
    zn:f32[200] = mul zm zl
    zo:f32[] = reduce_sum[axes=(0,)] zn
    zp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zq:f32[] = div -2.0 zp
    zr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zq
    zs:f32[200] = mul zr zi
    zt:f32[] = reduce_sum[axes=(0,)] zs
    zu:f32[] = mul 0.0010000000474974513 zo
    zv:f32[] = sub zd zu
    zw:f32[] = mul 0.0010000000474974513 zt
    zx:f32[] = sub zf zw
    zy:f32[200] = mul zv a
    zz:f32[200] = add zy zx
    baa:f32[200] = sub b zz
    bab:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bac:f32[] = div -2.0 bab
    bad:f32[200] = mul a baa
    bae:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bac
    baf:f32[200] = mul bae bad
    bag:f32[] = reduce_sum[axes=(0,)] baf
    bah:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bai:f32[] = div -2.0 bah
    baj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bai
    bak:f32[200] = mul baj baa
    bal:f32[] = reduce_sum[axes=(0,)] bak
    bam:f32[] = mul 0.0010000000474974513 bag
    ban:f32[] = sub zv bam
    bao:f32[] = mul 0.0010000000474974513 bal
    bap:f32[] = sub zx bao
    baq:f32[200] = mul ban a
    bar:f32[200] = add baq bap
    bas:f32[200] = sub b bar
    bat:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bau:f32[] = div -2.0 bat
    bav:f32[200] = mul a bas
    baw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bau
    bax:f32[200] = mul baw bav
    bay:f32[] = reduce_sum[axes=(0,)] bax
    baz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bba:f32[] = div -2.0 baz
    bbb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bba
    bbc:f32[200] = mul bbb bas
    bbd:f32[] = reduce_sum[axes=(0,)] bbc
    bbe:f32[] = mul 0.0010000000474974513 bay
    bbf:f32[] = sub ban bbe
    bbg:f32[] = mul 0.0010000000474974513 bbd
    bbh:f32[] = sub bap bbg
    bbi:f32[200] = mul bbf a
    bbj:f32[200] = add bbi bbh
    bbk:f32[200] = sub b bbj
    bbl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bbm:f32[] = div -2.0 bbl
    bbn:f32[200] = mul a bbk
    bbo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bbm
    bbp:f32[200] = mul bbo bbn
    bbq:f32[] = reduce_sum[axes=(0,)] bbp
    bbr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bbs:f32[] = div -2.0 bbr
    bbt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bbs
    bbu:f32[200] = mul bbt bbk
    bbv:f32[] = reduce_sum[axes=(0,)] bbu
    bbw:f32[] = mul 0.0010000000474974513 bbq
    bbx:f32[] = sub bbf bbw
    bby:f32[] = mul 0.0010000000474974513 bbv
    bbz:f32[] = sub bbh bby
    bca:f32[200] = mul bbx a
    bcb:f32[200] = add bca bbz
    bcc:f32[200] = sub b bcb
    bcd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bce:f32[] = div -2.0 bcd
    bcf:f32[200] = mul a bcc
    bcg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bce
    bch:f32[200] = mul bcg bcf
    bci:f32[] = reduce_sum[axes=(0,)] bch
    bcj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bck:f32[] = div -2.0 bcj
    bcl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bck
    bcm:f32[200] = mul bcl bcc
    bcn:f32[] = reduce_sum[axes=(0,)] bcm
    bco:f32[] = mul 0.0010000000474974513 bci
    bcp:f32[] = sub bbx bco
    bcq:f32[] = mul 0.0010000000474974513 bcn
    bcr:f32[] = sub bbz bcq
    bcs:f32[200] = mul bcp a
    bct:f32[200] = add bcs bcr
    bcu:f32[200] = sub b bct
    bcv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bcw:f32[] = div -2.0 bcv
    bcx:f32[200] = mul a bcu
    bcy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bcw
    bcz:f32[200] = mul bcy bcx
    bda:f32[] = reduce_sum[axes=(0,)] bcz
    bdb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bdc:f32[] = div -2.0 bdb
    bdd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bdc
    bde:f32[200] = mul bdd bcu
    bdf:f32[] = reduce_sum[axes=(0,)] bde
    bdg:f32[] = mul 0.0010000000474974513 bda
    bdh:f32[] = sub bcp bdg
    bdi:f32[] = mul 0.0010000000474974513 bdf
    bdj:f32[] = sub bcr bdi
    bdk:f32[200] = mul bdh a
    bdl:f32[200] = add bdk bdj
    bdm:f32[200] = sub b bdl
    bdn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bdo:f32[] = div -2.0 bdn
    bdp:f32[200] = mul a bdm
    bdq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bdo
    bdr:f32[200] = mul bdq bdp
    bds:f32[] = reduce_sum[axes=(0,)] bdr
    bdt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bdu:f32[] = div -2.0 bdt
    bdv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bdu
    bdw:f32[200] = mul bdv bdm
    bdx:f32[] = reduce_sum[axes=(0,)] bdw
    bdy:f32[] = mul 0.0010000000474974513 bds
    bdz:f32[] = sub bdh bdy
    bea:f32[] = mul 0.0010000000474974513 bdx
    beb:f32[] = sub bdj bea
    bec:f32[200] = mul bdz a
    bed:f32[200] = add bec beb
    bee:f32[200] = sub b bed
    bef:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    beg:f32[] = div -2.0 bef
    beh:f32[200] = mul a bee
    bei:f32[] = convert_element_type[new_dtype=float32 weak_type=False] beg
    bej:f32[200] = mul bei beh
    bek:f32[] = reduce_sum[axes=(0,)] bej
    bel:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bem:f32[] = div -2.0 bel
    ben:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bem
    beo:f32[200] = mul ben bee
    bep:f32[] = reduce_sum[axes=(0,)] beo
    beq:f32[] = mul 0.0010000000474974513 bek
    ber:f32[] = sub bdz beq
    bes:f32[] = mul 0.0010000000474974513 bep
    bet:f32[] = sub beb bes
    beu:f32[200] = mul ber a
    bev:f32[200] = add beu bet
    bew:f32[200] = sub b bev
    bex:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bey:f32[] = div -2.0 bex
    bez:f32[200] = mul a bew
    bfa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bey
    bfb:f32[200] = mul bfa bez
    bfc:f32[] = reduce_sum[axes=(0,)] bfb
    bfd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bfe:f32[] = div -2.0 bfd
    bff:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bfe
    bfg:f32[200] = mul bff bew
    bfh:f32[] = reduce_sum[axes=(0,)] bfg
    bfi:f32[] = mul 0.0010000000474974513 bfc
    bfj:f32[] = sub ber bfi
    bfk:f32[] = mul 0.0010000000474974513 bfh
    bfl:f32[] = sub bet bfk
    bfm:f32[200] = mul bfj a
    bfn:f32[200] = add bfm bfl
    bfo:f32[200] = sub b bfn
    bfp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bfq:f32[] = div -2.0 bfp
    bfr:f32[200] = mul a bfo
    bfs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bfq
    bft:f32[200] = mul bfs bfr
    bfu:f32[] = reduce_sum[axes=(0,)] bft
    bfv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bfw:f32[] = div -2.0 bfv
    bfx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bfw
    bfy:f32[200] = mul bfx bfo
    bfz:f32[] = reduce_sum[axes=(0,)] bfy
    bga:f32[] = mul 0.0010000000474974513 bfu
    bgb:f32[] = sub bfj bga
    bgc:f32[] = mul 0.0010000000474974513 bfz
    bgd:f32[] = sub bfl bgc
    bge:f32[200] = mul bgb a
    bgf:f32[200] = add bge bgd
    bgg:f32[200] = sub b bgf
    bgh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bgi:f32[] = div -2.0 bgh
    bgj:f32[200] = mul a bgg
    bgk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bgi
    bgl:f32[200] = mul bgk bgj
    bgm:f32[] = reduce_sum[axes=(0,)] bgl
    bgn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bgo:f32[] = div -2.0 bgn
    bgp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bgo
    bgq:f32[200] = mul bgp bgg
    bgr:f32[] = reduce_sum[axes=(0,)] bgq
    bgs:f32[] = mul 0.0010000000474974513 bgm
    bgt:f32[] = sub bgb bgs
    bgu:f32[] = mul 0.0010000000474974513 bgr
    bgv:f32[] = sub bgd bgu
    bgw:f32[200] = mul bgt a
    bgx:f32[200] = add bgw bgv
    bgy:f32[200] = sub b bgx
    bgz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bha:f32[] = div -2.0 bgz
    bhb:f32[200] = mul a bgy
    bhc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bha
    bhd:f32[200] = mul bhc bhb
    bhe:f32[] = reduce_sum[axes=(0,)] bhd
    bhf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bhg:f32[] = div -2.0 bhf
    bhh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bhg
    bhi:f32[200] = mul bhh bgy
    bhj:f32[] = reduce_sum[axes=(0,)] bhi
    bhk:f32[] = mul 0.0010000000474974513 bhe
    bhl:f32[] = sub bgt bhk
    bhm:f32[] = mul 0.0010000000474974513 bhj
    bhn:f32[] = sub bgv bhm
    bho:f32[200] = mul bhl a
    bhp:f32[200] = add bho bhn
    bhq:f32[200] = sub b bhp
    bhr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bhs:f32[] = div -2.0 bhr
    bht:f32[200] = mul a bhq
    bhu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bhs
    bhv:f32[200] = mul bhu bht
    bhw:f32[] = reduce_sum[axes=(0,)] bhv
    bhx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bhy:f32[] = div -2.0 bhx
    bhz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bhy
    bia:f32[200] = mul bhz bhq
    bib:f32[] = reduce_sum[axes=(0,)] bia
    bic:f32[] = mul 0.0010000000474974513 bhw
    bid:f32[] = sub bhl bic
    bie:f32[] = mul 0.0010000000474974513 bib
    bif:f32[] = sub bhn bie
    big:f32[200] = mul bid a
    bih:f32[200] = add big bif
    bii:f32[200] = sub b bih
    bij:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bik:f32[] = div -2.0 bij
    bil:f32[200] = mul a bii
    bim:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bik
    bin:f32[200] = mul bim bil
    bio:f32[] = reduce_sum[axes=(0,)] bin
    bip:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    biq:f32[] = div -2.0 bip
    bir:f32[] = convert_element_type[new_dtype=float32 weak_type=False] biq
    bis:f32[200] = mul bir bii
    bit:f32[] = reduce_sum[axes=(0,)] bis
    biu:f32[] = mul 0.0010000000474974513 bio
    biv:f32[] = sub bid biu
    biw:f32[] = mul 0.0010000000474974513 bit
    bix:f32[] = sub bif biw
    biy:f32[200] = mul biv a
    biz:f32[200] = add biy bix
    bja:f32[200] = sub b biz
    bjb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bjc:f32[] = div -2.0 bjb
    bjd:f32[200] = mul a bja
    bje:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bjc
    bjf:f32[200] = mul bje bjd
    bjg:f32[] = reduce_sum[axes=(0,)] bjf
    bjh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bji:f32[] = div -2.0 bjh
    bjj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bji
    bjk:f32[200] = mul bjj bja
    bjl:f32[] = reduce_sum[axes=(0,)] bjk
    bjm:f32[] = mul 0.0010000000474974513 bjg
    bjn:f32[] = sub biv bjm
    bjo:f32[] = mul 0.0010000000474974513 bjl
    bjp:f32[] = sub bix bjo
    bjq:f32[200] = mul bjn a
    bjr:f32[200] = add bjq bjp
    bjs:f32[200] = sub b bjr
    bjt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bju:f32[] = div -2.0 bjt
    bjv:f32[200] = mul a bjs
    bjw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bju
    bjx:f32[200] = mul bjw bjv
    bjy:f32[] = reduce_sum[axes=(0,)] bjx
    bjz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bka:f32[] = div -2.0 bjz
    bkb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bka
    bkc:f32[200] = mul bkb bjs
    bkd:f32[] = reduce_sum[axes=(0,)] bkc
    bke:f32[] = mul 0.0010000000474974513 bjy
    bkf:f32[] = sub bjn bke
    bkg:f32[] = mul 0.0010000000474974513 bkd
    bkh:f32[] = sub bjp bkg
    bki:f32[200] = mul bkf a
    bkj:f32[200] = add bki bkh
    bkk:f32[200] = sub b bkj
    bkl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bkm:f32[] = div -2.0 bkl
    bkn:f32[200] = mul a bkk
    bko:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bkm
    bkp:f32[200] = mul bko bkn
    bkq:f32[] = reduce_sum[axes=(0,)] bkp
    bkr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bks:f32[] = div -2.0 bkr
    bkt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bks
    bku:f32[200] = mul bkt bkk
    bkv:f32[] = reduce_sum[axes=(0,)] bku
    bkw:f32[] = mul 0.0010000000474974513 bkq
    bkx:f32[] = sub bkf bkw
    bky:f32[] = mul 0.0010000000474974513 bkv
    bkz:f32[] = sub bkh bky
    bla:f32[200] = mul bkx a
    blb:f32[200] = add bla bkz
    blc:f32[200] = sub b blb
    bld:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ble:f32[] = div -2.0 bld
    blf:f32[200] = mul a blc
    blg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ble
    blh:f32[200] = mul blg blf
    bli:f32[] = reduce_sum[axes=(0,)] blh
    blj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    blk:f32[] = div -2.0 blj
    bll:f32[] = convert_element_type[new_dtype=float32 weak_type=False] blk
    blm:f32[200] = mul bll blc
    bln:f32[] = reduce_sum[axes=(0,)] blm
    blo:f32[] = mul 0.0010000000474974513 bli
    blp:f32[] = sub bkx blo
    blq:f32[] = mul 0.0010000000474974513 bln
    blr:f32[] = sub bkz blq
    bls:f32[200] = mul blp a
    blt:f32[200] = add bls blr
    blu:f32[200] = sub b blt
    blv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    blw:f32[] = div -2.0 blv
    blx:f32[200] = mul a blu
    bly:f32[] = convert_element_type[new_dtype=float32 weak_type=False] blw
    blz:f32[200] = mul bly blx
    bma:f32[] = reduce_sum[axes=(0,)] blz
    bmb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bmc:f32[] = div -2.0 bmb
    bmd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bmc
    bme:f32[200] = mul bmd blu
    bmf:f32[] = reduce_sum[axes=(0,)] bme
    bmg:f32[] = mul 0.0010000000474974513 bma
    bmh:f32[] = sub blp bmg
    bmi:f32[] = mul 0.0010000000474974513 bmf
    bmj:f32[] = sub blr bmi
    bmk:f32[200] = mul bmh a
    bml:f32[200] = add bmk bmj
    bmm:f32[200] = sub b bml
    bmn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bmo:f32[] = div -2.0 bmn
    bmp:f32[200] = mul a bmm
    bmq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bmo
    bmr:f32[200] = mul bmq bmp
    bms:f32[] = reduce_sum[axes=(0,)] bmr
    bmt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bmu:f32[] = div -2.0 bmt
    bmv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bmu
    bmw:f32[200] = mul bmv bmm
    bmx:f32[] = reduce_sum[axes=(0,)] bmw
    bmy:f32[] = mul 0.0010000000474974513 bms
    bmz:f32[] = sub bmh bmy
    bna:f32[] = mul 0.0010000000474974513 bmx
    bnb:f32[] = sub bmj bna
    bnc:f32[200] = mul bmz a
    bnd:f32[200] = add bnc bnb
    bne:f32[200] = sub b bnd
    bnf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bng:f32[] = div -2.0 bnf
    bnh:f32[200] = mul a bne
    bni:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bng
    bnj:f32[200] = mul bni bnh
    bnk:f32[] = reduce_sum[axes=(0,)] bnj
    bnl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bnm:f32[] = div -2.0 bnl
    bnn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bnm
    bno:f32[200] = mul bnn bne
    bnp:f32[] = reduce_sum[axes=(0,)] bno
    bnq:f32[] = mul 0.0010000000474974513 bnk
    bnr:f32[] = sub bmz bnq
    bns:f32[] = mul 0.0010000000474974513 bnp
    bnt:f32[] = sub bnb bns
    bnu:f32[200] = mul bnr a
    bnv:f32[200] = add bnu bnt
    bnw:f32[200] = sub b bnv
    bnx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bny:f32[] = div -2.0 bnx
    bnz:f32[200] = mul a bnw
    boa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bny
    bob:f32[200] = mul boa bnz
    boc:f32[] = reduce_sum[axes=(0,)] bob
    bod:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    boe:f32[] = div -2.0 bod
    bof:f32[] = convert_element_type[new_dtype=float32 weak_type=False] boe
    bog:f32[200] = mul bof bnw
    boh:f32[] = reduce_sum[axes=(0,)] bog
    boi:f32[] = mul 0.0010000000474974513 boc
    boj:f32[] = sub bnr boi
    bok:f32[] = mul 0.0010000000474974513 boh
    bol:f32[] = sub bnt bok
    bom:f32[200] = mul boj a
    bon:f32[200] = add bom bol
    boo:f32[200] = sub b bon
    bop:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    boq:f32[] = div -2.0 bop
    bor:f32[200] = mul a boo
    bos:f32[] = convert_element_type[new_dtype=float32 weak_type=False] boq
    bot:f32[200] = mul bos bor
    bou:f32[] = reduce_sum[axes=(0,)] bot
    bov:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bow:f32[] = div -2.0 bov
    box:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bow
    boy:f32[200] = mul box boo
    boz:f32[] = reduce_sum[axes=(0,)] boy
    bpa:f32[] = mul 0.0010000000474974513 bou
    bpb:f32[] = sub boj bpa
    bpc:f32[] = mul 0.0010000000474974513 boz
    bpd:f32[] = sub bol bpc
    bpe:f32[200] = mul bpb a
    bpf:f32[200] = add bpe bpd
    bpg:f32[200] = sub b bpf
    bph:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bpi:f32[] = div -2.0 bph
    bpj:f32[200] = mul a bpg
    bpk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bpi
    bpl:f32[200] = mul bpk bpj
    bpm:f32[] = reduce_sum[axes=(0,)] bpl
    bpn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bpo:f32[] = div -2.0 bpn
    bpp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bpo
    bpq:f32[200] = mul bpp bpg
    bpr:f32[] = reduce_sum[axes=(0,)] bpq
    bps:f32[] = mul 0.0010000000474974513 bpm
    bpt:f32[] = sub bpb bps
    bpu:f32[] = mul 0.0010000000474974513 bpr
    bpv:f32[] = sub bpd bpu
    bpw:f32[200] = mul bpt a
    bpx:f32[200] = add bpw bpv
    bpy:f32[200] = sub b bpx
    bpz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bqa:f32[] = div -2.0 bpz
    bqb:f32[200] = mul a bpy
    bqc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bqa
    bqd:f32[200] = mul bqc bqb
    bqe:f32[] = reduce_sum[axes=(0,)] bqd
    bqf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bqg:f32[] = div -2.0 bqf
    bqh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bqg
    bqi:f32[200] = mul bqh bpy
    bqj:f32[] = reduce_sum[axes=(0,)] bqi
    bqk:f32[] = mul 0.0010000000474974513 bqe
    bql:f32[] = sub bpt bqk
    bqm:f32[] = mul 0.0010000000474974513 bqj
    bqn:f32[] = sub bpv bqm
    bqo:f32[200] = mul bql a
    bqp:f32[200] = add bqo bqn
    bqq:f32[200] = sub b bqp
    bqr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bqs:f32[] = div -2.0 bqr
    bqt:f32[200] = mul a bqq
    bqu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bqs
    bqv:f32[200] = mul bqu bqt
    bqw:f32[] = reduce_sum[axes=(0,)] bqv
    bqx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bqy:f32[] = div -2.0 bqx
    bqz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bqy
    bra:f32[200] = mul bqz bqq
    brb:f32[] = reduce_sum[axes=(0,)] bra
    brc:f32[] = mul 0.0010000000474974513 bqw
    brd:f32[] = sub bql brc
    bre:f32[] = mul 0.0010000000474974513 brb
    brf:f32[] = sub bqn bre
    brg:f32[200] = mul brd a
    brh:f32[200] = add brg brf
    bri:f32[200] = sub b brh
    brj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    brk:f32[] = div -2.0 brj
    brl:f32[200] = mul a bri
    brm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] brk
    brn:f32[200] = mul brm brl
    bro:f32[] = reduce_sum[axes=(0,)] brn
    brp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    brq:f32[] = div -2.0 brp
    brr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] brq
    brs:f32[200] = mul brr bri
    brt:f32[] = reduce_sum[axes=(0,)] brs
    bru:f32[] = mul 0.0010000000474974513 bro
    brv:f32[] = sub brd bru
    brw:f32[] = mul 0.0010000000474974513 brt
    brx:f32[] = sub brf brw
    bry:f32[200] = mul brv a
    brz:f32[200] = add bry brx
    bsa:f32[200] = sub b brz
    bsb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bsc:f32[] = div -2.0 bsb
    bsd:f32[200] = mul a bsa
    bse:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bsc
    bsf:f32[200] = mul bse bsd
    bsg:f32[] = reduce_sum[axes=(0,)] bsf
    bsh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bsi:f32[] = div -2.0 bsh
    bsj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bsi
    bsk:f32[200] = mul bsj bsa
    bsl:f32[] = reduce_sum[axes=(0,)] bsk
    bsm:f32[] = mul 0.0010000000474974513 bsg
    bsn:f32[] = sub brv bsm
    bso:f32[] = mul 0.0010000000474974513 bsl
    bsp:f32[] = sub brx bso
    bsq:f32[200] = mul bsn a
    bsr:f32[200] = add bsq bsp
    bss:f32[200] = sub b bsr
    bst:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bsu:f32[] = div -2.0 bst
    bsv:f32[200] = mul a bss
    bsw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bsu
    bsx:f32[200] = mul bsw bsv
    bsy:f32[] = reduce_sum[axes=(0,)] bsx
    bsz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bta:f32[] = div -2.0 bsz
    btb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bta
    btc:f32[200] = mul btb bss
    btd:f32[] = reduce_sum[axes=(0,)] btc
    bte:f32[] = mul 0.0010000000474974513 bsy
    btf:f32[] = sub bsn bte
    btg:f32[] = mul 0.0010000000474974513 btd
    bth:f32[] = sub bsp btg
    bti:f32[200] = mul btf a
    btj:f32[200] = add bti bth
    btk:f32[200] = sub b btj
    btl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    btm:f32[] = div -2.0 btl
    btn:f32[200] = mul a btk
    bto:f32[] = convert_element_type[new_dtype=float32 weak_type=False] btm
    btp:f32[200] = mul bto btn
    btq:f32[] = reduce_sum[axes=(0,)] btp
    btr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bts:f32[] = div -2.0 btr
    btt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bts
    btu:f32[200] = mul btt btk
    btv:f32[] = reduce_sum[axes=(0,)] btu
    btw:f32[] = mul 0.0010000000474974513 btq
    btx:f32[] = sub btf btw
    bty:f32[] = mul 0.0010000000474974513 btv
    btz:f32[] = sub bth bty
    bua:f32[200] = mul btx a
    bub:f32[200] = add bua btz
    buc:f32[200] = sub b bub
    bud:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bue:f32[] = div -2.0 bud
    buf:f32[200] = mul a buc
    bug:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bue
    buh:f32[200] = mul bug buf
    bui:f32[] = reduce_sum[axes=(0,)] buh
    buj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    buk:f32[] = div -2.0 buj
    bul:f32[] = convert_element_type[new_dtype=float32 weak_type=False] buk
    bum:f32[200] = mul bul buc
    bun:f32[] = reduce_sum[axes=(0,)] bum
    buo:f32[] = mul 0.0010000000474974513 bui
    bup:f32[] = sub btx buo
    buq:f32[] = mul 0.0010000000474974513 bun
    bur:f32[] = sub btz buq
    bus:f32[200] = mul bup a
    but:f32[200] = add bus bur
    buu:f32[200] = sub b but
    buv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    buw:f32[] = div -2.0 buv
    bux:f32[200] = mul a buu
    buy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] buw
    buz:f32[200] = mul buy bux
    bva:f32[] = reduce_sum[axes=(0,)] buz
    bvb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bvc:f32[] = div -2.0 bvb
    bvd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bvc
    bve:f32[200] = mul bvd buu
    bvf:f32[] = reduce_sum[axes=(0,)] bve
    bvg:f32[] = mul 0.0010000000474974513 bva
    bvh:f32[] = sub bup bvg
    bvi:f32[] = mul 0.0010000000474974513 bvf
    bvj:f32[] = sub bur bvi
    bvk:f32[200] = mul bvh a
    bvl:f32[200] = add bvk bvj
    bvm:f32[200] = sub b bvl
    bvn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bvo:f32[] = div -2.0 bvn
    bvp:f32[200] = mul a bvm
    bvq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bvo
    bvr:f32[200] = mul bvq bvp
    bvs:f32[] = reduce_sum[axes=(0,)] bvr
    bvt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bvu:f32[] = div -2.0 bvt
    bvv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bvu
    bvw:f32[200] = mul bvv bvm
    bvx:f32[] = reduce_sum[axes=(0,)] bvw
    bvy:f32[] = mul 0.0010000000474974513 bvs
    bvz:f32[] = sub bvh bvy
    bwa:f32[] = mul 0.0010000000474974513 bvx
    bwb:f32[] = sub bvj bwa
    bwc:f32[200] = mul bvz a
    bwd:f32[200] = add bwc bwb
    bwe:f32[200] = sub b bwd
    bwf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bwg:f32[] = div -2.0 bwf
    bwh:f32[200] = mul a bwe
    bwi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bwg
    bwj:f32[200] = mul bwi bwh
    bwk:f32[] = reduce_sum[axes=(0,)] bwj
    bwl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bwm:f32[] = div -2.0 bwl
    bwn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bwm
    bwo:f32[200] = mul bwn bwe
    bwp:f32[] = reduce_sum[axes=(0,)] bwo
    bwq:f32[] = mul 0.0010000000474974513 bwk
    bwr:f32[] = sub bvz bwq
    bws:f32[] = mul 0.0010000000474974513 bwp
    bwt:f32[] = sub bwb bws
    bwu:f32[200] = mul bwr a
    bwv:f32[200] = add bwu bwt
    bww:f32[200] = sub b bwv
    bwx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bwy:f32[] = div -2.0 bwx
    bwz:f32[200] = mul a bww
    bxa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bwy
    bxb:f32[200] = mul bxa bwz
    bxc:f32[] = reduce_sum[axes=(0,)] bxb
    bxd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bxe:f32[] = div -2.0 bxd
    bxf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bxe
    bxg:f32[200] = mul bxf bww
    bxh:f32[] = reduce_sum[axes=(0,)] bxg
    bxi:f32[] = mul 0.0010000000474974513 bxc
    bxj:f32[] = sub bwr bxi
    bxk:f32[] = mul 0.0010000000474974513 bxh
    bxl:f32[] = sub bwt bxk
    bxm:f32[200] = mul bxj a
    bxn:f32[200] = add bxm bxl
    bxo:f32[200] = sub b bxn
    bxp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bxq:f32[] = div -2.0 bxp
    bxr:f32[200] = mul a bxo
    bxs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bxq
    bxt:f32[200] = mul bxs bxr
    bxu:f32[] = reduce_sum[axes=(0,)] bxt
    bxv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bxw:f32[] = div -2.0 bxv
    bxx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bxw
    bxy:f32[200] = mul bxx bxo
    bxz:f32[] = reduce_sum[axes=(0,)] bxy
    bya:f32[] = mul 0.0010000000474974513 bxu
    byb:f32[] = sub bxj bya
    byc:f32[] = mul 0.0010000000474974513 bxz
    byd:f32[] = sub bxl byc
    bye:f32[200] = mul byb a
    byf:f32[200] = add bye byd
    byg:f32[200] = sub b byf
    byh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    byi:f32[] = div -2.0 byh
    byj:f32[200] = mul a byg
    byk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] byi
    byl:f32[200] = mul byk byj
    bym:f32[] = reduce_sum[axes=(0,)] byl
    byn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    byo:f32[] = div -2.0 byn
    byp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] byo
    byq:f32[200] = mul byp byg
    byr:f32[] = reduce_sum[axes=(0,)] byq
    bys:f32[] = mul 0.0010000000474974513 bym
    byt:f32[] = sub byb bys
    byu:f32[] = mul 0.0010000000474974513 byr
    byv:f32[] = sub byd byu
    byw:f32[200] = mul byt a
    byx:f32[200] = add byw byv
    byy:f32[200] = sub b byx
    byz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bza:f32[] = div -2.0 byz
    bzb:f32[200] = mul a byy
    bzc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bza
    bzd:f32[200] = mul bzc bzb
    bze:f32[] = reduce_sum[axes=(0,)] bzd
    bzf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bzg:f32[] = div -2.0 bzf
    bzh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bzg
    bzi:f32[200] = mul bzh byy
    bzj:f32[] = reduce_sum[axes=(0,)] bzi
    bzk:f32[] = mul 0.0010000000474974513 bze
    bzl:f32[] = sub byt bzk
    bzm:f32[] = mul 0.0010000000474974513 bzj
    bzn:f32[] = sub byv bzm
    bzo:f32[200] = mul bzl a
    bzp:f32[200] = add bzo bzn
    bzq:f32[200] = sub b bzp
    bzr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bzs:f32[] = div -2.0 bzr
    bzt:f32[200] = mul a bzq
    bzu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bzs
    bzv:f32[200] = mul bzu bzt
    bzw:f32[] = reduce_sum[axes=(0,)] bzv
    bzx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bzy:f32[] = div -2.0 bzx
    bzz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bzy
    caa:f32[200] = mul bzz bzq
    cab:f32[] = reduce_sum[axes=(0,)] caa
    cac:f32[] = mul 0.0010000000474974513 bzw
    cad:f32[] = sub bzl cac
    cae:f32[] = mul 0.0010000000474974513 cab
    caf:f32[] = sub bzn cae
    cag:f32[200] = mul cad a
    cah:f32[200] = add cag caf
    cai:f32[200] = sub b cah
    caj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cak:f32[] = div -2.0 caj
    cal:f32[200] = mul a cai
    cam:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cak
    can:f32[200] = mul cam cal
    cao:f32[] = reduce_sum[axes=(0,)] can
    cap:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    caq:f32[] = div -2.0 cap
    car:f32[] = convert_element_type[new_dtype=float32 weak_type=False] caq
    cas:f32[200] = mul car cai
    cat:f32[] = reduce_sum[axes=(0,)] cas
    cau:f32[] = mul 0.0010000000474974513 cao
    cav:f32[] = sub cad cau
    caw:f32[] = mul 0.0010000000474974513 cat
    cax:f32[] = sub caf caw
    cay:f32[200] = mul cav a
    caz:f32[200] = add cay cax
    cba:f32[200] = sub b caz
    cbb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cbc:f32[] = div -2.0 cbb
    cbd:f32[200] = mul a cba
    cbe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cbc
    cbf:f32[200] = mul cbe cbd
    cbg:f32[] = reduce_sum[axes=(0,)] cbf
    cbh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cbi:f32[] = div -2.0 cbh
    cbj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cbi
    cbk:f32[200] = mul cbj cba
    cbl:f32[] = reduce_sum[axes=(0,)] cbk
    cbm:f32[] = mul 0.0010000000474974513 cbg
    cbn:f32[] = sub cav cbm
    cbo:f32[] = mul 0.0010000000474974513 cbl
    cbp:f32[] = sub cax cbo
    cbq:f32[200] = mul cbn a
    cbr:f32[200] = add cbq cbp
    cbs:f32[200] = sub b cbr
    cbt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cbu:f32[] = div -2.0 cbt
    cbv:f32[200] = mul a cbs
    cbw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cbu
    cbx:f32[200] = mul cbw cbv
    cby:f32[] = reduce_sum[axes=(0,)] cbx
    cbz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cca:f32[] = div -2.0 cbz
    ccb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cca
    ccc:f32[200] = mul ccb cbs
    ccd:f32[] = reduce_sum[axes=(0,)] ccc
    cce:f32[] = mul 0.0010000000474974513 cby
    ccf:f32[] = sub cbn cce
    ccg:f32[] = mul 0.0010000000474974513 ccd
    cch:f32[] = sub cbp ccg
    cci:f32[200] = mul ccf a
    ccj:f32[200] = add cci cch
    cck:f32[200] = sub b ccj
    ccl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ccm:f32[] = div -2.0 ccl
    ccn:f32[200] = mul a cck
    cco:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ccm
    ccp:f32[200] = mul cco ccn
    ccq:f32[] = reduce_sum[axes=(0,)] ccp
    ccr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ccs:f32[] = div -2.0 ccr
    cct:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ccs
    ccu:f32[200] = mul cct cck
    ccv:f32[] = reduce_sum[axes=(0,)] ccu
    ccw:f32[] = mul 0.0010000000474974513 ccq
    ccx:f32[] = sub ccf ccw
    ccy:f32[] = mul 0.0010000000474974513 ccv
    ccz:f32[] = sub cch ccy
    cda:f32[200] = mul ccx a
    cdb:f32[200] = add cda ccz
    cdc:f32[200] = sub b cdb
    cdd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cde:f32[] = div -2.0 cdd
    cdf:f32[200] = mul a cdc
    cdg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cde
    cdh:f32[200] = mul cdg cdf
    cdi:f32[] = reduce_sum[axes=(0,)] cdh
    cdj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cdk:f32[] = div -2.0 cdj
    cdl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cdk
    cdm:f32[200] = mul cdl cdc
    cdn:f32[] = reduce_sum[axes=(0,)] cdm
    cdo:f32[] = mul 0.0010000000474974513 cdi
    cdp:f32[] = sub ccx cdo
    cdq:f32[] = mul 0.0010000000474974513 cdn
    cdr:f32[] = sub ccz cdq
    cds:f32[200] = mul cdp a
    cdt:f32[200] = add cds cdr
    cdu:f32[200] = sub b cdt
    cdv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cdw:f32[] = div -2.0 cdv
    cdx:f32[200] = mul a cdu
    cdy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cdw
    cdz:f32[200] = mul cdy cdx
    cea:f32[] = reduce_sum[axes=(0,)] cdz
    ceb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cec:f32[] = div -2.0 ceb
    ced:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cec
    cee:f32[200] = mul ced cdu
    cef:f32[] = reduce_sum[axes=(0,)] cee
    ceg:f32[] = mul 0.0010000000474974513 cea
    ceh:f32[] = sub cdp ceg
    cei:f32[] = mul 0.0010000000474974513 cef
    cej:f32[] = sub cdr cei
    cek:f32[200] = mul ceh a
    cel:f32[200] = add cek cej
    cem:f32[200] = sub b cel
    cen:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ceo:f32[] = div -2.0 cen
    cep:f32[200] = mul a cem
    ceq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ceo
    cer:f32[200] = mul ceq cep
    ces:f32[] = reduce_sum[axes=(0,)] cer
    cet:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ceu:f32[] = div -2.0 cet
    cev:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ceu
    cew:f32[200] = mul cev cem
    cex:f32[] = reduce_sum[axes=(0,)] cew
    cey:f32[] = mul 0.0010000000474974513 ces
    cez:f32[] = sub ceh cey
    cfa:f32[] = mul 0.0010000000474974513 cex
    cfb:f32[] = sub cej cfa
    cfc:f32[200] = mul cez a
    cfd:f32[200] = add cfc cfb
    cfe:f32[200] = sub b cfd
    cff:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cfg:f32[] = div -2.0 cff
    cfh:f32[200] = mul a cfe
    cfi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cfg
    cfj:f32[200] = mul cfi cfh
    cfk:f32[] = reduce_sum[axes=(0,)] cfj
    cfl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cfm:f32[] = div -2.0 cfl
    cfn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cfm
    cfo:f32[200] = mul cfn cfe
    cfp:f32[] = reduce_sum[axes=(0,)] cfo
    cfq:f32[] = mul 0.0010000000474974513 cfk
    cfr:f32[] = sub cez cfq
    cfs:f32[] = mul 0.0010000000474974513 cfp
    cft:f32[] = sub cfb cfs
    cfu:f32[200] = mul cfr a
    cfv:f32[200] = add cfu cft
    cfw:f32[200] = sub b cfv
    cfx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cfy:f32[] = div -2.0 cfx
    cfz:f32[200] = mul a cfw
    cga:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cfy
    cgb:f32[200] = mul cga cfz
    cgc:f32[] = reduce_sum[axes=(0,)] cgb
    cgd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cge:f32[] = div -2.0 cgd
    cgf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cge
    cgg:f32[200] = mul cgf cfw
    cgh:f32[] = reduce_sum[axes=(0,)] cgg
    cgi:f32[] = mul 0.0010000000474974513 cgc
    cgj:f32[] = sub cfr cgi
    cgk:f32[] = mul 0.0010000000474974513 cgh
    cgl:f32[] = sub cft cgk
    cgm:f32[200] = mul cgj a
    cgn:f32[200] = add cgm cgl
    cgo:f32[200] = sub b cgn
    cgp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cgq:f32[] = div -2.0 cgp
    cgr:f32[200] = mul a cgo
    cgs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cgq
    cgt:f32[200] = mul cgs cgr
    cgu:f32[] = reduce_sum[axes=(0,)] cgt
    cgv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cgw:f32[] = div -2.0 cgv
    cgx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cgw
    cgy:f32[200] = mul cgx cgo
    cgz:f32[] = reduce_sum[axes=(0,)] cgy
    cha:f32[] = mul 0.0010000000474974513 cgu
    chb:f32[] = sub cgj cha
    chc:f32[] = mul 0.0010000000474974513 cgz
    chd:f32[] = sub cgl chc
    che:f32[200] = mul chb a
    chf:f32[200] = add che chd
    chg:f32[200] = sub b chf
    chh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    chi:f32[] = div -2.0 chh
    chj:f32[200] = mul a chg
    chk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] chi
    chl:f32[200] = mul chk chj
    chm:f32[] = reduce_sum[axes=(0,)] chl
    chn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cho:f32[] = div -2.0 chn
    chp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cho
    chq:f32[200] = mul chp chg
    chr:f32[] = reduce_sum[axes=(0,)] chq
    chs:f32[] = mul 0.0010000000474974513 chm
    cht:f32[] = sub chb chs
    chu:f32[] = mul 0.0010000000474974513 chr
    chv:f32[] = sub chd chu
    chw:f32[200] = mul cht a
    chx:f32[200] = add chw chv
    chy:f32[200] = sub b chx
    chz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cia:f32[] = div -2.0 chz
    cib:f32[200] = mul a chy
    cic:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cia
    cid:f32[200] = mul cic cib
    cie:f32[] = reduce_sum[axes=(0,)] cid
    cif:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cig:f32[] = div -2.0 cif
    cih:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cig
    cii:f32[200] = mul cih chy
    cij:f32[] = reduce_sum[axes=(0,)] cii
    cik:f32[] = mul 0.0010000000474974513 cie
    cil:f32[] = sub cht cik
    cim:f32[] = mul 0.0010000000474974513 cij
    cin:f32[] = sub chv cim
    cio:f32[200] = mul cil a
    cip:f32[200] = add cio cin
    ciq:f32[200] = sub b cip
    cir:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cis:f32[] = div -2.0 cir
    cit:f32[200] = mul a ciq
    ciu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cis
    civ:f32[200] = mul ciu cit
    ciw:f32[] = reduce_sum[axes=(0,)] civ
    cix:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ciy:f32[] = div -2.0 cix
    ciz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ciy
    cja:f32[200] = mul ciz ciq
    cjb:f32[] = reduce_sum[axes=(0,)] cja
    cjc:f32[] = mul 0.0010000000474974513 ciw
    cjd:f32[] = sub cil cjc
    cje:f32[] = mul 0.0010000000474974513 cjb
    cjf:f32[] = sub cin cje
    cjg:f32[200] = mul cjd a
    cjh:f32[200] = add cjg cjf
    cji:f32[200] = sub b cjh
    cjj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cjk:f32[] = div -2.0 cjj
    cjl:f32[200] = mul a cji
    cjm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cjk
    cjn:f32[200] = mul cjm cjl
    cjo:f32[] = reduce_sum[axes=(0,)] cjn
    cjp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cjq:f32[] = div -2.0 cjp
    cjr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cjq
    cjs:f32[200] = mul cjr cji
    cjt:f32[] = reduce_sum[axes=(0,)] cjs
    cju:f32[] = mul 0.0010000000474974513 cjo
    cjv:f32[] = sub cjd cju
    cjw:f32[] = mul 0.0010000000474974513 cjt
    cjx:f32[] = sub cjf cjw
    cjy:f32[200] = mul cjv a
    cjz:f32[200] = add cjy cjx
    cka:f32[200] = sub b cjz
    ckb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ckc:f32[] = div -2.0 ckb
    ckd:f32[200] = mul a cka
    cke:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ckc
    ckf:f32[200] = mul cke ckd
    ckg:f32[] = reduce_sum[axes=(0,)] ckf
    ckh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cki:f32[] = div -2.0 ckh
    ckj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cki
    ckk:f32[200] = mul ckj cka
    ckl:f32[] = reduce_sum[axes=(0,)] ckk
    ckm:f32[] = mul 0.0010000000474974513 ckg
    ckn:f32[] = sub cjv ckm
    cko:f32[] = mul 0.0010000000474974513 ckl
    ckp:f32[] = sub cjx cko
    ckq:f32[200] = mul ckn a
    ckr:f32[200] = add ckq ckp
    cks:f32[200] = sub b ckr
    ckt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cku:f32[] = div -2.0 ckt
    ckv:f32[200] = mul a cks
    ckw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cku
    ckx:f32[200] = mul ckw ckv
    cky:f32[] = reduce_sum[axes=(0,)] ckx
    ckz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cla:f32[] = div -2.0 ckz
    clb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cla
    clc:f32[200] = mul clb cks
    cld:f32[] = reduce_sum[axes=(0,)] clc
    cle:f32[] = mul 0.0010000000474974513 cky
    clf:f32[] = sub ckn cle
    clg:f32[] = mul 0.0010000000474974513 cld
    clh:f32[] = sub ckp clg
    cli:f32[200] = mul clf a
    clj:f32[200] = add cli clh
    clk:f32[200] = sub b clj
    cll:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    clm:f32[] = div -2.0 cll
    cln:f32[200] = mul a clk
    clo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] clm
    clp:f32[200] = mul clo cln
    clq:f32[] = reduce_sum[axes=(0,)] clp
    clr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cls:f32[] = div -2.0 clr
    clt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cls
    clu:f32[200] = mul clt clk
    clv:f32[] = reduce_sum[axes=(0,)] clu
    clw:f32[] = mul 0.0010000000474974513 clq
    clx:f32[] = sub clf clw
    cly:f32[] = mul 0.0010000000474974513 clv
    clz:f32[] = sub clh cly
    cma:f32[200] = mul clx a
    cmb:f32[200] = add cma clz
    cmc:f32[200] = sub b cmb
    cmd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cme:f32[] = div -2.0 cmd
    cmf:f32[200] = mul a cmc
    cmg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cme
    cmh:f32[200] = mul cmg cmf
    cmi:f32[] = reduce_sum[axes=(0,)] cmh
    cmj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cmk:f32[] = div -2.0 cmj
    cml:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cmk
    cmm:f32[200] = mul cml cmc
    cmn:f32[] = reduce_sum[axes=(0,)] cmm
    cmo:f32[] = mul 0.0010000000474974513 cmi
    cmp:f32[] = sub clx cmo
    cmq:f32[] = mul 0.0010000000474974513 cmn
    cmr:f32[] = sub clz cmq
    cms:f32[200] = mul cmp a
    cmt:f32[200] = add cms cmr
    cmu:f32[200] = sub b cmt
    cmv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cmw:f32[] = div -2.0 cmv
    cmx:f32[200] = mul a cmu
    cmy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cmw
    cmz:f32[200] = mul cmy cmx
    cna:f32[] = reduce_sum[axes=(0,)] cmz
    cnb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cnc:f32[] = div -2.0 cnb
    cnd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cnc
    cne:f32[200] = mul cnd cmu
    cnf:f32[] = reduce_sum[axes=(0,)] cne
    cng:f32[] = mul 0.0010000000474974513 cna
    cnh:f32[] = sub cmp cng
    cni:f32[] = mul 0.0010000000474974513 cnf
    cnj:f32[] = sub cmr cni
    cnk:f32[200] = mul cnh a
    cnl:f32[200] = add cnk cnj
    cnm:f32[200] = sub b cnl
    cnn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cno:f32[] = div -2.0 cnn
    cnp:f32[200] = mul a cnm
    cnq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cno
    cnr:f32[200] = mul cnq cnp
    cns:f32[] = reduce_sum[axes=(0,)] cnr
    cnt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cnu:f32[] = div -2.0 cnt
    cnv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cnu
    cnw:f32[200] = mul cnv cnm
    cnx:f32[] = reduce_sum[axes=(0,)] cnw
    cny:f32[] = mul 0.0010000000474974513 cns
    cnz:f32[] = sub cnh cny
    coa:f32[] = mul 0.0010000000474974513 cnx
    cob:f32[] = sub cnj coa
    coc:f32[200] = mul cnz a
    cod:f32[200] = add coc cob
    coe:f32[200] = sub b cod
    cof:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cog:f32[] = div -2.0 cof
    coh:f32[200] = mul a coe
    coi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cog
    coj:f32[200] = mul coi coh
    cok:f32[] = reduce_sum[axes=(0,)] coj
    col:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    com:f32[] = div -2.0 col
    con:f32[] = convert_element_type[new_dtype=float32 weak_type=False] com
    coo:f32[200] = mul con coe
    cop:f32[] = reduce_sum[axes=(0,)] coo
    coq:f32[] = mul 0.0010000000474974513 cok
    cor:f32[] = sub cnz coq
    cos:f32[] = mul 0.0010000000474974513 cop
    cot:f32[] = sub cob cos
    cou:f32[200] = mul cor a
    cov:f32[200] = add cou cot
    cow:f32[200] = sub b cov
    cox:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    coy:f32[] = div -2.0 cox
    coz:f32[200] = mul a cow
    cpa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] coy
    cpb:f32[200] = mul cpa coz
    cpc:f32[] = reduce_sum[axes=(0,)] cpb
    cpd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cpe:f32[] = div -2.0 cpd
    cpf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cpe
    cpg:f32[200] = mul cpf cow
    cph:f32[] = reduce_sum[axes=(0,)] cpg
    cpi:f32[] = mul 0.0010000000474974513 cpc
    cpj:f32[] = sub cor cpi
    cpk:f32[] = mul 0.0010000000474974513 cph
    cpl:f32[] = sub cot cpk
    cpm:f32[200] = mul cpj a
    cpn:f32[200] = add cpm cpl
    cpo:f32[200] = sub b cpn
    cpp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cpq:f32[] = div -2.0 cpp
    cpr:f32[200] = mul a cpo
    cps:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cpq
    cpt:f32[200] = mul cps cpr
    cpu:f32[] = reduce_sum[axes=(0,)] cpt
    cpv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cpw:f32[] = div -2.0 cpv
    cpx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cpw
    cpy:f32[200] = mul cpx cpo
    cpz:f32[] = reduce_sum[axes=(0,)] cpy
    cqa:f32[] = mul 0.0010000000474974513 cpu
    cqb:f32[] = sub cpj cqa
    cqc:f32[] = mul 0.0010000000474974513 cpz
    cqd:f32[] = sub cpl cqc
    cqe:f32[200] = mul cqb a
    cqf:f32[200] = add cqe cqd
    cqg:f32[200] = sub b cqf
    cqh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cqi:f32[] = div -2.0 cqh
    cqj:f32[200] = mul a cqg
    cqk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cqi
    cql:f32[200] = mul cqk cqj
    cqm:f32[] = reduce_sum[axes=(0,)] cql
    cqn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cqo:f32[] = div -2.0 cqn
    cqp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cqo
    cqq:f32[200] = mul cqp cqg
    cqr:f32[] = reduce_sum[axes=(0,)] cqq
    cqs:f32[] = mul 0.0010000000474974513 cqm
    cqt:f32[] = sub cqb cqs
    cqu:f32[] = mul 0.0010000000474974513 cqr
    cqv:f32[] = sub cqd cqu
    cqw:f32[200] = mul cqt a
    cqx:f32[200] = add cqw cqv
    cqy:f32[200] = sub b cqx
    cqz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cra:f32[] = div -2.0 cqz
    crb:f32[200] = mul a cqy
    crc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cra
    crd:f32[200] = mul crc crb
    cre:f32[] = reduce_sum[axes=(0,)] crd
    crf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    crg:f32[] = div -2.0 crf
    crh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] crg
    cri:f32[200] = mul crh cqy
    crj:f32[] = reduce_sum[axes=(0,)] cri
    crk:f32[] = mul 0.0010000000474974513 cre
    crl:f32[] = sub cqt crk
    crm:f32[] = mul 0.0010000000474974513 crj
    crn:f32[] = sub cqv crm
    cro:f32[200] = mul crl a
    crp:f32[200] = add cro crn
    crq:f32[200] = sub b crp
    crr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    crs:f32[] = div -2.0 crr
    crt:f32[200] = mul a crq
    cru:f32[] = convert_element_type[new_dtype=float32 weak_type=False] crs
    crv:f32[200] = mul cru crt
    crw:f32[] = reduce_sum[axes=(0,)] crv
    crx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cry:f32[] = div -2.0 crx
    crz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cry
    csa:f32[200] = mul crz crq
    csb:f32[] = reduce_sum[axes=(0,)] csa
    csc:f32[] = mul 0.0010000000474974513 crw
    csd:f32[] = sub crl csc
    cse:f32[] = mul 0.0010000000474974513 csb
    csf:f32[] = sub crn cse
    csg:f32[200] = mul csd a
    csh:f32[200] = add csg csf
    csi:f32[200] = sub b csh
    csj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    csk:f32[] = div -2.0 csj
    csl:f32[200] = mul a csi
    csm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] csk
    csn:f32[200] = mul csm csl
    cso:f32[] = reduce_sum[axes=(0,)] csn
    csp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    csq:f32[] = div -2.0 csp
    csr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] csq
    css:f32[200] = mul csr csi
    cst:f32[] = reduce_sum[axes=(0,)] css
    csu:f32[] = mul 0.0010000000474974513 cso
    csv:f32[] = sub csd csu
    csw:f32[] = mul 0.0010000000474974513 cst
    csx:f32[] = sub csf csw
    csy:f32[200] = mul csv a
    csz:f32[200] = add csy csx
    cta:f32[200] = sub b csz
    ctb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ctc:f32[] = div -2.0 ctb
    ctd:f32[200] = mul a cta
    cte:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ctc
    ctf:f32[200] = mul cte ctd
    ctg:f32[] = reduce_sum[axes=(0,)] ctf
    cth:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cti:f32[] = div -2.0 cth
    ctj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cti
    ctk:f32[200] = mul ctj cta
    ctl:f32[] = reduce_sum[axes=(0,)] ctk
    ctm:f32[] = mul 0.0010000000474974513 ctg
    ctn:f32[] = sub csv ctm
    cto:f32[] = mul 0.0010000000474974513 ctl
    ctp:f32[] = sub csx cto
    ctq:f32[200] = mul ctn a
    ctr:f32[200] = add ctq ctp
    cts:f32[200] = sub b ctr
    ctt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ctu:f32[] = div -2.0 ctt
    ctv:f32[200] = mul a cts
    ctw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ctu
    ctx:f32[200] = mul ctw ctv
    cty:f32[] = reduce_sum[axes=(0,)] ctx
    ctz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cua:f32[] = div -2.0 ctz
    cub:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cua
    cuc:f32[200] = mul cub cts
    cud:f32[] = reduce_sum[axes=(0,)] cuc
    cue:f32[] = mul 0.0010000000474974513 cty
    cuf:f32[] = sub ctn cue
    cug:f32[] = mul 0.0010000000474974513 cud
    cuh:f32[] = sub ctp cug
    cui:f32[200] = mul cuf a
    cuj:f32[200] = add cui cuh
    cuk:f32[200] = sub b cuj
    cul:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cum:f32[] = div -2.0 cul
    cun:f32[200] = mul a cuk
    cuo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cum
    cup:f32[200] = mul cuo cun
    cuq:f32[] = reduce_sum[axes=(0,)] cup
    cur:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cus:f32[] = div -2.0 cur
    cut:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cus
    cuu:f32[200] = mul cut cuk
    cuv:f32[] = reduce_sum[axes=(0,)] cuu
    cuw:f32[] = mul 0.0010000000474974513 cuq
    cux:f32[] = sub cuf cuw
    cuy:f32[] = mul 0.0010000000474974513 cuv
    cuz:f32[] = sub cuh cuy
    cva:f32[200] = mul cux a
    cvb:f32[200] = add cva cuz
    cvc:f32[200] = sub b cvb
    cvd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cve:f32[] = div -2.0 cvd
    cvf:f32[200] = mul a cvc
    cvg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cve
    cvh:f32[200] = mul cvg cvf
    cvi:f32[] = reduce_sum[axes=(0,)] cvh
    cvj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cvk:f32[] = div -2.0 cvj
    cvl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cvk
    cvm:f32[200] = mul cvl cvc
    cvn:f32[] = reduce_sum[axes=(0,)] cvm
    cvo:f32[] = mul 0.0010000000474974513 cvi
    cvp:f32[] = sub cux cvo
    cvq:f32[] = mul 0.0010000000474974513 cvn
    cvr:f32[] = sub cuz cvq
    cvs:f32[200] = mul cvp a
    cvt:f32[200] = add cvs cvr
    cvu:f32[200] = sub b cvt
    cvv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cvw:f32[] = div -2.0 cvv
    cvx:f32[200] = mul a cvu
    cvy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cvw
    cvz:f32[200] = mul cvy cvx
    cwa:f32[] = reduce_sum[axes=(0,)] cvz
    cwb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cwc:f32[] = div -2.0 cwb
    cwd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cwc
    cwe:f32[200] = mul cwd cvu
    cwf:f32[] = reduce_sum[axes=(0,)] cwe
    cwg:f32[] = mul 0.0010000000474974513 cwa
    cwh:f32[] = sub cvp cwg
    cwi:f32[] = mul 0.0010000000474974513 cwf
    cwj:f32[] = sub cvr cwi
    cwk:f32[200] = mul cwh a
    cwl:f32[200] = add cwk cwj
    cwm:f32[200] = sub b cwl
    cwn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cwo:f32[] = div -2.0 cwn
    cwp:f32[200] = mul a cwm
    cwq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cwo
    cwr:f32[200] = mul cwq cwp
    cws:f32[] = reduce_sum[axes=(0,)] cwr
    cwt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cwu:f32[] = div -2.0 cwt
    cwv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cwu
    cww:f32[200] = mul cwv cwm
    cwx:f32[] = reduce_sum[axes=(0,)] cww
    cwy:f32[] = mul 0.0010000000474974513 cws
    cwz:f32[] = sub cwh cwy
    cxa:f32[] = mul 0.0010000000474974513 cwx
    cxb:f32[] = sub cwj cxa
    cxc:f32[200] = mul cwz a
    cxd:f32[200] = add cxc cxb
    cxe:f32[200] = sub b cxd
    cxf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cxg:f32[] = div -2.0 cxf
    cxh:f32[200] = mul a cxe
    cxi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cxg
    cxj:f32[200] = mul cxi cxh
    cxk:f32[] = reduce_sum[axes=(0,)] cxj
    cxl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cxm:f32[] = div -2.0 cxl
    cxn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cxm
    cxo:f32[200] = mul cxn cxe
    cxp:f32[] = reduce_sum[axes=(0,)] cxo
    cxq:f32[] = mul 0.0010000000474974513 cxk
    cxr:f32[] = sub cwz cxq
    cxs:f32[] = mul 0.0010000000474974513 cxp
    cxt:f32[] = sub cxb cxs
    cxu:f32[200] = mul cxr a
    cxv:f32[200] = add cxu cxt
    cxw:f32[200] = sub b cxv
    cxx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cxy:f32[] = div -2.0 cxx
    cxz:f32[200] = mul a cxw
    cya:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cxy
    cyb:f32[200] = mul cya cxz
    cyc:f32[] = reduce_sum[axes=(0,)] cyb
    cyd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cye:f32[] = div -2.0 cyd
    cyf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cye
    cyg:f32[200] = mul cyf cxw
    cyh:f32[] = reduce_sum[axes=(0,)] cyg
    cyi:f32[] = mul 0.0010000000474974513 cyc
    cyj:f32[] = sub cxr cyi
    cyk:f32[] = mul 0.0010000000474974513 cyh
    cyl:f32[] = sub cxt cyk
    cym:f32[200] = mul cyj a
    cyn:f32[200] = add cym cyl
    cyo:f32[200] = sub b cyn
    cyp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cyq:f32[] = div -2.0 cyp
    cyr:f32[200] = mul a cyo
    cys:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cyq
    cyt:f32[200] = mul cys cyr
    cyu:f32[] = reduce_sum[axes=(0,)] cyt
    cyv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    cyw:f32[] = div -2.0 cyv
    cyx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] cyw
    cyy:f32[200] = mul cyx cyo
    cyz:f32[] = reduce_sum[axes=(0,)] cyy
    cza:f32[] = mul 0.0010000000474974513 cyu
    czb:f32[] = sub cyj cza
    czc:f32[] = mul 0.0010000000474974513 cyz
    czd:f32[] = sub cyl czc
    cze:f32[200] = mul czb a
    czf:f32[200] = add cze czd
    czg:f32[200] = sub b czf
    czh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    czi:f32[] = div -2.0 czh
    czj:f32[200] = mul a czg
    czk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] czi
    czl:f32[200] = mul czk czj
    czm:f32[] = reduce_sum[axes=(0,)] czl
    czn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    czo:f32[] = div -2.0 czn
    czp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] czo
    czq:f32[200] = mul czp czg
    czr:f32[] = reduce_sum[axes=(0,)] czq
    czs:f32[] = mul 0.0010000000474974513 czm
    czt:f32[] = sub czb czs
    czu:f32[] = mul 0.0010000000474974513 czr
    czv:f32[] = sub czd czu
    czw:f32[200] = mul czt a
    czx:f32[200] = add czw czv
    czy:f32[200] = sub b czx
    czz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    daa:f32[] = div -2.0 czz
    dab:f32[200] = mul a czy
    dac:f32[] = convert_element_type[new_dtype=float32 weak_type=False] daa
    dad:f32[200] = mul dac dab
    dae:f32[] = reduce_sum[axes=(0,)] dad
    daf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dag:f32[] = div -2.0 daf
    dah:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dag
    dai:f32[200] = mul dah czy
    daj:f32[] = reduce_sum[axes=(0,)] dai
    dak:f32[] = mul 0.0010000000474974513 dae
    dal:f32[] = sub czt dak
    dam:f32[] = mul 0.0010000000474974513 daj
    dan:f32[] = sub czv dam
    dao:f32[200] = mul dal a
    dap:f32[200] = add dao dan
    daq:f32[200] = sub b dap
    dar:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    das:f32[] = div -2.0 dar
    dat:f32[200] = mul a daq
    dau:f32[] = convert_element_type[new_dtype=float32 weak_type=False] das
    dav:f32[200] = mul dau dat
    daw:f32[] = reduce_sum[axes=(0,)] dav
    dax:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    day:f32[] = div -2.0 dax
    daz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] day
    dba:f32[200] = mul daz daq
    dbb:f32[] = reduce_sum[axes=(0,)] dba
    dbc:f32[] = mul 0.0010000000474974513 daw
    dbd:f32[] = sub dal dbc
    dbe:f32[] = mul 0.0010000000474974513 dbb
    dbf:f32[] = sub dan dbe
    dbg:f32[200] = mul dbd a
    dbh:f32[200] = add dbg dbf
    dbi:f32[200] = sub b dbh
    dbj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dbk:f32[] = div -2.0 dbj
    dbl:f32[200] = mul a dbi
    dbm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dbk
    dbn:f32[200] = mul dbm dbl
    dbo:f32[] = reduce_sum[axes=(0,)] dbn
    dbp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dbq:f32[] = div -2.0 dbp
    dbr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dbq
    dbs:f32[200] = mul dbr dbi
    dbt:f32[] = reduce_sum[axes=(0,)] dbs
    dbu:f32[] = mul 0.0010000000474974513 dbo
    dbv:f32[] = sub dbd dbu
    dbw:f32[] = mul 0.0010000000474974513 dbt
    dbx:f32[] = sub dbf dbw
    dby:f32[200] = mul dbv a
    dbz:f32[200] = add dby dbx
    dca:f32[200] = sub b dbz
    dcb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dcc:f32[] = div -2.0 dcb
    dcd:f32[200] = mul a dca
    dce:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dcc
    dcf:f32[200] = mul dce dcd
    dcg:f32[] = reduce_sum[axes=(0,)] dcf
    dch:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dci:f32[] = div -2.0 dch
    dcj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dci
    dck:f32[200] = mul dcj dca
    dcl:f32[] = reduce_sum[axes=(0,)] dck
    dcm:f32[] = mul 0.0010000000474974513 dcg
    dcn:f32[] = sub dbv dcm
    dco:f32[] = mul 0.0010000000474974513 dcl
    dcp:f32[] = sub dbx dco
    dcq:f32[200] = mul dcn a
    dcr:f32[200] = add dcq dcp
    dcs:f32[200] = sub b dcr
    dct:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dcu:f32[] = div -2.0 dct
    dcv:f32[200] = mul a dcs
    dcw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dcu
    dcx:f32[200] = mul dcw dcv
    dcy:f32[] = reduce_sum[axes=(0,)] dcx
    dcz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dda:f32[] = div -2.0 dcz
    ddb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dda
    ddc:f32[200] = mul ddb dcs
    ddd:f32[] = reduce_sum[axes=(0,)] ddc
    dde:f32[] = mul 0.0010000000474974513 dcy
    ddf:f32[] = sub dcn dde
    ddg:f32[] = mul 0.0010000000474974513 ddd
    ddh:f32[] = sub dcp ddg
    ddi:f32[200] = mul ddf a
    ddj:f32[200] = add ddi ddh
    ddk:f32[200] = sub b ddj
    ddl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ddm:f32[] = div -2.0 ddl
    ddn:f32[200] = mul a ddk
    ddo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ddm
    ddp:f32[200] = mul ddo ddn
    ddq:f32[] = reduce_sum[axes=(0,)] ddp
    ddr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dds:f32[] = div -2.0 ddr
    ddt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dds
    ddu:f32[200] = mul ddt ddk
    ddv:f32[] = reduce_sum[axes=(0,)] ddu
    ddw:f32[] = mul 0.0010000000474974513 ddq
    ddx:f32[] = sub ddf ddw
    ddy:f32[] = mul 0.0010000000474974513 ddv
    ddz:f32[] = sub ddh ddy
    dea:f32[200] = mul ddx a
    deb:f32[200] = add dea ddz
    dec:f32[200] = sub b deb
    ded:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dee:f32[] = div -2.0 ded
    def:f32[200] = mul a dec
    deg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dee
    deh:f32[200] = mul deg def
    dei:f32[] = reduce_sum[axes=(0,)] deh
    dej:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dek:f32[] = div -2.0 dej
    del:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dek
    dem:f32[200] = mul del dec
    den:f32[] = reduce_sum[axes=(0,)] dem
    deo:f32[] = mul 0.0010000000474974513 dei
    dep:f32[] = sub ddx deo
    deq:f32[] = mul 0.0010000000474974513 den
    der:f32[] = sub ddz deq
    des:f32[200] = mul dep a
    det:f32[200] = add des der
    deu:f32[200] = sub b det
    dev:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dew:f32[] = div -2.0 dev
    dex:f32[200] = mul a deu
    dey:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dew
    dez:f32[200] = mul dey dex
    dfa:f32[] = reduce_sum[axes=(0,)] dez
    dfb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dfc:f32[] = div -2.0 dfb
    dfd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dfc
    dfe:f32[200] = mul dfd deu
    dff:f32[] = reduce_sum[axes=(0,)] dfe
    dfg:f32[] = mul 0.0010000000474974513 dfa
    dfh:f32[] = sub dep dfg
    dfi:f32[] = mul 0.0010000000474974513 dff
    dfj:f32[] = sub der dfi
    dfk:f32[200] = mul dfh a
    dfl:f32[200] = add dfk dfj
    dfm:f32[200] = sub b dfl
    dfn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dfo:f32[] = div -2.0 dfn
    dfp:f32[200] = mul a dfm
    dfq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dfo
    dfr:f32[200] = mul dfq dfp
    dfs:f32[] = reduce_sum[axes=(0,)] dfr
    dft:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dfu:f32[] = div -2.0 dft
    dfv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dfu
    dfw:f32[200] = mul dfv dfm
    dfx:f32[] = reduce_sum[axes=(0,)] dfw
    dfy:f32[] = mul 0.0010000000474974513 dfs
    dfz:f32[] = sub dfh dfy
    dga:f32[] = mul 0.0010000000474974513 dfx
    dgb:f32[] = sub dfj dga
    dgc:f32[200] = mul dfz a
    dgd:f32[200] = add dgc dgb
    dge:f32[200] = sub b dgd
    dgf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dgg:f32[] = div -2.0 dgf
    dgh:f32[200] = mul a dge
    dgi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dgg
    dgj:f32[200] = mul dgi dgh
    dgk:f32[] = reduce_sum[axes=(0,)] dgj
    dgl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dgm:f32[] = div -2.0 dgl
    dgn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dgm
    dgo:f32[200] = mul dgn dge
    dgp:f32[] = reduce_sum[axes=(0,)] dgo
    dgq:f32[] = mul 0.0010000000474974513 dgk
    dgr:f32[] = sub dfz dgq
    dgs:f32[] = mul 0.0010000000474974513 dgp
    dgt:f32[] = sub dgb dgs
    dgu:f32[200] = mul dgr a
    dgv:f32[200] = add dgu dgt
    dgw:f32[200] = sub b dgv
    dgx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dgy:f32[] = div -2.0 dgx
    dgz:f32[200] = mul a dgw
    dha:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dgy
    dhb:f32[200] = mul dha dgz
    dhc:f32[] = reduce_sum[axes=(0,)] dhb
    dhd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dhe:f32[] = div -2.0 dhd
    dhf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dhe
    dhg:f32[200] = mul dhf dgw
    dhh:f32[] = reduce_sum[axes=(0,)] dhg
    dhi:f32[] = mul 0.0010000000474974513 dhc
    dhj:f32[] = sub dgr dhi
    dhk:f32[] = mul 0.0010000000474974513 dhh
    dhl:f32[] = sub dgt dhk
    dhm:f32[200] = mul dhj a
    dhn:f32[200] = add dhm dhl
    dho:f32[200] = sub b dhn
    dhp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dhq:f32[] = div -2.0 dhp
    dhr:f32[200] = mul a dho
    dhs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dhq
    dht:f32[200] = mul dhs dhr
    dhu:f32[] = reduce_sum[axes=(0,)] dht
    dhv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dhw:f32[] = div -2.0 dhv
    dhx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dhw
    dhy:f32[200] = mul dhx dho
    dhz:f32[] = reduce_sum[axes=(0,)] dhy
    dia:f32[] = mul 0.0010000000474974513 dhu
    dib:f32[] = sub dhj dia
    dic:f32[] = mul 0.0010000000474974513 dhz
    did:f32[] = sub dhl dic
    die:f32[200] = mul dib a
    dif:f32[200] = add die did
    dig:f32[200] = sub b dif
    dih:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dii:f32[] = div -2.0 dih
    dij:f32[200] = mul a dig
    dik:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dii
    dil:f32[200] = mul dik dij
    dim:f32[] = reduce_sum[axes=(0,)] dil
    din:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dio:f32[] = div -2.0 din
    dip:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dio
    diq:f32[200] = mul dip dig
    dir:f32[] = reduce_sum[axes=(0,)] diq
    dis:f32[] = mul 0.0010000000474974513 dim
    dit:f32[] = sub dib dis
    diu:f32[] = mul 0.0010000000474974513 dir
    div:f32[] = sub did diu
    diw:f32[200] = mul dit a
    dix:f32[200] = add diw div
    diy:f32[200] = sub b dix
    diz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dja:f32[] = div -2.0 diz
    djb:f32[200] = mul a diy
    djc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dja
    djd:f32[200] = mul djc djb
    dje:f32[] = reduce_sum[axes=(0,)] djd
    djf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    djg:f32[] = div -2.0 djf
    djh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] djg
    dji:f32[200] = mul djh diy
    djj:f32[] = reduce_sum[axes=(0,)] dji
    djk:f32[] = mul 0.0010000000474974513 dje
    djl:f32[] = sub dit djk
    djm:f32[] = mul 0.0010000000474974513 djj
    djn:f32[] = sub div djm
    djo:f32[200] = mul djl a
    djp:f32[200] = add djo djn
    djq:f32[200] = sub b djp
    djr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    djs:f32[] = div -2.0 djr
    djt:f32[200] = mul a djq
    dju:f32[] = convert_element_type[new_dtype=float32 weak_type=False] djs
    djv:f32[200] = mul dju djt
    djw:f32[] = reduce_sum[axes=(0,)] djv
    djx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    djy:f32[] = div -2.0 djx
    djz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] djy
    dka:f32[200] = mul djz djq
    dkb:f32[] = reduce_sum[axes=(0,)] dka
    dkc:f32[] = mul 0.0010000000474974513 djw
    dkd:f32[] = sub djl dkc
    dke:f32[] = mul 0.0010000000474974513 dkb
    dkf:f32[] = sub djn dke
    dkg:f32[200] = mul dkd a
    dkh:f32[200] = add dkg dkf
    dki:f32[200] = sub b dkh
    dkj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dkk:f32[] = div -2.0 dkj
    dkl:f32[200] = mul a dki
    dkm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dkk
    dkn:f32[200] = mul dkm dkl
    dko:f32[] = reduce_sum[axes=(0,)] dkn
    dkp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dkq:f32[] = div -2.0 dkp
    dkr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dkq
    dks:f32[200] = mul dkr dki
    dkt:f32[] = reduce_sum[axes=(0,)] dks
    dku:f32[] = mul 0.0010000000474974513 dko
    dkv:f32[] = sub dkd dku
    dkw:f32[] = mul 0.0010000000474974513 dkt
    dkx:f32[] = sub dkf dkw
    dky:f32[200] = mul dkv a
    dkz:f32[200] = add dky dkx
    dla:f32[200] = sub b dkz
    dlb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dlc:f32[] = div -2.0 dlb
    dld:f32[200] = mul a dla
    dle:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dlc
    dlf:f32[200] = mul dle dld
    dlg:f32[] = reduce_sum[axes=(0,)] dlf
    dlh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dli:f32[] = div -2.0 dlh
    dlj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dli
    dlk:f32[200] = mul dlj dla
    dll:f32[] = reduce_sum[axes=(0,)] dlk
    dlm:f32[] = mul 0.0010000000474974513 dlg
    dln:f32[] = sub dkv dlm
    dlo:f32[] = mul 0.0010000000474974513 dll
    dlp:f32[] = sub dkx dlo
    dlq:f32[200] = mul dln a
    dlr:f32[200] = add dlq dlp
    dls:f32[200] = sub b dlr
    dlt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dlu:f32[] = div -2.0 dlt
    dlv:f32[200] = mul a dls
    dlw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dlu
    dlx:f32[200] = mul dlw dlv
    dly:f32[] = reduce_sum[axes=(0,)] dlx
    dlz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dma:f32[] = div -2.0 dlz
    dmb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dma
    dmc:f32[200] = mul dmb dls
    dmd:f32[] = reduce_sum[axes=(0,)] dmc
    dme:f32[] = mul 0.0010000000474974513 dly
    dmf:f32[] = sub dln dme
    dmg:f32[] = mul 0.0010000000474974513 dmd
    dmh:f32[] = sub dlp dmg
    dmi:f32[200] = mul dmf a
    dmj:f32[200] = add dmi dmh
    dmk:f32[200] = sub b dmj
    dml:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dmm:f32[] = div -2.0 dml
    dmn:f32[200] = mul a dmk
    dmo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dmm
    dmp:f32[200] = mul dmo dmn
    dmq:f32[] = reduce_sum[axes=(0,)] dmp
    dmr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dms:f32[] = div -2.0 dmr
    dmt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dms
    dmu:f32[200] = mul dmt dmk
    dmv:f32[] = reduce_sum[axes=(0,)] dmu
    dmw:f32[] = mul 0.0010000000474974513 dmq
    dmx:f32[] = sub dmf dmw
    dmy:f32[] = mul 0.0010000000474974513 dmv
    dmz:f32[] = sub dmh dmy
    dna:f32[200] = mul dmx a
    dnb:f32[200] = add dna dmz
    dnc:f32[200] = sub b dnb
    dnd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dne:f32[] = div -2.0 dnd
    dnf:f32[200] = mul a dnc
    dng:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dne
    dnh:f32[200] = mul dng dnf
    dni:f32[] = reduce_sum[axes=(0,)] dnh
    dnj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dnk:f32[] = div -2.0 dnj
    dnl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dnk
    dnm:f32[200] = mul dnl dnc
    dnn:f32[] = reduce_sum[axes=(0,)] dnm
    dno:f32[] = mul 0.0010000000474974513 dni
    dnp:f32[] = sub dmx dno
    dnq:f32[] = mul 0.0010000000474974513 dnn
    dnr:f32[] = sub dmz dnq
    dns:f32[200] = mul dnp a
    dnt:f32[200] = add dns dnr
    dnu:f32[200] = sub b dnt
    dnv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dnw:f32[] = div -2.0 dnv
    dnx:f32[200] = mul a dnu
    dny:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dnw
    dnz:f32[200] = mul dny dnx
    doa:f32[] = reduce_sum[axes=(0,)] dnz
    dob:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    doc:f32[] = div -2.0 dob
    dod:f32[] = convert_element_type[new_dtype=float32 weak_type=False] doc
    doe:f32[200] = mul dod dnu
    dof:f32[] = reduce_sum[axes=(0,)] doe
    dog:f32[] = mul 0.0010000000474974513 doa
    doh:f32[] = sub dnp dog
    doi:f32[] = mul 0.0010000000474974513 dof
    doj:f32[] = sub dnr doi
    dok:f32[200] = mul doh a
    dol:f32[200] = add dok doj
    dom:f32[200] = sub b dol
    don:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    doo:f32[] = div -2.0 don
    dop:f32[200] = mul a dom
    doq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] doo
    dor:f32[200] = mul doq dop
    dos:f32[] = reduce_sum[axes=(0,)] dor
    dot:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dou:f32[] = div -2.0 dot
    dov:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dou
    dow:f32[200] = mul dov dom
    dox:f32[] = reduce_sum[axes=(0,)] dow
    doy:f32[] = mul 0.0010000000474974513 dos
    doz:f32[] = sub doh doy
    dpa:f32[] = mul 0.0010000000474974513 dox
    dpb:f32[] = sub doj dpa
    dpc:f32[200] = mul doz a
    dpd:f32[200] = add dpc dpb
    dpe:f32[200] = sub b dpd
    dpf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dpg:f32[] = div -2.0 dpf
    dph:f32[200] = mul a dpe
    dpi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dpg
    dpj:f32[200] = mul dpi dph
    dpk:f32[] = reduce_sum[axes=(0,)] dpj
    dpl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dpm:f32[] = div -2.0 dpl
    dpn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dpm
    dpo:f32[200] = mul dpn dpe
    dpp:f32[] = reduce_sum[axes=(0,)] dpo
    dpq:f32[] = mul 0.0010000000474974513 dpk
    dpr:f32[] = sub doz dpq
    dps:f32[] = mul 0.0010000000474974513 dpp
    dpt:f32[] = sub dpb dps
    dpu:f32[200] = mul dpr a
    dpv:f32[200] = add dpu dpt
    dpw:f32[200] = sub b dpv
    dpx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dpy:f32[] = div -2.0 dpx
    dpz:f32[200] = mul a dpw
    dqa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dpy
    dqb:f32[200] = mul dqa dpz
    dqc:f32[] = reduce_sum[axes=(0,)] dqb
    dqd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dqe:f32[] = div -2.0 dqd
    dqf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dqe
    dqg:f32[200] = mul dqf dpw
    dqh:f32[] = reduce_sum[axes=(0,)] dqg
    dqi:f32[] = mul 0.0010000000474974513 dqc
    dqj:f32[] = sub dpr dqi
    dqk:f32[] = mul 0.0010000000474974513 dqh
    dql:f32[] = sub dpt dqk
    dqm:f32[200] = mul dqj a
    dqn:f32[200] = add dqm dql
    dqo:f32[200] = sub b dqn
    dqp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dqq:f32[] = div -2.0 dqp
    dqr:f32[200] = mul a dqo
    dqs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dqq
    dqt:f32[200] = mul dqs dqr
    dqu:f32[] = reduce_sum[axes=(0,)] dqt
    dqv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dqw:f32[] = div -2.0 dqv
    dqx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dqw
    dqy:f32[200] = mul dqx dqo
    dqz:f32[] = reduce_sum[axes=(0,)] dqy
    dra:f32[] = mul 0.0010000000474974513 dqu
    drb:f32[] = sub dqj dra
    drc:f32[] = mul 0.0010000000474974513 dqz
    drd:f32[] = sub dql drc
    dre:f32[200] = mul drb a
    drf:f32[200] = add dre drd
    drg:f32[200] = sub b drf
    drh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dri:f32[] = div -2.0 drh
    drj:f32[200] = mul a drg
    drk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dri
    drl:f32[200] = mul drk drj
    drm:f32[] = reduce_sum[axes=(0,)] drl
    drn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dro:f32[] = div -2.0 drn
    drp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dro
    drq:f32[200] = mul drp drg
    drr:f32[] = reduce_sum[axes=(0,)] drq
    drs:f32[] = mul 0.0010000000474974513 drm
    drt:f32[] = sub drb drs
    dru:f32[] = mul 0.0010000000474974513 drr
    drv:f32[] = sub drd dru
    drw:f32[200] = mul drt a
    drx:f32[200] = add drw drv
    dry:f32[200] = sub b drx
    drz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dsa:f32[] = div -2.0 drz
    dsb:f32[200] = mul a dry
    dsc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dsa
    dsd:f32[200] = mul dsc dsb
    dse:f32[] = reduce_sum[axes=(0,)] dsd
    dsf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dsg:f32[] = div -2.0 dsf
    dsh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dsg
    dsi:f32[200] = mul dsh dry
    dsj:f32[] = reduce_sum[axes=(0,)] dsi
    dsk:f32[] = mul 0.0010000000474974513 dse
    dsl:f32[] = sub drt dsk
    dsm:f32[] = mul 0.0010000000474974513 dsj
    dsn:f32[] = sub drv dsm
    dso:f32[200] = mul dsl a
    dsp:f32[200] = add dso dsn
    dsq:f32[200] = sub b dsp
    dsr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dss:f32[] = div -2.0 dsr
    dst:f32[200] = mul a dsq
    dsu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dss
    dsv:f32[200] = mul dsu dst
    dsw:f32[] = reduce_sum[axes=(0,)] dsv
    dsx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dsy:f32[] = div -2.0 dsx
    dsz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dsy
    dta:f32[200] = mul dsz dsq
    dtb:f32[] = reduce_sum[axes=(0,)] dta
    dtc:f32[] = mul 0.0010000000474974513 dsw
    dtd:f32[] = sub dsl dtc
    dte:f32[] = mul 0.0010000000474974513 dtb
    dtf:f32[] = sub dsn dte
    dtg:f32[200] = mul dtd a
    dth:f32[200] = add dtg dtf
    dti:f32[200] = sub b dth
    dtj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dtk:f32[] = div -2.0 dtj
    dtl:f32[200] = mul a dti
    dtm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dtk
    dtn:f32[200] = mul dtm dtl
    dto:f32[] = reduce_sum[axes=(0,)] dtn
    dtp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dtq:f32[] = div -2.0 dtp
    dtr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dtq
    dts:f32[200] = mul dtr dti
    dtt:f32[] = reduce_sum[axes=(0,)] dts
    dtu:f32[] = mul 0.0010000000474974513 dto
    dtv:f32[] = sub dtd dtu
    dtw:f32[] = mul 0.0010000000474974513 dtt
    dtx:f32[] = sub dtf dtw
    dty:f32[200] = mul dtv a
    dtz:f32[200] = add dty dtx
    dua:f32[200] = sub b dtz
    dub:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    duc:f32[] = div -2.0 dub
    dud:f32[200] = mul a dua
    due:f32[] = convert_element_type[new_dtype=float32 weak_type=False] duc
    duf:f32[200] = mul due dud
    dug:f32[] = reduce_sum[axes=(0,)] duf
    duh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dui:f32[] = div -2.0 duh
    duj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dui
    duk:f32[200] = mul duj dua
    dul:f32[] = reduce_sum[axes=(0,)] duk
    dum:f32[] = mul 0.0010000000474974513 dug
    dun:f32[] = sub dtv dum
    duo:f32[] = mul 0.0010000000474974513 dul
    dup:f32[] = sub dtx duo
    duq:f32[200] = mul dun a
    dur:f32[200] = add duq dup
    dus:f32[200] = sub b dur
    dut:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    duu:f32[] = div -2.0 dut
    duv:f32[200] = mul a dus
    duw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] duu
    dux:f32[200] = mul duw duv
    duy:f32[] = reduce_sum[axes=(0,)] dux
    duz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dva:f32[] = div -2.0 duz
    dvb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dva
    dvc:f32[200] = mul dvb dus
    dvd:f32[] = reduce_sum[axes=(0,)] dvc
    dve:f32[] = mul 0.0010000000474974513 duy
    dvf:f32[] = sub dun dve
    dvg:f32[] = mul 0.0010000000474974513 dvd
    dvh:f32[] = sub dup dvg
    dvi:f32[200] = mul dvf a
    dvj:f32[200] = add dvi dvh
    dvk:f32[200] = sub b dvj
    dvl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dvm:f32[] = div -2.0 dvl
    dvn:f32[200] = mul a dvk
    dvo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dvm
    dvp:f32[200] = mul dvo dvn
    dvq:f32[] = reduce_sum[axes=(0,)] dvp
    dvr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dvs:f32[] = div -2.0 dvr
    dvt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dvs
    dvu:f32[200] = mul dvt dvk
    dvv:f32[] = reduce_sum[axes=(0,)] dvu
    dvw:f32[] = mul 0.0010000000474974513 dvq
    dvx:f32[] = sub dvf dvw
    dvy:f32[] = mul 0.0010000000474974513 dvv
    dvz:f32[] = sub dvh dvy
    dwa:f32[200] = mul dvx a
    dwb:f32[200] = add dwa dvz
    dwc:f32[200] = sub b dwb
    dwd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dwe:f32[] = div -2.0 dwd
    dwf:f32[200] = mul a dwc
    dwg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dwe
    dwh:f32[200] = mul dwg dwf
    dwi:f32[] = reduce_sum[axes=(0,)] dwh
    dwj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dwk:f32[] = div -2.0 dwj
    dwl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dwk
    dwm:f32[200] = mul dwl dwc
    dwn:f32[] = reduce_sum[axes=(0,)] dwm
    dwo:f32[] = mul 0.0010000000474974513 dwi
    dwp:f32[] = sub dvx dwo
    dwq:f32[] = mul 0.0010000000474974513 dwn
    dwr:f32[] = sub dvz dwq
    dws:f32[200] = mul dwp a
    dwt:f32[200] = add dws dwr
    dwu:f32[200] = sub b dwt
    dwv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dww:f32[] = div -2.0 dwv
    dwx:f32[200] = mul a dwu
    dwy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dww
    dwz:f32[200] = mul dwy dwx
    dxa:f32[] = reduce_sum[axes=(0,)] dwz
    dxb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dxc:f32[] = div -2.0 dxb
    dxd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dxc
    dxe:f32[200] = mul dxd dwu
    dxf:f32[] = reduce_sum[axes=(0,)] dxe
    dxg:f32[] = mul 0.0010000000474974513 dxa
    dxh:f32[] = sub dwp dxg
    dxi:f32[] = mul 0.0010000000474974513 dxf
    dxj:f32[] = sub dwr dxi
    dxk:f32[200] = mul dxh a
    dxl:f32[200] = add dxk dxj
    dxm:f32[200] = sub b dxl
    dxn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dxo:f32[] = div -2.0 dxn
    dxp:f32[200] = mul a dxm
    dxq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dxo
    dxr:f32[200] = mul dxq dxp
    dxs:f32[] = reduce_sum[axes=(0,)] dxr
    dxt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dxu:f32[] = div -2.0 dxt
    dxv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dxu
    dxw:f32[200] = mul dxv dxm
    dxx:f32[] = reduce_sum[axes=(0,)] dxw
    dxy:f32[] = mul 0.0010000000474974513 dxs
    dxz:f32[] = sub dxh dxy
    dya:f32[] = mul 0.0010000000474974513 dxx
    dyb:f32[] = sub dxj dya
    dyc:f32[200] = mul dxz a
    dyd:f32[200] = add dyc dyb
    dye:f32[200] = sub b dyd
    dyf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dyg:f32[] = div -2.0 dyf
    dyh:f32[200] = mul a dye
    dyi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dyg
    dyj:f32[200] = mul dyi dyh
    dyk:f32[] = reduce_sum[axes=(0,)] dyj
    dyl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dym:f32[] = div -2.0 dyl
    dyn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dym
    dyo:f32[200] = mul dyn dye
    dyp:f32[] = reduce_sum[axes=(0,)] dyo
    dyq:f32[] = mul 0.0010000000474974513 dyk
    dyr:f32[] = sub dxz dyq
    dys:f32[] = mul 0.0010000000474974513 dyp
    dyt:f32[] = sub dyb dys
    dyu:f32[200] = mul dyr a
    dyv:f32[200] = add dyu dyt
    dyw:f32[200] = sub b dyv
    dyx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dyy:f32[] = div -2.0 dyx
    dyz:f32[200] = mul a dyw
    dza:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dyy
    dzb:f32[200] = mul dza dyz
    dzc:f32[] = reduce_sum[axes=(0,)] dzb
    dzd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dze:f32[] = div -2.0 dzd
    dzf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dze
    dzg:f32[200] = mul dzf dyw
    dzh:f32[] = reduce_sum[axes=(0,)] dzg
    dzi:f32[] = mul 0.0010000000474974513 dzc
    dzj:f32[] = sub dyr dzi
    dzk:f32[] = mul 0.0010000000474974513 dzh
    dzl:f32[] = sub dyt dzk
    dzm:f32[200] = mul dzj a
    dzn:f32[200] = add dzm dzl
    dzo:f32[200] = sub b dzn
    dzp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dzq:f32[] = div -2.0 dzp
    dzr:f32[200] = mul a dzo
    dzs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dzq
    dzt:f32[200] = mul dzs dzr
    dzu:f32[] = reduce_sum[axes=(0,)] dzt
    dzv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    dzw:f32[] = div -2.0 dzv
    dzx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] dzw
    dzy:f32[200] = mul dzx dzo
    dzz:f32[] = reduce_sum[axes=(0,)] dzy
    eaa:f32[] = mul 0.0010000000474974513 dzu
    eab:f32[] = sub dzj eaa
    eac:f32[] = mul 0.0010000000474974513 dzz
    ead:f32[] = sub dzl eac
    eae:f32[200] = mul eab a
    eaf:f32[200] = add eae ead
    eag:f32[200] = sub b eaf
    eah:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eai:f32[] = div -2.0 eah
    eaj:f32[200] = mul a eag
    eak:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eai
    eal:f32[200] = mul eak eaj
    eam:f32[] = reduce_sum[axes=(0,)] eal
    ean:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eao:f32[] = div -2.0 ean
    eap:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eao
    eaq:f32[200] = mul eap eag
    ear:f32[] = reduce_sum[axes=(0,)] eaq
    eas:f32[] = mul 0.0010000000474974513 eam
    eat:f32[] = sub eab eas
    eau:f32[] = mul 0.0010000000474974513 ear
    eav:f32[] = sub ead eau
    eaw:f32[200] = mul eat a
    eax:f32[200] = add eaw eav
    eay:f32[200] = sub b eax
    eaz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eba:f32[] = div -2.0 eaz
    ebb:f32[200] = mul a eay
    ebc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eba
    ebd:f32[200] = mul ebc ebb
    ebe:f32[] = reduce_sum[axes=(0,)] ebd
    ebf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ebg:f32[] = div -2.0 ebf
    ebh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ebg
    ebi:f32[200] = mul ebh eay
    ebj:f32[] = reduce_sum[axes=(0,)] ebi
    ebk:f32[] = mul 0.0010000000474974513 ebe
    ebl:f32[] = sub eat ebk
    ebm:f32[] = mul 0.0010000000474974513 ebj
    ebn:f32[] = sub eav ebm
    ebo:f32[200] = mul ebl a
    ebp:f32[200] = add ebo ebn
    ebq:f32[200] = sub b ebp
    ebr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ebs:f32[] = div -2.0 ebr
    ebt:f32[200] = mul a ebq
    ebu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ebs
    ebv:f32[200] = mul ebu ebt
    ebw:f32[] = reduce_sum[axes=(0,)] ebv
    ebx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eby:f32[] = div -2.0 ebx
    ebz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eby
    eca:f32[200] = mul ebz ebq
    ecb:f32[] = reduce_sum[axes=(0,)] eca
    ecc:f32[] = mul 0.0010000000474974513 ebw
    ecd:f32[] = sub ebl ecc
    ece:f32[] = mul 0.0010000000474974513 ecb
    ecf:f32[] = sub ebn ece
    ecg:f32[200] = mul ecd a
    ech:f32[200] = add ecg ecf
    eci:f32[200] = sub b ech
    ecj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eck:f32[] = div -2.0 ecj
    ecl:f32[200] = mul a eci
    ecm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eck
    ecn:f32[200] = mul ecm ecl
    eco:f32[] = reduce_sum[axes=(0,)] ecn
    ecp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ecq:f32[] = div -2.0 ecp
    ecr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ecq
    ecs:f32[200] = mul ecr eci
    ect:f32[] = reduce_sum[axes=(0,)] ecs
    ecu:f32[] = mul 0.0010000000474974513 eco
    ecv:f32[] = sub ecd ecu
    ecw:f32[] = mul 0.0010000000474974513 ect
    ecx:f32[] = sub ecf ecw
    ecy:f32[200] = mul ecv a
    ecz:f32[200] = add ecy ecx
    eda:f32[200] = sub b ecz
    edb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    edc:f32[] = div -2.0 edb
    edd:f32[200] = mul a eda
    ede:f32[] = convert_element_type[new_dtype=float32 weak_type=False] edc
    edf:f32[200] = mul ede edd
    edg:f32[] = reduce_sum[axes=(0,)] edf
    edh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    edi:f32[] = div -2.0 edh
    edj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] edi
    edk:f32[200] = mul edj eda
    edl:f32[] = reduce_sum[axes=(0,)] edk
    edm:f32[] = mul 0.0010000000474974513 edg
    edn:f32[] = sub ecv edm
    edo:f32[] = mul 0.0010000000474974513 edl
    edp:f32[] = sub ecx edo
    edq:f32[200] = mul edn a
    edr:f32[200] = add edq edp
    eds:f32[200] = sub b edr
    edt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    edu:f32[] = div -2.0 edt
    edv:f32[200] = mul a eds
    edw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] edu
    edx:f32[200] = mul edw edv
    edy:f32[] = reduce_sum[axes=(0,)] edx
    edz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eea:f32[] = div -2.0 edz
    eeb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eea
    eec:f32[200] = mul eeb eds
    eed:f32[] = reduce_sum[axes=(0,)] eec
    eee:f32[] = mul 0.0010000000474974513 edy
    eef:f32[] = sub edn eee
    eeg:f32[] = mul 0.0010000000474974513 eed
    eeh:f32[] = sub edp eeg
    eei:f32[200] = mul eef a
    eej:f32[200] = add eei eeh
    eek:f32[200] = sub b eej
    eel:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eem:f32[] = div -2.0 eel
    een:f32[200] = mul a eek
    eeo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eem
    eep:f32[200] = mul eeo een
    eeq:f32[] = reduce_sum[axes=(0,)] eep
    eer:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ees:f32[] = div -2.0 eer
    eet:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ees
    eeu:f32[200] = mul eet eek
    eev:f32[] = reduce_sum[axes=(0,)] eeu
    eew:f32[] = mul 0.0010000000474974513 eeq
    eex:f32[] = sub eef eew
    eey:f32[] = mul 0.0010000000474974513 eev
    eez:f32[] = sub eeh eey
    efa:f32[200] = mul eex a
    efb:f32[200] = add efa eez
    efc:f32[200] = sub b efb
    efd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    efe:f32[] = div -2.0 efd
    eff:f32[200] = mul a efc
    efg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] efe
    efh:f32[200] = mul efg eff
    efi:f32[] = reduce_sum[axes=(0,)] efh
    efj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    efk:f32[] = div -2.0 efj
    efl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] efk
    efm:f32[200] = mul efl efc
    efn:f32[] = reduce_sum[axes=(0,)] efm
    efo:f32[] = mul 0.0010000000474974513 efi
    efp:f32[] = sub eex efo
    efq:f32[] = mul 0.0010000000474974513 efn
    efr:f32[] = sub eez efq
    efs:f32[200] = mul efp a
    eft:f32[200] = add efs efr
    efu:f32[200] = sub b eft
    efv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    efw:f32[] = div -2.0 efv
    efx:f32[200] = mul a efu
    efy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] efw
    efz:f32[200] = mul efy efx
    ega:f32[] = reduce_sum[axes=(0,)] efz
    egb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    egc:f32[] = div -2.0 egb
    egd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] egc
    ege:f32[200] = mul egd efu
    egf:f32[] = reduce_sum[axes=(0,)] ege
    egg:f32[] = mul 0.0010000000474974513 ega
    egh:f32[] = sub efp egg
    egi:f32[] = mul 0.0010000000474974513 egf
    egj:f32[] = sub efr egi
    egk:f32[200] = mul egh a
    egl:f32[200] = add egk egj
    egm:f32[200] = sub b egl
    egn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ego:f32[] = div -2.0 egn
    egp:f32[200] = mul a egm
    egq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ego
    egr:f32[200] = mul egq egp
    egs:f32[] = reduce_sum[axes=(0,)] egr
    egt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    egu:f32[] = div -2.0 egt
    egv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] egu
    egw:f32[200] = mul egv egm
    egx:f32[] = reduce_sum[axes=(0,)] egw
    egy:f32[] = mul 0.0010000000474974513 egs
    egz:f32[] = sub egh egy
    eha:f32[] = mul 0.0010000000474974513 egx
    ehb:f32[] = sub egj eha
    ehc:f32[200] = mul egz a
    ehd:f32[200] = add ehc ehb
    ehe:f32[200] = sub b ehd
    ehf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ehg:f32[] = div -2.0 ehf
    ehh:f32[200] = mul a ehe
    ehi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ehg
    ehj:f32[200] = mul ehi ehh
    ehk:f32[] = reduce_sum[axes=(0,)] ehj
    ehl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ehm:f32[] = div -2.0 ehl
    ehn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ehm
    eho:f32[200] = mul ehn ehe
    ehp:f32[] = reduce_sum[axes=(0,)] eho
    ehq:f32[] = mul 0.0010000000474974513 ehk
    ehr:f32[] = sub egz ehq
    ehs:f32[] = mul 0.0010000000474974513 ehp
    eht:f32[] = sub ehb ehs
    ehu:f32[200] = mul ehr a
    ehv:f32[200] = add ehu eht
    ehw:f32[200] = sub b ehv
    ehx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ehy:f32[] = div -2.0 ehx
    ehz:f32[200] = mul a ehw
    eia:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ehy
    eib:f32[200] = mul eia ehz
    eic:f32[] = reduce_sum[axes=(0,)] eib
    eid:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eie:f32[] = div -2.0 eid
    eif:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eie
    eig:f32[200] = mul eif ehw
    eih:f32[] = reduce_sum[axes=(0,)] eig
    eii:f32[] = mul 0.0010000000474974513 eic
    eij:f32[] = sub ehr eii
    eik:f32[] = mul 0.0010000000474974513 eih
    eil:f32[] = sub eht eik
    eim:f32[200] = mul eij a
    ein:f32[200] = add eim eil
    eio:f32[200] = sub b ein
    eip:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eiq:f32[] = div -2.0 eip
    eir:f32[200] = mul a eio
    eis:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eiq
    eit:f32[200] = mul eis eir
    eiu:f32[] = reduce_sum[axes=(0,)] eit
    eiv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eiw:f32[] = div -2.0 eiv
    eix:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eiw
    eiy:f32[200] = mul eix eio
    eiz:f32[] = reduce_sum[axes=(0,)] eiy
    eja:f32[] = mul 0.0010000000474974513 eiu
    ejb:f32[] = sub eij eja
    ejc:f32[] = mul 0.0010000000474974513 eiz
    ejd:f32[] = sub eil ejc
    eje:f32[200] = mul ejb a
    ejf:f32[200] = add eje ejd
    ejg:f32[200] = sub b ejf
    ejh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eji:f32[] = div -2.0 ejh
    ejj:f32[200] = mul a ejg
    ejk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eji
    ejl:f32[200] = mul ejk ejj
    ejm:f32[] = reduce_sum[axes=(0,)] ejl
    ejn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ejo:f32[] = div -2.0 ejn
    ejp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ejo
    ejq:f32[200] = mul ejp ejg
    ejr:f32[] = reduce_sum[axes=(0,)] ejq
    ejs:f32[] = mul 0.0010000000474974513 ejm
    ejt:f32[] = sub ejb ejs
    eju:f32[] = mul 0.0010000000474974513 ejr
    ejv:f32[] = sub ejd eju
    ejw:f32[200] = mul ejt a
    ejx:f32[200] = add ejw ejv
    ejy:f32[200] = sub b ejx
    ejz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eka:f32[] = div -2.0 ejz
    ekb:f32[200] = mul a ejy
    ekc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eka
    ekd:f32[200] = mul ekc ekb
    eke:f32[] = reduce_sum[axes=(0,)] ekd
    ekf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ekg:f32[] = div -2.0 ekf
    ekh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ekg
    eki:f32[200] = mul ekh ejy
    ekj:f32[] = reduce_sum[axes=(0,)] eki
    ekk:f32[] = mul 0.0010000000474974513 eke
    ekl:f32[] = sub ejt ekk
    ekm:f32[] = mul 0.0010000000474974513 ekj
    ekn:f32[] = sub ejv ekm
    eko:f32[200] = mul ekl a
    ekp:f32[200] = add eko ekn
    ekq:f32[200] = sub b ekp
    ekr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eks:f32[] = div -2.0 ekr
    ekt:f32[200] = mul a ekq
    eku:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eks
    ekv:f32[200] = mul eku ekt
    ekw:f32[] = reduce_sum[axes=(0,)] ekv
    ekx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eky:f32[] = div -2.0 ekx
    ekz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eky
    ela:f32[200] = mul ekz ekq
    elb:f32[] = reduce_sum[axes=(0,)] ela
    elc:f32[] = mul 0.0010000000474974513 ekw
    eld:f32[] = sub ekl elc
    ele:f32[] = mul 0.0010000000474974513 elb
    elf:f32[] = sub ekn ele
    elg:f32[200] = mul eld a
    elh:f32[200] = add elg elf
    eli:f32[200] = sub b elh
    elj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    elk:f32[] = div -2.0 elj
    ell:f32[200] = mul a eli
    elm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] elk
    eln:f32[200] = mul elm ell
    elo:f32[] = reduce_sum[axes=(0,)] eln
    elp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    elq:f32[] = div -2.0 elp
    elr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] elq
    els:f32[200] = mul elr eli
    elt:f32[] = reduce_sum[axes=(0,)] els
    elu:f32[] = mul 0.0010000000474974513 elo
    elv:f32[] = sub eld elu
    elw:f32[] = mul 0.0010000000474974513 elt
    elx:f32[] = sub elf elw
    ely:f32[200] = mul elv a
    elz:f32[200] = add ely elx
    ema:f32[200] = sub b elz
    emb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    emc:f32[] = div -2.0 emb
    emd:f32[200] = mul a ema
    eme:f32[] = convert_element_type[new_dtype=float32 weak_type=False] emc
    emf:f32[200] = mul eme emd
    emg:f32[] = reduce_sum[axes=(0,)] emf
    emh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    emi:f32[] = div -2.0 emh
    emj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] emi
    emk:f32[200] = mul emj ema
    eml:f32[] = reduce_sum[axes=(0,)] emk
    emm:f32[] = mul 0.0010000000474974513 emg
    emn:f32[] = sub elv emm
    emo:f32[] = mul 0.0010000000474974513 eml
    emp:f32[] = sub elx emo
    emq:f32[200] = mul emn a
    emr:f32[200] = add emq emp
    ems:f32[200] = sub b emr
    emt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    emu:f32[] = div -2.0 emt
    emv:f32[200] = mul a ems
    emw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] emu
    emx:f32[200] = mul emw emv
    emy:f32[] = reduce_sum[axes=(0,)] emx
    emz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ena:f32[] = div -2.0 emz
    enb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ena
    enc:f32[200] = mul enb ems
    end:f32[] = reduce_sum[axes=(0,)] enc
    ene:f32[] = mul 0.0010000000474974513 emy
    enf:f32[] = sub emn ene
    eng:f32[] = mul 0.0010000000474974513 end
    enh:f32[] = sub emp eng
    eni:f32[200] = mul enf a
    enj:f32[200] = add eni enh
    enk:f32[200] = sub b enj
    enl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    enm:f32[] = div -2.0 enl
    enn:f32[200] = mul a enk
    eno:f32[] = convert_element_type[new_dtype=float32 weak_type=False] enm
    enp:f32[200] = mul eno enn
    enq:f32[] = reduce_sum[axes=(0,)] enp
    enr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ens:f32[] = div -2.0 enr
    ent:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ens
    enu:f32[200] = mul ent enk
    env:f32[] = reduce_sum[axes=(0,)] enu
    enw:f32[] = mul 0.0010000000474974513 enq
    enx:f32[] = sub enf enw
    eny:f32[] = mul 0.0010000000474974513 env
    enz:f32[] = sub enh eny
    eoa:f32[200] = mul enx a
    eob:f32[200] = add eoa enz
    eoc:f32[200] = sub b eob
    eod:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eoe:f32[] = div -2.0 eod
    eof:f32[200] = mul a eoc
    eog:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eoe
    eoh:f32[200] = mul eog eof
    eoi:f32[] = reduce_sum[axes=(0,)] eoh
    eoj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eok:f32[] = div -2.0 eoj
    eol:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eok
    eom:f32[200] = mul eol eoc
    eon:f32[] = reduce_sum[axes=(0,)] eom
    eoo:f32[] = mul 0.0010000000474974513 eoi
    eop:f32[] = sub enx eoo
    eoq:f32[] = mul 0.0010000000474974513 eon
    eor:f32[] = sub enz eoq
    eos:f32[200] = mul eop a
    eot:f32[200] = add eos eor
    eou:f32[200] = sub b eot
    eov:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eow:f32[] = div -2.0 eov
    eox:f32[200] = mul a eou
    eoy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eow
    eoz:f32[200] = mul eoy eox
    epa:f32[] = reduce_sum[axes=(0,)] eoz
    epb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    epc:f32[] = div -2.0 epb
    epd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] epc
    epe:f32[200] = mul epd eou
    epf:f32[] = reduce_sum[axes=(0,)] epe
    epg:f32[] = mul 0.0010000000474974513 epa
    eph:f32[] = sub eop epg
    epi:f32[] = mul 0.0010000000474974513 epf
    epj:f32[] = sub eor epi
    epk:f32[200] = mul eph a
    epl:f32[200] = add epk epj
    epm:f32[200] = sub b epl
    epn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    epo:f32[] = div -2.0 epn
    epp:f32[200] = mul a epm
    epq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] epo
    epr:f32[200] = mul epq epp
    eps:f32[] = reduce_sum[axes=(0,)] epr
    ept:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    epu:f32[] = div -2.0 ept
    epv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] epu
    epw:f32[200] = mul epv epm
    epx:f32[] = reduce_sum[axes=(0,)] epw
    epy:f32[] = mul 0.0010000000474974513 eps
    epz:f32[] = sub eph epy
    eqa:f32[] = mul 0.0010000000474974513 epx
    eqb:f32[] = sub epj eqa
    eqc:f32[200] = mul epz a
    eqd:f32[200] = add eqc eqb
    eqe:f32[200] = sub b eqd
    eqf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eqg:f32[] = div -2.0 eqf
    eqh:f32[200] = mul a eqe
    eqi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eqg
    eqj:f32[200] = mul eqi eqh
    eqk:f32[] = reduce_sum[axes=(0,)] eqj
    eql:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eqm:f32[] = div -2.0 eql
    eqn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eqm
    eqo:f32[200] = mul eqn eqe
    eqp:f32[] = reduce_sum[axes=(0,)] eqo
    eqq:f32[] = mul 0.0010000000474974513 eqk
    eqr:f32[] = sub epz eqq
    eqs:f32[] = mul 0.0010000000474974513 eqp
    eqt:f32[] = sub eqb eqs
    equ:f32[200] = mul eqr a
    eqv:f32[200] = add equ eqt
    eqw:f32[200] = sub b eqv
    eqx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eqy:f32[] = div -2.0 eqx
    eqz:f32[200] = mul a eqw
    era:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eqy
    erb:f32[200] = mul era eqz
    erc:f32[] = reduce_sum[axes=(0,)] erb
    erd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ere:f32[] = div -2.0 erd
    erf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ere
    erg:f32[200] = mul erf eqw
    erh:f32[] = reduce_sum[axes=(0,)] erg
    eri:f32[] = mul 0.0010000000474974513 erc
    erj:f32[] = sub eqr eri
    erk:f32[] = mul 0.0010000000474974513 erh
    erl:f32[] = sub eqt erk
    erm:f32[200] = mul erj a
    ern:f32[200] = add erm erl
    ero:f32[200] = sub b ern
    erp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    erq:f32[] = div -2.0 erp
    err:f32[200] = mul a ero
    ers:f32[] = convert_element_type[new_dtype=float32 weak_type=False] erq
    ert:f32[200] = mul ers err
    eru:f32[] = reduce_sum[axes=(0,)] ert
    erv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    erw:f32[] = div -2.0 erv
    erx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] erw
    ery:f32[200] = mul erx ero
    erz:f32[] = reduce_sum[axes=(0,)] ery
    esa:f32[] = mul 0.0010000000474974513 eru
    esb:f32[] = sub erj esa
    esc:f32[] = mul 0.0010000000474974513 erz
    esd:f32[] = sub erl esc
    ese:f32[200] = mul esb a
    esf:f32[200] = add ese esd
    esg:f32[200] = sub b esf
    esh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    esi:f32[] = div -2.0 esh
    esj:f32[200] = mul a esg
    esk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] esi
    esl:f32[200] = mul esk esj
    esm:f32[] = reduce_sum[axes=(0,)] esl
    esn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eso:f32[] = div -2.0 esn
    esp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eso
    esq:f32[200] = mul esp esg
    esr:f32[] = reduce_sum[axes=(0,)] esq
    ess:f32[] = mul 0.0010000000474974513 esm
    est:f32[] = sub esb ess
    esu:f32[] = mul 0.0010000000474974513 esr
    esv:f32[] = sub esd esu
    esw:f32[200] = mul est a
    esx:f32[200] = add esw esv
    esy:f32[200] = sub b esx
    esz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eta:f32[] = div -2.0 esz
    etb:f32[200] = mul a esy
    etc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eta
    etd:f32[200] = mul etc etb
    ete:f32[] = reduce_sum[axes=(0,)] etd
    etf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    etg:f32[] = div -2.0 etf
    eth:f32[] = convert_element_type[new_dtype=float32 weak_type=False] etg
    eti:f32[200] = mul eth esy
    etj:f32[] = reduce_sum[axes=(0,)] eti
    etk:f32[] = mul 0.0010000000474974513 ete
    etl:f32[] = sub est etk
    etm:f32[] = mul 0.0010000000474974513 etj
    etn:f32[] = sub esv etm
    eto:f32[200] = mul etl a
    etp:f32[200] = add eto etn
    etq:f32[200] = sub b etp
    etr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ets:f32[] = div -2.0 etr
    ett:f32[200] = mul a etq
    etu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ets
    etv:f32[200] = mul etu ett
    etw:f32[] = reduce_sum[axes=(0,)] etv
    etx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ety:f32[] = div -2.0 etx
    etz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ety
    eua:f32[200] = mul etz etq
    eub:f32[] = reduce_sum[axes=(0,)] eua
    euc:f32[] = mul 0.0010000000474974513 etw
    eud:f32[] = sub etl euc
    eue:f32[] = mul 0.0010000000474974513 eub
    euf:f32[] = sub etn eue
    eug:f32[200] = mul eud a
    euh:f32[200] = add eug euf
    eui:f32[200] = sub b euh
    euj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    euk:f32[] = div -2.0 euj
    eul:f32[200] = mul a eui
    eum:f32[] = convert_element_type[new_dtype=float32 weak_type=False] euk
    eun:f32[200] = mul eum eul
    euo:f32[] = reduce_sum[axes=(0,)] eun
    eup:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    euq:f32[] = div -2.0 eup
    eur:f32[] = convert_element_type[new_dtype=float32 weak_type=False] euq
    eus:f32[200] = mul eur eui
    eut:f32[] = reduce_sum[axes=(0,)] eus
    euu:f32[] = mul 0.0010000000474974513 euo
    euv:f32[] = sub eud euu
    euw:f32[] = mul 0.0010000000474974513 eut
    eux:f32[] = sub euf euw
    euy:f32[200] = mul euv a
    euz:f32[200] = add euy eux
    eva:f32[200] = sub b euz
    evb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    evc:f32[] = div -2.0 evb
    evd:f32[200] = mul a eva
    eve:f32[] = convert_element_type[new_dtype=float32 weak_type=False] evc
    evf:f32[200] = mul eve evd
    evg:f32[] = reduce_sum[axes=(0,)] evf
    evh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    evi:f32[] = div -2.0 evh
    evj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] evi
    evk:f32[200] = mul evj eva
    evl:f32[] = reduce_sum[axes=(0,)] evk
    evm:f32[] = mul 0.0010000000474974513 evg
    evn:f32[] = sub euv evm
    evo:f32[] = mul 0.0010000000474974513 evl
    evp:f32[] = sub eux evo
    evq:f32[200] = mul evn a
    evr:f32[200] = add evq evp
    evs:f32[200] = sub b evr
    evt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    evu:f32[] = div -2.0 evt
    evv:f32[200] = mul a evs
    evw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] evu
    evx:f32[200] = mul evw evv
    evy:f32[] = reduce_sum[axes=(0,)] evx
    evz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ewa:f32[] = div -2.0 evz
    ewb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ewa
    ewc:f32[200] = mul ewb evs
    ewd:f32[] = reduce_sum[axes=(0,)] ewc
    ewe:f32[] = mul 0.0010000000474974513 evy
    ewf:f32[] = sub evn ewe
    ewg:f32[] = mul 0.0010000000474974513 ewd
    ewh:f32[] = sub evp ewg
    ewi:f32[200] = mul ewf a
    ewj:f32[200] = add ewi ewh
    ewk:f32[200] = sub b ewj
    ewl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ewm:f32[] = div -2.0 ewl
    ewn:f32[200] = mul a ewk
    ewo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ewm
    ewp:f32[200] = mul ewo ewn
    ewq:f32[] = reduce_sum[axes=(0,)] ewp
    ewr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ews:f32[] = div -2.0 ewr
    ewt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ews
    ewu:f32[200] = mul ewt ewk
    ewv:f32[] = reduce_sum[axes=(0,)] ewu
    eww:f32[] = mul 0.0010000000474974513 ewq
    ewx:f32[] = sub ewf eww
    ewy:f32[] = mul 0.0010000000474974513 ewv
    ewz:f32[] = sub ewh ewy
    exa:f32[200] = mul ewx a
    exb:f32[200] = add exa ewz
    exc:f32[200] = sub b exb
    exd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    exe:f32[] = div -2.0 exd
    exf:f32[200] = mul a exc
    exg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] exe
    exh:f32[200] = mul exg exf
    exi:f32[] = reduce_sum[axes=(0,)] exh
    exj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    exk:f32[] = div -2.0 exj
    exl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] exk
    exm:f32[200] = mul exl exc
    exn:f32[] = reduce_sum[axes=(0,)] exm
    exo:f32[] = mul 0.0010000000474974513 exi
    exp:f32[] = sub ewx exo
    exq:f32[] = mul 0.0010000000474974513 exn
    exr:f32[] = sub ewz exq
    exs:f32[200] = mul exp a
    ext:f32[200] = add exs exr
    exu:f32[200] = sub b ext
    exv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    exw:f32[] = div -2.0 exv
    exx:f32[200] = mul a exu
    exy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] exw
    exz:f32[200] = mul exy exx
    eya:f32[] = reduce_sum[axes=(0,)] exz
    eyb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eyc:f32[] = div -2.0 eyb
    eyd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eyc
    eye:f32[200] = mul eyd exu
    eyf:f32[] = reduce_sum[axes=(0,)] eye
    eyg:f32[] = mul 0.0010000000474974513 eya
    eyh:f32[] = sub exp eyg
    eyi:f32[] = mul 0.0010000000474974513 eyf
    eyj:f32[] = sub exr eyi
    eyk:f32[200] = mul eyh a
    eyl:f32[200] = add eyk eyj
    eym:f32[200] = sub b eyl
    eyn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eyo:f32[] = div -2.0 eyn
    eyp:f32[200] = mul a eym
    eyq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eyo
    eyr:f32[200] = mul eyq eyp
    eys:f32[] = reduce_sum[axes=(0,)] eyr
    eyt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    eyu:f32[] = div -2.0 eyt
    eyv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] eyu
    eyw:f32[200] = mul eyv eym
    eyx:f32[] = reduce_sum[axes=(0,)] eyw
    eyy:f32[] = mul 0.0010000000474974513 eys
    eyz:f32[] = sub eyh eyy
    eza:f32[] = mul 0.0010000000474974513 eyx
    ezb:f32[] = sub eyj eza
    ezc:f32[200] = mul eyz a
    ezd:f32[200] = add ezc ezb
    eze:f32[200] = sub b ezd
    ezf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ezg:f32[] = div -2.0 ezf
    ezh:f32[200] = mul a eze
    ezi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ezg
    ezj:f32[200] = mul ezi ezh
    ezk:f32[] = reduce_sum[axes=(0,)] ezj
    ezl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ezm:f32[] = div -2.0 ezl
    ezn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ezm
    ezo:f32[200] = mul ezn eze
    ezp:f32[] = reduce_sum[axes=(0,)] ezo
    ezq:f32[] = mul 0.0010000000474974513 ezk
    ezr:f32[] = sub eyz ezq
    ezs:f32[] = mul 0.0010000000474974513 ezp
    ezt:f32[] = sub ezb ezs
    ezu:f32[200] = mul ezr a
    ezv:f32[200] = add ezu ezt
    ezw:f32[200] = sub b ezv
    ezx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ezy:f32[] = div -2.0 ezx
    ezz:f32[200] = mul a ezw
    faa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ezy
    fab:f32[200] = mul faa ezz
    fac:f32[] = reduce_sum[axes=(0,)] fab
    fad:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fae:f32[] = div -2.0 fad
    faf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fae
    fag:f32[200] = mul faf ezw
    fah:f32[] = reduce_sum[axes=(0,)] fag
    fai:f32[] = mul 0.0010000000474974513 fac
    faj:f32[] = sub ezr fai
    fak:f32[] = mul 0.0010000000474974513 fah
    fal:f32[] = sub ezt fak
    fam:f32[200] = mul faj a
    fan:f32[200] = add fam fal
    fao:f32[200] = sub b fan
    fap:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    faq:f32[] = div -2.0 fap
    far:f32[200] = mul a fao
    fas:f32[] = convert_element_type[new_dtype=float32 weak_type=False] faq
    fat:f32[200] = mul fas far
    fau:f32[] = reduce_sum[axes=(0,)] fat
    fav:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    faw:f32[] = div -2.0 fav
    fax:f32[] = convert_element_type[new_dtype=float32 weak_type=False] faw
    fay:f32[200] = mul fax fao
    faz:f32[] = reduce_sum[axes=(0,)] fay
    fba:f32[] = mul 0.0010000000474974513 fau
    fbb:f32[] = sub faj fba
    fbc:f32[] = mul 0.0010000000474974513 faz
    fbd:f32[] = sub fal fbc
    fbe:f32[200] = mul fbb a
    fbf:f32[200] = add fbe fbd
    fbg:f32[200] = sub b fbf
    fbh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fbi:f32[] = div -2.0 fbh
    fbj:f32[200] = mul a fbg
    fbk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fbi
    fbl:f32[200] = mul fbk fbj
    fbm:f32[] = reduce_sum[axes=(0,)] fbl
    fbn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fbo:f32[] = div -2.0 fbn
    fbp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fbo
    fbq:f32[200] = mul fbp fbg
    fbr:f32[] = reduce_sum[axes=(0,)] fbq
    fbs:f32[] = mul 0.0010000000474974513 fbm
    fbt:f32[] = sub fbb fbs
    fbu:f32[] = mul 0.0010000000474974513 fbr
    fbv:f32[] = sub fbd fbu
    fbw:f32[200] = mul fbt a
    fbx:f32[200] = add fbw fbv
    fby:f32[200] = sub b fbx
    fbz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fca:f32[] = div -2.0 fbz
    fcb:f32[200] = mul a fby
    fcc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fca
    fcd:f32[200] = mul fcc fcb
    fce:f32[] = reduce_sum[axes=(0,)] fcd
    fcf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fcg:f32[] = div -2.0 fcf
    fch:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fcg
    fci:f32[200] = mul fch fby
    fcj:f32[] = reduce_sum[axes=(0,)] fci
    fck:f32[] = mul 0.0010000000474974513 fce
    fcl:f32[] = sub fbt fck
    fcm:f32[] = mul 0.0010000000474974513 fcj
    fcn:f32[] = sub fbv fcm
    fco:f32[200] = mul fcl a
    fcp:f32[200] = add fco fcn
    fcq:f32[200] = sub b fcp
    fcr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fcs:f32[] = div -2.0 fcr
    fct:f32[200] = mul a fcq
    fcu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fcs
    fcv:f32[200] = mul fcu fct
    fcw:f32[] = reduce_sum[axes=(0,)] fcv
    fcx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fcy:f32[] = div -2.0 fcx
    fcz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fcy
    fda:f32[200] = mul fcz fcq
    fdb:f32[] = reduce_sum[axes=(0,)] fda
    fdc:f32[] = mul 0.0010000000474974513 fcw
    fdd:f32[] = sub fcl fdc
    fde:f32[] = mul 0.0010000000474974513 fdb
    fdf:f32[] = sub fcn fde
    fdg:f32[200] = mul fdd a
    fdh:f32[200] = add fdg fdf
    fdi:f32[200] = sub b fdh
    fdj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fdk:f32[] = div -2.0 fdj
    fdl:f32[200] = mul a fdi
    fdm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fdk
    fdn:f32[200] = mul fdm fdl
    fdo:f32[] = reduce_sum[axes=(0,)] fdn
    fdp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fdq:f32[] = div -2.0 fdp
    fdr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fdq
    fds:f32[200] = mul fdr fdi
    fdt:f32[] = reduce_sum[axes=(0,)] fds
    fdu:f32[] = mul 0.0010000000474974513 fdo
    fdv:f32[] = sub fdd fdu
    fdw:f32[] = mul 0.0010000000474974513 fdt
    fdx:f32[] = sub fdf fdw
    fdy:f32[200] = mul fdv a
    fdz:f32[200] = add fdy fdx
    fea:f32[200] = sub b fdz
    feb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fec:f32[] = div -2.0 feb
    fed:f32[200] = mul a fea
    fee:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fec
    fef:f32[200] = mul fee fed
    feg:f32[] = reduce_sum[axes=(0,)] fef
    feh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fei:f32[] = div -2.0 feh
    fej:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fei
    fek:f32[200] = mul fej fea
    fel:f32[] = reduce_sum[axes=(0,)] fek
    fem:f32[] = mul 0.0010000000474974513 feg
    fen:f32[] = sub fdv fem
    feo:f32[] = mul 0.0010000000474974513 fel
    fep:f32[] = sub fdx feo
    feq:f32[200] = mul fen a
    fer:f32[200] = add feq fep
    fes:f32[200] = sub b fer
    fet:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    feu:f32[] = div -2.0 fet
    fev:f32[200] = mul a fes
    few:f32[] = convert_element_type[new_dtype=float32 weak_type=False] feu
    fex:f32[200] = mul few fev
    fey:f32[] = reduce_sum[axes=(0,)] fex
    fez:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ffa:f32[] = div -2.0 fez
    ffb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ffa
    ffc:f32[200] = mul ffb fes
    ffd:f32[] = reduce_sum[axes=(0,)] ffc
    ffe:f32[] = mul 0.0010000000474974513 fey
    fff:f32[] = sub fen ffe
    ffg:f32[] = mul 0.0010000000474974513 ffd
    ffh:f32[] = sub fep ffg
    ffi:f32[200] = mul fff a
    ffj:f32[200] = add ffi ffh
    ffk:f32[200] = sub b ffj
    ffl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ffm:f32[] = div -2.0 ffl
    ffn:f32[200] = mul a ffk
    ffo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ffm
    ffp:f32[200] = mul ffo ffn
    ffq:f32[] = reduce_sum[axes=(0,)] ffp
    ffr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ffs:f32[] = div -2.0 ffr
    fft:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ffs
    ffu:f32[200] = mul fft ffk
    ffv:f32[] = reduce_sum[axes=(0,)] ffu
    ffw:f32[] = mul 0.0010000000474974513 ffq
    ffx:f32[] = sub fff ffw
    ffy:f32[] = mul 0.0010000000474974513 ffv
    ffz:f32[] = sub ffh ffy
    fga:f32[200] = mul ffx a
    fgb:f32[200] = add fga ffz
    fgc:f32[200] = sub b fgb
    fgd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fge:f32[] = div -2.0 fgd
    fgf:f32[200] = mul a fgc
    fgg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fge
    fgh:f32[200] = mul fgg fgf
    fgi:f32[] = reduce_sum[axes=(0,)] fgh
    fgj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fgk:f32[] = div -2.0 fgj
    fgl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fgk
    fgm:f32[200] = mul fgl fgc
    fgn:f32[] = reduce_sum[axes=(0,)] fgm
    fgo:f32[] = mul 0.0010000000474974513 fgi
    fgp:f32[] = sub ffx fgo
    fgq:f32[] = mul 0.0010000000474974513 fgn
    fgr:f32[] = sub ffz fgq
    fgs:f32[200] = mul fgp a
    fgt:f32[200] = add fgs fgr
    fgu:f32[200] = sub b fgt
    fgv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fgw:f32[] = div -2.0 fgv
    fgx:f32[200] = mul a fgu
    fgy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fgw
    fgz:f32[200] = mul fgy fgx
    fha:f32[] = reduce_sum[axes=(0,)] fgz
    fhb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fhc:f32[] = div -2.0 fhb
    fhd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fhc
    fhe:f32[200] = mul fhd fgu
    fhf:f32[] = reduce_sum[axes=(0,)] fhe
    fhg:f32[] = mul 0.0010000000474974513 fha
    fhh:f32[] = sub fgp fhg
    fhi:f32[] = mul 0.0010000000474974513 fhf
    fhj:f32[] = sub fgr fhi
    fhk:f32[200] = mul fhh a
    fhl:f32[200] = add fhk fhj
    fhm:f32[200] = sub b fhl
    fhn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fho:f32[] = div -2.0 fhn
    fhp:f32[200] = mul a fhm
    fhq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fho
    fhr:f32[200] = mul fhq fhp
    fhs:f32[] = reduce_sum[axes=(0,)] fhr
    fht:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fhu:f32[] = div -2.0 fht
    fhv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fhu
    fhw:f32[200] = mul fhv fhm
    fhx:f32[] = reduce_sum[axes=(0,)] fhw
    fhy:f32[] = mul 0.0010000000474974513 fhs
    fhz:f32[] = sub fhh fhy
    fia:f32[] = mul 0.0010000000474974513 fhx
    fib:f32[] = sub fhj fia
    fic:f32[200] = mul fhz a
    fid:f32[200] = add fic fib
    fie:f32[200] = sub b fid
    fif:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fig:f32[] = div -2.0 fif
    fih:f32[200] = mul a fie
    fii:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fig
    fij:f32[200] = mul fii fih
    fik:f32[] = reduce_sum[axes=(0,)] fij
    fil:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fim:f32[] = div -2.0 fil
    fin:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fim
    fio:f32[200] = mul fin fie
    fip:f32[] = reduce_sum[axes=(0,)] fio
    fiq:f32[] = mul 0.0010000000474974513 fik
    fir:f32[] = sub fhz fiq
    fis:f32[] = mul 0.0010000000474974513 fip
    fit:f32[] = sub fib fis
    fiu:f32[200] = mul fir a
    fiv:f32[200] = add fiu fit
    fiw:f32[200] = sub b fiv
    fix:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fiy:f32[] = div -2.0 fix
    fiz:f32[200] = mul a fiw
    fja:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fiy
    fjb:f32[200] = mul fja fiz
    fjc:f32[] = reduce_sum[axes=(0,)] fjb
    fjd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fje:f32[] = div -2.0 fjd
    fjf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fje
    fjg:f32[200] = mul fjf fiw
    fjh:f32[] = reduce_sum[axes=(0,)] fjg
    fji:f32[] = mul 0.0010000000474974513 fjc
    fjj:f32[] = sub fir fji
    fjk:f32[] = mul 0.0010000000474974513 fjh
    fjl:f32[] = sub fit fjk
    fjm:f32[200] = mul fjj a
    fjn:f32[200] = add fjm fjl
    fjo:f32[200] = sub b fjn
    fjp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fjq:f32[] = div -2.0 fjp
    fjr:f32[200] = mul a fjo
    fjs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fjq
    fjt:f32[200] = mul fjs fjr
    fju:f32[] = reduce_sum[axes=(0,)] fjt
    fjv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fjw:f32[] = div -2.0 fjv
    fjx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fjw
    fjy:f32[200] = mul fjx fjo
    fjz:f32[] = reduce_sum[axes=(0,)] fjy
    fka:f32[] = mul 0.0010000000474974513 fju
    fkb:f32[] = sub fjj fka
    fkc:f32[] = mul 0.0010000000474974513 fjz
    fkd:f32[] = sub fjl fkc
    fke:f32[200] = mul fkb a
    fkf:f32[200] = add fke fkd
    fkg:f32[200] = sub b fkf
    fkh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fki:f32[] = div -2.0 fkh
    fkj:f32[200] = mul a fkg
    fkk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fki
    fkl:f32[200] = mul fkk fkj
    fkm:f32[] = reduce_sum[axes=(0,)] fkl
    fkn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fko:f32[] = div -2.0 fkn
    fkp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fko
    fkq:f32[200] = mul fkp fkg
    fkr:f32[] = reduce_sum[axes=(0,)] fkq
    fks:f32[] = mul 0.0010000000474974513 fkm
    fkt:f32[] = sub fkb fks
    fku:f32[] = mul 0.0010000000474974513 fkr
    fkv:f32[] = sub fkd fku
    fkw:f32[200] = mul fkt a
    fkx:f32[200] = add fkw fkv
    fky:f32[200] = sub b fkx
    fkz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fla:f32[] = div -2.0 fkz
    flb:f32[200] = mul a fky
    flc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fla
    fld:f32[200] = mul flc flb
    fle:f32[] = reduce_sum[axes=(0,)] fld
    flf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    flg:f32[] = div -2.0 flf
    flh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] flg
    fli:f32[200] = mul flh fky
    flj:f32[] = reduce_sum[axes=(0,)] fli
    flk:f32[] = mul 0.0010000000474974513 fle
    fll:f32[] = sub fkt flk
    flm:f32[] = mul 0.0010000000474974513 flj
    fln:f32[] = sub fkv flm
    flo:f32[200] = mul fll a
    flp:f32[200] = add flo fln
    flq:f32[200] = sub b flp
    flr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fls:f32[] = div -2.0 flr
    flt:f32[200] = mul a flq
    flu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fls
    flv:f32[200] = mul flu flt
    flw:f32[] = reduce_sum[axes=(0,)] flv
    flx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fly:f32[] = div -2.0 flx
    flz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fly
    fma:f32[200] = mul flz flq
    fmb:f32[] = reduce_sum[axes=(0,)] fma
    fmc:f32[] = mul 0.0010000000474974513 flw
    fmd:f32[] = sub fll fmc
    fme:f32[] = mul 0.0010000000474974513 fmb
    fmf:f32[] = sub fln fme
    fmg:f32[200] = mul fmd a
    fmh:f32[200] = add fmg fmf
    fmi:f32[200] = sub b fmh
    fmj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fmk:f32[] = div -2.0 fmj
    fml:f32[200] = mul a fmi
    fmm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fmk
    fmn:f32[200] = mul fmm fml
    fmo:f32[] = reduce_sum[axes=(0,)] fmn
    fmp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fmq:f32[] = div -2.0 fmp
    fmr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fmq
    fms:f32[200] = mul fmr fmi
    fmt:f32[] = reduce_sum[axes=(0,)] fms
    fmu:f32[] = mul 0.0010000000474974513 fmo
    fmv:f32[] = sub fmd fmu
    fmw:f32[] = mul 0.0010000000474974513 fmt
    fmx:f32[] = sub fmf fmw
    fmy:f32[200] = mul fmv a
    fmz:f32[200] = add fmy fmx
    fna:f32[200] = sub b fmz
    fnb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fnc:f32[] = div -2.0 fnb
    fnd:f32[200] = mul a fna
    fne:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fnc
    fnf:f32[200] = mul fne fnd
    fng:f32[] = reduce_sum[axes=(0,)] fnf
    fnh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fni:f32[] = div -2.0 fnh
    fnj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fni
    fnk:f32[200] = mul fnj fna
    fnl:f32[] = reduce_sum[axes=(0,)] fnk
    fnm:f32[] = mul 0.0010000000474974513 fng
    fnn:f32[] = sub fmv fnm
    fno:f32[] = mul 0.0010000000474974513 fnl
    fnp:f32[] = sub fmx fno
    fnq:f32[200] = mul fnn a
    fnr:f32[200] = add fnq fnp
    fns:f32[200] = sub b fnr
    fnt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fnu:f32[] = div -2.0 fnt
    fnv:f32[200] = mul a fns
    fnw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fnu
    fnx:f32[200] = mul fnw fnv
    fny:f32[] = reduce_sum[axes=(0,)] fnx
    fnz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    foa:f32[] = div -2.0 fnz
    fob:f32[] = convert_element_type[new_dtype=float32 weak_type=False] foa
    foc:f32[200] = mul fob fns
    fod:f32[] = reduce_sum[axes=(0,)] foc
    foe:f32[] = mul 0.0010000000474974513 fny
    fof:f32[] = sub fnn foe
    fog:f32[] = mul 0.0010000000474974513 fod
    foh:f32[] = sub fnp fog
    foi:f32[200] = mul fof a
    foj:f32[200] = add foi foh
    fok:f32[200] = sub b foj
    fol:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fom:f32[] = div -2.0 fol
    fon:f32[200] = mul a fok
    foo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fom
    fop:f32[200] = mul foo fon
    foq:f32[] = reduce_sum[axes=(0,)] fop
    for:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fos:f32[] = div -2.0 for
    fot:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fos
    fou:f32[200] = mul fot fok
    fov:f32[] = reduce_sum[axes=(0,)] fou
    fow:f32[] = mul 0.0010000000474974513 foq
    fox:f32[] = sub fof fow
    foy:f32[] = mul 0.0010000000474974513 fov
    foz:f32[] = sub foh foy
    fpa:f32[200] = mul fox a
    fpb:f32[200] = add fpa foz
    fpc:f32[200] = sub b fpb
    fpd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fpe:f32[] = div -2.0 fpd
    fpf:f32[200] = mul a fpc
    fpg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fpe
    fph:f32[200] = mul fpg fpf
    fpi:f32[] = reduce_sum[axes=(0,)] fph
    fpj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fpk:f32[] = div -2.0 fpj
    fpl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fpk
    fpm:f32[200] = mul fpl fpc
    fpn:f32[] = reduce_sum[axes=(0,)] fpm
    fpo:f32[] = mul 0.0010000000474974513 fpi
    fpp:f32[] = sub fox fpo
    fpq:f32[] = mul 0.0010000000474974513 fpn
    fpr:f32[] = sub foz fpq
    fps:f32[200] = mul fpp a
    fpt:f32[200] = add fps fpr
    fpu:f32[200] = sub b fpt
    fpv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fpw:f32[] = div -2.0 fpv
    fpx:f32[200] = mul a fpu
    fpy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fpw
    fpz:f32[200] = mul fpy fpx
    fqa:f32[] = reduce_sum[axes=(0,)] fpz
    fqb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fqc:f32[] = div -2.0 fqb
    fqd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fqc
    fqe:f32[200] = mul fqd fpu
    fqf:f32[] = reduce_sum[axes=(0,)] fqe
    fqg:f32[] = mul 0.0010000000474974513 fqa
    fqh:f32[] = sub fpp fqg
    fqi:f32[] = mul 0.0010000000474974513 fqf
    fqj:f32[] = sub fpr fqi
    fqk:f32[200] = mul fqh a
    fql:f32[200] = add fqk fqj
    fqm:f32[200] = sub b fql
    fqn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fqo:f32[] = div -2.0 fqn
    fqp:f32[200] = mul a fqm
    fqq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fqo
    fqr:f32[200] = mul fqq fqp
    fqs:f32[] = reduce_sum[axes=(0,)] fqr
    fqt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fqu:f32[] = div -2.0 fqt
    fqv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fqu
    fqw:f32[200] = mul fqv fqm
    fqx:f32[] = reduce_sum[axes=(0,)] fqw
    fqy:f32[] = mul 0.0010000000474974513 fqs
    fqz:f32[] = sub fqh fqy
    fra:f32[] = mul 0.0010000000474974513 fqx
    frb:f32[] = sub fqj fra
    frc:f32[200] = mul fqz a
    frd:f32[200] = add frc frb
    fre:f32[200] = sub b frd
    frf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    frg:f32[] = div -2.0 frf
    frh:f32[200] = mul a fre
    fri:f32[] = convert_element_type[new_dtype=float32 weak_type=False] frg
    frj:f32[200] = mul fri frh
    frk:f32[] = reduce_sum[axes=(0,)] frj
    frl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    frm:f32[] = div -2.0 frl
    frn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] frm
    fro:f32[200] = mul frn fre
    frp:f32[] = reduce_sum[axes=(0,)] fro
    frq:f32[] = mul 0.0010000000474974513 frk
    frr:f32[] = sub fqz frq
    frs:f32[] = mul 0.0010000000474974513 frp
    frt:f32[] = sub frb frs
    fru:f32[200] = mul frr a
    frv:f32[200] = add fru frt
    frw:f32[200] = sub b frv
    frx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fry:f32[] = div -2.0 frx
    frz:f32[200] = mul a frw
    fsa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fry
    fsb:f32[200] = mul fsa frz
    fsc:f32[] = reduce_sum[axes=(0,)] fsb
    fsd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fse:f32[] = div -2.0 fsd
    fsf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fse
    fsg:f32[200] = mul fsf frw
    fsh:f32[] = reduce_sum[axes=(0,)] fsg
    fsi:f32[] = mul 0.0010000000474974513 fsc
    fsj:f32[] = sub frr fsi
    fsk:f32[] = mul 0.0010000000474974513 fsh
    fsl:f32[] = sub frt fsk
    fsm:f32[200] = mul fsj a
    fsn:f32[200] = add fsm fsl
    fso:f32[200] = sub b fsn
    fsp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fsq:f32[] = div -2.0 fsp
    fsr:f32[200] = mul a fso
    fss:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fsq
    fst:f32[200] = mul fss fsr
    fsu:f32[] = reduce_sum[axes=(0,)] fst
    fsv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fsw:f32[] = div -2.0 fsv
    fsx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fsw
    fsy:f32[200] = mul fsx fso
    fsz:f32[] = reduce_sum[axes=(0,)] fsy
    fta:f32[] = mul 0.0010000000474974513 fsu
    ftb:f32[] = sub fsj fta
    ftc:f32[] = mul 0.0010000000474974513 fsz
    ftd:f32[] = sub fsl ftc
    fte:f32[200] = mul ftb a
    ftf:f32[200] = add fte ftd
    ftg:f32[200] = sub b ftf
    fth:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fti:f32[] = div -2.0 fth
    ftj:f32[200] = mul a ftg
    ftk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fti
    ftl:f32[200] = mul ftk ftj
    ftm:f32[] = reduce_sum[axes=(0,)] ftl
    ftn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fto:f32[] = div -2.0 ftn
    ftp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fto
    ftq:f32[200] = mul ftp ftg
    ftr:f32[] = reduce_sum[axes=(0,)] ftq
    fts:f32[] = mul 0.0010000000474974513 ftm
    ftt:f32[] = sub ftb fts
    ftu:f32[] = mul 0.0010000000474974513 ftr
    ftv:f32[] = sub ftd ftu
    ftw:f32[200] = mul ftt a
    ftx:f32[200] = add ftw ftv
    fty:f32[200] = sub b ftx
    ftz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fua:f32[] = div -2.0 ftz
    fub:f32[200] = mul a fty
    fuc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fua
    fud:f32[200] = mul fuc fub
    fue:f32[] = reduce_sum[axes=(0,)] fud
    fuf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fug:f32[] = div -2.0 fuf
    fuh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fug
    fui:f32[200] = mul fuh fty
    fuj:f32[] = reduce_sum[axes=(0,)] fui
    fuk:f32[] = mul 0.0010000000474974513 fue
    ful:f32[] = sub ftt fuk
    fum:f32[] = mul 0.0010000000474974513 fuj
    fun:f32[] = sub ftv fum
    fuo:f32[200] = mul ful a
    fup:f32[200] = add fuo fun
    fuq:f32[200] = sub b fup
    fur:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fus:f32[] = div -2.0 fur
    fut:f32[200] = mul a fuq
    fuu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fus
    fuv:f32[200] = mul fuu fut
    fuw:f32[] = reduce_sum[axes=(0,)] fuv
    fux:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fuy:f32[] = div -2.0 fux
    fuz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fuy
    fva:f32[200] = mul fuz fuq
    fvb:f32[] = reduce_sum[axes=(0,)] fva
    fvc:f32[] = mul 0.0010000000474974513 fuw
    fvd:f32[] = sub ful fvc
    fve:f32[] = mul 0.0010000000474974513 fvb
    fvf:f32[] = sub fun fve
    fvg:f32[200] = mul fvd a
    fvh:f32[200] = add fvg fvf
    fvi:f32[200] = sub b fvh
    fvj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fvk:f32[] = div -2.0 fvj
    fvl:f32[200] = mul a fvi
    fvm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fvk
    fvn:f32[200] = mul fvm fvl
    fvo:f32[] = reduce_sum[axes=(0,)] fvn
    fvp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fvq:f32[] = div -2.0 fvp
    fvr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fvq
    fvs:f32[200] = mul fvr fvi
    fvt:f32[] = reduce_sum[axes=(0,)] fvs
    fvu:f32[] = mul 0.0010000000474974513 fvo
    fvv:f32[] = sub fvd fvu
    fvw:f32[] = mul 0.0010000000474974513 fvt
    fvx:f32[] = sub fvf fvw
    fvy:f32[200] = mul fvv a
    fvz:f32[200] = add fvy fvx
    fwa:f32[200] = sub b fvz
    fwb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fwc:f32[] = div -2.0 fwb
    fwd:f32[200] = mul a fwa
    fwe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fwc
    fwf:f32[200] = mul fwe fwd
    fwg:f32[] = reduce_sum[axes=(0,)] fwf
    fwh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fwi:f32[] = div -2.0 fwh
    fwj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fwi
    fwk:f32[200] = mul fwj fwa
    fwl:f32[] = reduce_sum[axes=(0,)] fwk
    fwm:f32[] = mul 0.0010000000474974513 fwg
    fwn:f32[] = sub fvv fwm
    fwo:f32[] = mul 0.0010000000474974513 fwl
    fwp:f32[] = sub fvx fwo
    fwq:f32[200] = mul fwn a
    fwr:f32[200] = add fwq fwp
    fws:f32[200] = sub b fwr
    fwt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fwu:f32[] = div -2.0 fwt
    fwv:f32[200] = mul a fws
    fww:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fwu
    fwx:f32[200] = mul fww fwv
    fwy:f32[] = reduce_sum[axes=(0,)] fwx
    fwz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fxa:f32[] = div -2.0 fwz
    fxb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fxa
    fxc:f32[200] = mul fxb fws
    fxd:f32[] = reduce_sum[axes=(0,)] fxc
    fxe:f32[] = mul 0.0010000000474974513 fwy
    fxf:f32[] = sub fwn fxe
    fxg:f32[] = mul 0.0010000000474974513 fxd
    fxh:f32[] = sub fwp fxg
    fxi:f32[200] = mul fxf a
    fxj:f32[200] = add fxi fxh
    fxk:f32[200] = sub b fxj
    fxl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fxm:f32[] = div -2.0 fxl
    fxn:f32[200] = mul a fxk
    fxo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fxm
    fxp:f32[200] = mul fxo fxn
    fxq:f32[] = reduce_sum[axes=(0,)] fxp
    fxr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fxs:f32[] = div -2.0 fxr
    fxt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fxs
    fxu:f32[200] = mul fxt fxk
    fxv:f32[] = reduce_sum[axes=(0,)] fxu
    fxw:f32[] = mul 0.0010000000474974513 fxq
    fxx:f32[] = sub fxf fxw
    fxy:f32[] = mul 0.0010000000474974513 fxv
    fxz:f32[] = sub fxh fxy
    fya:f32[200] = mul fxx a
    fyb:f32[200] = add fya fxz
    fyc:f32[200] = sub b fyb
    fyd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fye:f32[] = div -2.0 fyd
    fyf:f32[200] = mul a fyc
    fyg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fye
    fyh:f32[200] = mul fyg fyf
    fyi:f32[] = reduce_sum[axes=(0,)] fyh
    fyj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fyk:f32[] = div -2.0 fyj
    fyl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fyk
    fym:f32[200] = mul fyl fyc
    fyn:f32[] = reduce_sum[axes=(0,)] fym
    fyo:f32[] = mul 0.0010000000474974513 fyi
    fyp:f32[] = sub fxx fyo
    fyq:f32[] = mul 0.0010000000474974513 fyn
    fyr:f32[] = sub fxz fyq
    fys:f32[200] = mul fyp a
    fyt:f32[200] = add fys fyr
    fyu:f32[200] = sub b fyt
    fyv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fyw:f32[] = div -2.0 fyv
    fyx:f32[200] = mul a fyu
    fyy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fyw
    fyz:f32[200] = mul fyy fyx
    fza:f32[] = reduce_sum[axes=(0,)] fyz
    fzb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fzc:f32[] = div -2.0 fzb
    fzd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fzc
    fze:f32[200] = mul fzd fyu
    fzf:f32[] = reduce_sum[axes=(0,)] fze
    fzg:f32[] = mul 0.0010000000474974513 fza
    fzh:f32[] = sub fyp fzg
    fzi:f32[] = mul 0.0010000000474974513 fzf
    fzj:f32[] = sub fyr fzi
    fzk:f32[200] = mul fzh a
    fzl:f32[200] = add fzk fzj
    fzm:f32[200] = sub b fzl
    fzn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fzo:f32[] = div -2.0 fzn
    fzp:f32[200] = mul a fzm
    fzq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fzo
    fzr:f32[200] = mul fzq fzp
    fzs:f32[] = reduce_sum[axes=(0,)] fzr
    fzt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    fzu:f32[] = div -2.0 fzt
    fzv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] fzu
    fzw:f32[200] = mul fzv fzm
    fzx:f32[] = reduce_sum[axes=(0,)] fzw
    fzy:f32[] = mul 0.0010000000474974513 fzs
    fzz:f32[] = sub fzh fzy
    gaa:f32[] = mul 0.0010000000474974513 fzx
    gab:f32[] = sub fzj gaa
    gac:f32[200] = mul fzz a
    gad:f32[200] = add gac gab
    gae:f32[200] = sub b gad
    gaf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gag:f32[] = div -2.0 gaf
    gah:f32[200] = mul a gae
    gai:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gag
    gaj:f32[200] = mul gai gah
    gak:f32[] = reduce_sum[axes=(0,)] gaj
    gal:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gam:f32[] = div -2.0 gal
    gan:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gam
    gao:f32[200] = mul gan gae
    gap:f32[] = reduce_sum[axes=(0,)] gao
    gaq:f32[] = mul 0.0010000000474974513 gak
    gar:f32[] = sub fzz gaq
    gas:f32[] = mul 0.0010000000474974513 gap
    gat:f32[] = sub gab gas
    gau:f32[200] = mul gar a
    gav:f32[200] = add gau gat
    gaw:f32[200] = sub b gav
    gax:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gay:f32[] = div -2.0 gax
    gaz:f32[200] = mul a gaw
    gba:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gay
    gbb:f32[200] = mul gba gaz
    gbc:f32[] = reduce_sum[axes=(0,)] gbb
    gbd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gbe:f32[] = div -2.0 gbd
    gbf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gbe
    gbg:f32[200] = mul gbf gaw
    gbh:f32[] = reduce_sum[axes=(0,)] gbg
    gbi:f32[] = mul 0.0010000000474974513 gbc
    gbj:f32[] = sub gar gbi
    gbk:f32[] = mul 0.0010000000474974513 gbh
    gbl:f32[] = sub gat gbk
    gbm:f32[200] = mul gbj a
    gbn:f32[200] = add gbm gbl
    gbo:f32[200] = sub b gbn
    gbp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gbq:f32[] = div -2.0 gbp
    gbr:f32[200] = mul a gbo
    gbs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gbq
    gbt:f32[200] = mul gbs gbr
    gbu:f32[] = reduce_sum[axes=(0,)] gbt
    gbv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gbw:f32[] = div -2.0 gbv
    gbx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gbw
    gby:f32[200] = mul gbx gbo
    gbz:f32[] = reduce_sum[axes=(0,)] gby
    gca:f32[] = mul 0.0010000000474974513 gbu
    gcb:f32[] = sub gbj gca
    gcc:f32[] = mul 0.0010000000474974513 gbz
    gcd:f32[] = sub gbl gcc
    gce:f32[200] = mul gcb a
    gcf:f32[200] = add gce gcd
    gcg:f32[200] = sub b gcf
    gch:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gci:f32[] = div -2.0 gch
    gcj:f32[200] = mul a gcg
    gck:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gci
    gcl:f32[200] = mul gck gcj
    gcm:f32[] = reduce_sum[axes=(0,)] gcl
    gcn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gco:f32[] = div -2.0 gcn
    gcp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gco
    gcq:f32[200] = mul gcp gcg
    gcr:f32[] = reduce_sum[axes=(0,)] gcq
    gcs:f32[] = mul 0.0010000000474974513 gcm
    gct:f32[] = sub gcb gcs
    gcu:f32[] = mul 0.0010000000474974513 gcr
    gcv:f32[] = sub gcd gcu
    gcw:f32[200] = mul gct a
    gcx:f32[200] = add gcw gcv
    gcy:f32[200] = sub b gcx
    gcz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gda:f32[] = div -2.0 gcz
    gdb:f32[200] = mul a gcy
    gdc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gda
    gdd:f32[200] = mul gdc gdb
    gde:f32[] = reduce_sum[axes=(0,)] gdd
    gdf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gdg:f32[] = div -2.0 gdf
    gdh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gdg
    gdi:f32[200] = mul gdh gcy
    gdj:f32[] = reduce_sum[axes=(0,)] gdi
    gdk:f32[] = mul 0.0010000000474974513 gde
    gdl:f32[] = sub gct gdk
    gdm:f32[] = mul 0.0010000000474974513 gdj
    gdn:f32[] = sub gcv gdm
    gdo:f32[200] = mul gdl a
    gdp:f32[200] = add gdo gdn
    gdq:f32[200] = sub b gdp
    gdr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gds:f32[] = div -2.0 gdr
    gdt:f32[200] = mul a gdq
    gdu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gds
    gdv:f32[200] = mul gdu gdt
    gdw:f32[] = reduce_sum[axes=(0,)] gdv
    gdx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gdy:f32[] = div -2.0 gdx
    gdz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gdy
    gea:f32[200] = mul gdz gdq
    geb:f32[] = reduce_sum[axes=(0,)] gea
    gec:f32[] = mul 0.0010000000474974513 gdw
    ged:f32[] = sub gdl gec
    gee:f32[] = mul 0.0010000000474974513 geb
    gef:f32[] = sub gdn gee
    geg:f32[200] = mul ged a
    geh:f32[200] = add geg gef
    gei:f32[200] = sub b geh
    gej:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gek:f32[] = div -2.0 gej
    gel:f32[200] = mul a gei
    gem:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gek
    gen:f32[200] = mul gem gel
    geo:f32[] = reduce_sum[axes=(0,)] gen
    gep:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    geq:f32[] = div -2.0 gep
    ger:f32[] = convert_element_type[new_dtype=float32 weak_type=False] geq
    ges:f32[200] = mul ger gei
    get:f32[] = reduce_sum[axes=(0,)] ges
    geu:f32[] = mul 0.0010000000474974513 geo
    gev:f32[] = sub ged geu
    gew:f32[] = mul 0.0010000000474974513 get
    gex:f32[] = sub gef gew
    gey:f32[200] = mul gev a
    gez:f32[200] = add gey gex
    gfa:f32[200] = sub b gez
    gfb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gfc:f32[] = div -2.0 gfb
    gfd:f32[200] = mul a gfa
    gfe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gfc
    gff:f32[200] = mul gfe gfd
    gfg:f32[] = reduce_sum[axes=(0,)] gff
    gfh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gfi:f32[] = div -2.0 gfh
    gfj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gfi
    gfk:f32[200] = mul gfj gfa
    gfl:f32[] = reduce_sum[axes=(0,)] gfk
    gfm:f32[] = mul 0.0010000000474974513 gfg
    gfn:f32[] = sub gev gfm
    gfo:f32[] = mul 0.0010000000474974513 gfl
    gfp:f32[] = sub gex gfo
    gfq:f32[200] = mul gfn a
    gfr:f32[200] = add gfq gfp
    gfs:f32[200] = sub b gfr
    gft:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gfu:f32[] = div -2.0 gft
    gfv:f32[200] = mul a gfs
    gfw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gfu
    gfx:f32[200] = mul gfw gfv
    gfy:f32[] = reduce_sum[axes=(0,)] gfx
    gfz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gga:f32[] = div -2.0 gfz
    ggb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gga
    ggc:f32[200] = mul ggb gfs
    ggd:f32[] = reduce_sum[axes=(0,)] ggc
    gge:f32[] = mul 0.0010000000474974513 gfy
    ggf:f32[] = sub gfn gge
    ggg:f32[] = mul 0.0010000000474974513 ggd
    ggh:f32[] = sub gfp ggg
    ggi:f32[200] = mul ggf a
    ggj:f32[200] = add ggi ggh
    ggk:f32[200] = sub b ggj
    ggl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ggm:f32[] = div -2.0 ggl
    ggn:f32[200] = mul a ggk
    ggo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ggm
    ggp:f32[200] = mul ggo ggn
    ggq:f32[] = reduce_sum[axes=(0,)] ggp
    ggr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ggs:f32[] = div -2.0 ggr
    ggt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ggs
    ggu:f32[200] = mul ggt ggk
    ggv:f32[] = reduce_sum[axes=(0,)] ggu
    ggw:f32[] = mul 0.0010000000474974513 ggq
    ggx:f32[] = sub ggf ggw
    ggy:f32[] = mul 0.0010000000474974513 ggv
    ggz:f32[] = sub ggh ggy
    gha:f32[200] = mul ggx a
    ghb:f32[200] = add gha ggz
    ghc:f32[200] = sub b ghb
    ghd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ghe:f32[] = div -2.0 ghd
    ghf:f32[200] = mul a ghc
    ghg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ghe
    ghh:f32[200] = mul ghg ghf
    ghi:f32[] = reduce_sum[axes=(0,)] ghh
    ghj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ghk:f32[] = div -2.0 ghj
    ghl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ghk
    ghm:f32[200] = mul ghl ghc
    ghn:f32[] = reduce_sum[axes=(0,)] ghm
    gho:f32[] = mul 0.0010000000474974513 ghi
    ghp:f32[] = sub ggx gho
    ghq:f32[] = mul 0.0010000000474974513 ghn
    ghr:f32[] = sub ggz ghq
    ghs:f32[200] = mul ghp a
    ght:f32[200] = add ghs ghr
    ghu:f32[200] = sub b ght
    ghv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ghw:f32[] = div -2.0 ghv
    ghx:f32[200] = mul a ghu
    ghy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ghw
    ghz:f32[200] = mul ghy ghx
    gia:f32[] = reduce_sum[axes=(0,)] ghz
    gib:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gic:f32[] = div -2.0 gib
    gid:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gic
    gie:f32[200] = mul gid ghu
    gif:f32[] = reduce_sum[axes=(0,)] gie
    gig:f32[] = mul 0.0010000000474974513 gia
    gih:f32[] = sub ghp gig
    gii:f32[] = mul 0.0010000000474974513 gif
    gij:f32[] = sub ghr gii
    gik:f32[200] = mul gih a
    gil:f32[200] = add gik gij
    gim:f32[200] = sub b gil
    gin:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gio:f32[] = div -2.0 gin
    gip:f32[200] = mul a gim
    giq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gio
    gir:f32[200] = mul giq gip
    gis:f32[] = reduce_sum[axes=(0,)] gir
    git:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    giu:f32[] = div -2.0 git
    giv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] giu
    giw:f32[200] = mul giv gim
    gix:f32[] = reduce_sum[axes=(0,)] giw
    giy:f32[] = mul 0.0010000000474974513 gis
    giz:f32[] = sub gih giy
    gja:f32[] = mul 0.0010000000474974513 gix
    gjb:f32[] = sub gij gja
    gjc:f32[200] = mul giz a
    gjd:f32[200] = add gjc gjb
    gje:f32[200] = sub b gjd
    gjf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gjg:f32[] = div -2.0 gjf
    gjh:f32[200] = mul a gje
    gji:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gjg
    gjj:f32[200] = mul gji gjh
    gjk:f32[] = reduce_sum[axes=(0,)] gjj
    gjl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gjm:f32[] = div -2.0 gjl
    gjn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gjm
    gjo:f32[200] = mul gjn gje
    gjp:f32[] = reduce_sum[axes=(0,)] gjo
    gjq:f32[] = mul 0.0010000000474974513 gjk
    gjr:f32[] = sub giz gjq
    gjs:f32[] = mul 0.0010000000474974513 gjp
    gjt:f32[] = sub gjb gjs
    gju:f32[200] = mul gjr a
    gjv:f32[200] = add gju gjt
    gjw:f32[200] = sub b gjv
    gjx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gjy:f32[] = div -2.0 gjx
    gjz:f32[200] = mul a gjw
    gka:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gjy
    gkb:f32[200] = mul gka gjz
    gkc:f32[] = reduce_sum[axes=(0,)] gkb
    gkd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gke:f32[] = div -2.0 gkd
    gkf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gke
    gkg:f32[200] = mul gkf gjw
    gkh:f32[] = reduce_sum[axes=(0,)] gkg
    gki:f32[] = mul 0.0010000000474974513 gkc
    gkj:f32[] = sub gjr gki
    gkk:f32[] = mul 0.0010000000474974513 gkh
    gkl:f32[] = sub gjt gkk
    gkm:f32[200] = mul gkj a
    gkn:f32[200] = add gkm gkl
    gko:f32[200] = sub b gkn
    gkp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gkq:f32[] = div -2.0 gkp
    gkr:f32[200] = mul a gko
    gks:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gkq
    gkt:f32[200] = mul gks gkr
    gku:f32[] = reduce_sum[axes=(0,)] gkt
    gkv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gkw:f32[] = div -2.0 gkv
    gkx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gkw
    gky:f32[200] = mul gkx gko
    gkz:f32[] = reduce_sum[axes=(0,)] gky
    gla:f32[] = mul 0.0010000000474974513 gku
    glb:f32[] = sub gkj gla
    glc:f32[] = mul 0.0010000000474974513 gkz
    gld:f32[] = sub gkl glc
    gle:f32[200] = mul glb a
    glf:f32[200] = add gle gld
    glg:f32[200] = sub b glf
    glh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gli:f32[] = div -2.0 glh
    glj:f32[200] = mul a glg
    glk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gli
    gll:f32[200] = mul glk glj
    glm:f32[] = reduce_sum[axes=(0,)] gll
    gln:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    glo:f32[] = div -2.0 gln
    glp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] glo
    glq:f32[200] = mul glp glg
    glr:f32[] = reduce_sum[axes=(0,)] glq
    gls:f32[] = mul 0.0010000000474974513 glm
    glt:f32[] = sub glb gls
    glu:f32[] = mul 0.0010000000474974513 glr
    glv:f32[] = sub gld glu
    glw:f32[200] = mul glt a
    glx:f32[200] = add glw glv
    gly:f32[200] = sub b glx
    glz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gma:f32[] = div -2.0 glz
    gmb:f32[200] = mul a gly
    gmc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gma
    gmd:f32[200] = mul gmc gmb
    gme:f32[] = reduce_sum[axes=(0,)] gmd
    gmf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gmg:f32[] = div -2.0 gmf
    gmh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gmg
    gmi:f32[200] = mul gmh gly
    gmj:f32[] = reduce_sum[axes=(0,)] gmi
    gmk:f32[] = mul 0.0010000000474974513 gme
    gml:f32[] = sub glt gmk
    gmm:f32[] = mul 0.0010000000474974513 gmj
    gmn:f32[] = sub glv gmm
    gmo:f32[200] = mul gml a
    gmp:f32[200] = add gmo gmn
    gmq:f32[200] = sub b gmp
    gmr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gms:f32[] = div -2.0 gmr
    gmt:f32[200] = mul a gmq
    gmu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gms
    gmv:f32[200] = mul gmu gmt
    gmw:f32[] = reduce_sum[axes=(0,)] gmv
    gmx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gmy:f32[] = div -2.0 gmx
    gmz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gmy
    gna:f32[200] = mul gmz gmq
    gnb:f32[] = reduce_sum[axes=(0,)] gna
    gnc:f32[] = mul 0.0010000000474974513 gmw
    gnd:f32[] = sub gml gnc
    gne:f32[] = mul 0.0010000000474974513 gnb
    gnf:f32[] = sub gmn gne
    gng:f32[200] = mul gnd a
    gnh:f32[200] = add gng gnf
    gni:f32[200] = sub b gnh
    gnj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gnk:f32[] = div -2.0 gnj
    gnl:f32[200] = mul a gni
    gnm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gnk
    gnn:f32[200] = mul gnm gnl
    gno:f32[] = reduce_sum[axes=(0,)] gnn
    gnp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gnq:f32[] = div -2.0 gnp
    gnr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gnq
    gns:f32[200] = mul gnr gni
    gnt:f32[] = reduce_sum[axes=(0,)] gns
    gnu:f32[] = mul 0.0010000000474974513 gno
    gnv:f32[] = sub gnd gnu
    gnw:f32[] = mul 0.0010000000474974513 gnt
    gnx:f32[] = sub gnf gnw
    gny:f32[200] = mul gnv a
    gnz:f32[200] = add gny gnx
    goa:f32[200] = sub b gnz
    gob:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    goc:f32[] = div -2.0 gob
    god:f32[200] = mul a goa
    goe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] goc
    gof:f32[200] = mul goe god
    gog:f32[] = reduce_sum[axes=(0,)] gof
    goh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    goi:f32[] = div -2.0 goh
    goj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] goi
    gok:f32[200] = mul goj goa
    gol:f32[] = reduce_sum[axes=(0,)] gok
    gom:f32[] = mul 0.0010000000474974513 gog
    gon:f32[] = sub gnv gom
    goo:f32[] = mul 0.0010000000474974513 gol
    gop:f32[] = sub gnx goo
    goq:f32[200] = mul gon a
    gor:f32[200] = add goq gop
    gos:f32[200] = sub b gor
    got:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gou:f32[] = div -2.0 got
    gov:f32[200] = mul a gos
    gow:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gou
    gox:f32[200] = mul gow gov
    goy:f32[] = reduce_sum[axes=(0,)] gox
    goz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gpa:f32[] = div -2.0 goz
    gpb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gpa
    gpc:f32[200] = mul gpb gos
    gpd:f32[] = reduce_sum[axes=(0,)] gpc
    gpe:f32[] = mul 0.0010000000474974513 goy
    gpf:f32[] = sub gon gpe
    gpg:f32[] = mul 0.0010000000474974513 gpd
    gph:f32[] = sub gop gpg
    gpi:f32[200] = mul gpf a
    gpj:f32[200] = add gpi gph
    gpk:f32[200] = sub b gpj
    gpl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gpm:f32[] = div -2.0 gpl
    gpn:f32[200] = mul a gpk
    gpo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gpm
    gpp:f32[200] = mul gpo gpn
    gpq:f32[] = reduce_sum[axes=(0,)] gpp
    gpr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gps:f32[] = div -2.0 gpr
    gpt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gps
    gpu:f32[200] = mul gpt gpk
    gpv:f32[] = reduce_sum[axes=(0,)] gpu
    gpw:f32[] = mul 0.0010000000474974513 gpq
    gpx:f32[] = sub gpf gpw
    gpy:f32[] = mul 0.0010000000474974513 gpv
    gpz:f32[] = sub gph gpy
    gqa:f32[200] = mul gpx a
    gqb:f32[200] = add gqa gpz
    gqc:f32[200] = sub b gqb
    gqd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gqe:f32[] = div -2.0 gqd
    gqf:f32[200] = mul a gqc
    gqg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gqe
    gqh:f32[200] = mul gqg gqf
    gqi:f32[] = reduce_sum[axes=(0,)] gqh
    gqj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gqk:f32[] = div -2.0 gqj
    gql:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gqk
    gqm:f32[200] = mul gql gqc
    gqn:f32[] = reduce_sum[axes=(0,)] gqm
    gqo:f32[] = mul 0.0010000000474974513 gqi
    gqp:f32[] = sub gpx gqo
    gqq:f32[] = mul 0.0010000000474974513 gqn
    gqr:f32[] = sub gpz gqq
    gqs:f32[200] = mul gqp a
    gqt:f32[200] = add gqs gqr
    gqu:f32[200] = sub b gqt
    gqv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gqw:f32[] = div -2.0 gqv
    gqx:f32[200] = mul a gqu
    gqy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gqw
    gqz:f32[200] = mul gqy gqx
    gra:f32[] = reduce_sum[axes=(0,)] gqz
    grb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    grc:f32[] = div -2.0 grb
    grd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] grc
    gre:f32[200] = mul grd gqu
    grf:f32[] = reduce_sum[axes=(0,)] gre
    grg:f32[] = mul 0.0010000000474974513 gra
    grh:f32[] = sub gqp grg
    gri:f32[] = mul 0.0010000000474974513 grf
    grj:f32[] = sub gqr gri
    grk:f32[200] = mul grh a
    grl:f32[200] = add grk grj
    grm:f32[200] = sub b grl
    grn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gro:f32[] = div -2.0 grn
    grp:f32[200] = mul a grm
    grq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gro
    grr:f32[200] = mul grq grp
    grs:f32[] = reduce_sum[axes=(0,)] grr
    grt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gru:f32[] = div -2.0 grt
    grv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gru
    grw:f32[200] = mul grv grm
    grx:f32[] = reduce_sum[axes=(0,)] grw
    gry:f32[] = mul 0.0010000000474974513 grs
    grz:f32[] = sub grh gry
    gsa:f32[] = mul 0.0010000000474974513 grx
    gsb:f32[] = sub grj gsa
    gsc:f32[200] = mul grz a
    gsd:f32[200] = add gsc gsb
    gse:f32[200] = sub b gsd
    gsf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gsg:f32[] = div -2.0 gsf
    gsh:f32[200] = mul a gse
    gsi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gsg
    gsj:f32[200] = mul gsi gsh
    gsk:f32[] = reduce_sum[axes=(0,)] gsj
    gsl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gsm:f32[] = div -2.0 gsl
    gsn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gsm
    gso:f32[200] = mul gsn gse
    gsp:f32[] = reduce_sum[axes=(0,)] gso
    gsq:f32[] = mul 0.0010000000474974513 gsk
    gsr:f32[] = sub grz gsq
    gss:f32[] = mul 0.0010000000474974513 gsp
    gst:f32[] = sub gsb gss
    gsu:f32[200] = mul gsr a
    gsv:f32[200] = add gsu gst
    gsw:f32[200] = sub b gsv
    gsx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gsy:f32[] = div -2.0 gsx
    gsz:f32[200] = mul a gsw
    gta:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gsy
    gtb:f32[200] = mul gta gsz
    gtc:f32[] = reduce_sum[axes=(0,)] gtb
    gtd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gte:f32[] = div -2.0 gtd
    gtf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gte
    gtg:f32[200] = mul gtf gsw
    gth:f32[] = reduce_sum[axes=(0,)] gtg
    gti:f32[] = mul 0.0010000000474974513 gtc
    gtj:f32[] = sub gsr gti
    gtk:f32[] = mul 0.0010000000474974513 gth
    gtl:f32[] = sub gst gtk
    gtm:f32[200] = mul gtj a
    gtn:f32[200] = add gtm gtl
    gto:f32[200] = sub b gtn
    gtp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gtq:f32[] = div -2.0 gtp
    gtr:f32[200] = mul a gto
    gts:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gtq
    gtt:f32[200] = mul gts gtr
    gtu:f32[] = reduce_sum[axes=(0,)] gtt
    gtv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gtw:f32[] = div -2.0 gtv
    gtx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gtw
    gty:f32[200] = mul gtx gto
    gtz:f32[] = reduce_sum[axes=(0,)] gty
    gua:f32[] = mul 0.0010000000474974513 gtu
    gub:f32[] = sub gtj gua
    guc:f32[] = mul 0.0010000000474974513 gtz
    gud:f32[] = sub gtl guc
    gue:f32[200] = mul gub a
    guf:f32[200] = add gue gud
    gug:f32[200] = sub b guf
    guh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gui:f32[] = div -2.0 guh
    guj:f32[200] = mul a gug
    guk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gui
    gul:f32[200] = mul guk guj
    gum:f32[] = reduce_sum[axes=(0,)] gul
    gun:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    guo:f32[] = div -2.0 gun
    gup:f32[] = convert_element_type[new_dtype=float32 weak_type=False] guo
    guq:f32[200] = mul gup gug
    gur:f32[] = reduce_sum[axes=(0,)] guq
    gus:f32[] = mul 0.0010000000474974513 gum
    gut:f32[] = sub gub gus
    guu:f32[] = mul 0.0010000000474974513 gur
    guv:f32[] = sub gud guu
    guw:f32[200] = mul gut a
    gux:f32[200] = add guw guv
    guy:f32[200] = sub b gux
    guz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gva:f32[] = div -2.0 guz
    gvb:f32[200] = mul a guy
    gvc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gva
    gvd:f32[200] = mul gvc gvb
    gve:f32[] = reduce_sum[axes=(0,)] gvd
    gvf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gvg:f32[] = div -2.0 gvf
    gvh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gvg
    gvi:f32[200] = mul gvh guy
    gvj:f32[] = reduce_sum[axes=(0,)] gvi
    gvk:f32[] = mul 0.0010000000474974513 gve
    gvl:f32[] = sub gut gvk
    gvm:f32[] = mul 0.0010000000474974513 gvj
    gvn:f32[] = sub guv gvm
    gvo:f32[200] = mul gvl a
    gvp:f32[200] = add gvo gvn
    gvq:f32[200] = sub b gvp
    gvr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gvs:f32[] = div -2.0 gvr
    gvt:f32[200] = mul a gvq
    gvu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gvs
    gvv:f32[200] = mul gvu gvt
    gvw:f32[] = reduce_sum[axes=(0,)] gvv
    gvx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gvy:f32[] = div -2.0 gvx
    gvz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gvy
    gwa:f32[200] = mul gvz gvq
    gwb:f32[] = reduce_sum[axes=(0,)] gwa
    gwc:f32[] = mul 0.0010000000474974513 gvw
    gwd:f32[] = sub gvl gwc
    gwe:f32[] = mul 0.0010000000474974513 gwb
    gwf:f32[] = sub gvn gwe
    gwg:f32[200] = mul gwd a
    gwh:f32[200] = add gwg gwf
    gwi:f32[200] = sub b gwh
    gwj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gwk:f32[] = div -2.0 gwj
    gwl:f32[200] = mul a gwi
    gwm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gwk
    gwn:f32[200] = mul gwm gwl
    gwo:f32[] = reduce_sum[axes=(0,)] gwn
    gwp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gwq:f32[] = div -2.0 gwp
    gwr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gwq
    gws:f32[200] = mul gwr gwi
    gwt:f32[] = reduce_sum[axes=(0,)] gws
    gwu:f32[] = mul 0.0010000000474974513 gwo
    gwv:f32[] = sub gwd gwu
    gww:f32[] = mul 0.0010000000474974513 gwt
    gwx:f32[] = sub gwf gww
    gwy:f32[200] = mul gwv a
    gwz:f32[200] = add gwy gwx
    gxa:f32[200] = sub b gwz
    gxb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gxc:f32[] = div -2.0 gxb
    gxd:f32[200] = mul a gxa
    gxe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gxc
    gxf:f32[200] = mul gxe gxd
    gxg:f32[] = reduce_sum[axes=(0,)] gxf
    gxh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gxi:f32[] = div -2.0 gxh
    gxj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gxi
    gxk:f32[200] = mul gxj gxa
    gxl:f32[] = reduce_sum[axes=(0,)] gxk
    gxm:f32[] = mul 0.0010000000474974513 gxg
    gxn:f32[] = sub gwv gxm
    gxo:f32[] = mul 0.0010000000474974513 gxl
    gxp:f32[] = sub gwx gxo
    gxq:f32[200] = mul gxn a
    gxr:f32[200] = add gxq gxp
    gxs:f32[200] = sub b gxr
    gxt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gxu:f32[] = div -2.0 gxt
    gxv:f32[200] = mul a gxs
    gxw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gxu
    gxx:f32[200] = mul gxw gxv
    gxy:f32[] = reduce_sum[axes=(0,)] gxx
    gxz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gya:f32[] = div -2.0 gxz
    gyb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gya
    gyc:f32[200] = mul gyb gxs
    gyd:f32[] = reduce_sum[axes=(0,)] gyc
    gye:f32[] = mul 0.0010000000474974513 gxy
    gyf:f32[] = sub gxn gye
    gyg:f32[] = mul 0.0010000000474974513 gyd
    gyh:f32[] = sub gxp gyg
    gyi:f32[200] = mul gyf a
    gyj:f32[200] = add gyi gyh
    gyk:f32[200] = sub b gyj
    gyl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gym:f32[] = div -2.0 gyl
    gyn:f32[200] = mul a gyk
    gyo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gym
    gyp:f32[200] = mul gyo gyn
    gyq:f32[] = reduce_sum[axes=(0,)] gyp
    gyr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gys:f32[] = div -2.0 gyr
    gyt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gys
    gyu:f32[200] = mul gyt gyk
    gyv:f32[] = reduce_sum[axes=(0,)] gyu
    gyw:f32[] = mul 0.0010000000474974513 gyq
    gyx:f32[] = sub gyf gyw
    gyy:f32[] = mul 0.0010000000474974513 gyv
    gyz:f32[] = sub gyh gyy
    gza:f32[200] = mul gyx a
    gzb:f32[200] = add gza gyz
    gzc:f32[200] = sub b gzb
    gzd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gze:f32[] = div -2.0 gzd
    gzf:f32[200] = mul a gzc
    gzg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gze
    gzh:f32[200] = mul gzg gzf
    gzi:f32[] = reduce_sum[axes=(0,)] gzh
    gzj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gzk:f32[] = div -2.0 gzj
    gzl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gzk
    gzm:f32[200] = mul gzl gzc
    gzn:f32[] = reduce_sum[axes=(0,)] gzm
    gzo:f32[] = mul 0.0010000000474974513 gzi
    gzp:f32[] = sub gyx gzo
    gzq:f32[] = mul 0.0010000000474974513 gzn
    gzr:f32[] = sub gyz gzq
    gzs:f32[200] = mul gzp a
    gzt:f32[200] = add gzs gzr
    gzu:f32[200] = sub b gzt
    gzv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    gzw:f32[] = div -2.0 gzv
    gzx:f32[200] = mul a gzu
    gzy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] gzw
    gzz:f32[200] = mul gzy gzx
    haa:f32[] = reduce_sum[axes=(0,)] gzz
    hab:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hac:f32[] = div -2.0 hab
    had:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hac
    hae:f32[200] = mul had gzu
    haf:f32[] = reduce_sum[axes=(0,)] hae
    hag:f32[] = mul 0.0010000000474974513 haa
    hah:f32[] = sub gzp hag
    hai:f32[] = mul 0.0010000000474974513 haf
    haj:f32[] = sub gzr hai
    hak:f32[200] = mul hah a
    hal:f32[200] = add hak haj
    ham:f32[200] = sub b hal
    han:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hao:f32[] = div -2.0 han
    hap:f32[200] = mul a ham
    haq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hao
    har:f32[200] = mul haq hap
    has:f32[] = reduce_sum[axes=(0,)] har
    hat:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hau:f32[] = div -2.0 hat
    hav:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hau
    haw:f32[200] = mul hav ham
    hax:f32[] = reduce_sum[axes=(0,)] haw
    hay:f32[] = mul 0.0010000000474974513 has
    haz:f32[] = sub hah hay
    hba:f32[] = mul 0.0010000000474974513 hax
    hbb:f32[] = sub haj hba
    hbc:f32[200] = mul haz a
    hbd:f32[200] = add hbc hbb
    hbe:f32[200] = sub b hbd
    hbf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hbg:f32[] = div -2.0 hbf
    hbh:f32[200] = mul a hbe
    hbi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hbg
    hbj:f32[200] = mul hbi hbh
    hbk:f32[] = reduce_sum[axes=(0,)] hbj
    hbl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hbm:f32[] = div -2.0 hbl
    hbn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hbm
    hbo:f32[200] = mul hbn hbe
    hbp:f32[] = reduce_sum[axes=(0,)] hbo
    hbq:f32[] = mul 0.0010000000474974513 hbk
    hbr:f32[] = sub haz hbq
    hbs:f32[] = mul 0.0010000000474974513 hbp
    hbt:f32[] = sub hbb hbs
    hbu:f32[200] = mul hbr a
    hbv:f32[200] = add hbu hbt
    hbw:f32[200] = sub b hbv
    hbx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hby:f32[] = div -2.0 hbx
    hbz:f32[200] = mul a hbw
    hca:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hby
    hcb:f32[200] = mul hca hbz
    hcc:f32[] = reduce_sum[axes=(0,)] hcb
    hcd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hce:f32[] = div -2.0 hcd
    hcf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hce
    hcg:f32[200] = mul hcf hbw
    hch:f32[] = reduce_sum[axes=(0,)] hcg
    hci:f32[] = mul 0.0010000000474974513 hcc
    hcj:f32[] = sub hbr hci
    hck:f32[] = mul 0.0010000000474974513 hch
    hcl:f32[] = sub hbt hck
    hcm:f32[200] = mul hcj a
    hcn:f32[200] = add hcm hcl
    hco:f32[200] = sub b hcn
    hcp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hcq:f32[] = div -2.0 hcp
    hcr:f32[200] = mul a hco
    hcs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hcq
    hct:f32[200] = mul hcs hcr
    hcu:f32[] = reduce_sum[axes=(0,)] hct
    hcv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hcw:f32[] = div -2.0 hcv
    hcx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hcw
    hcy:f32[200] = mul hcx hco
    hcz:f32[] = reduce_sum[axes=(0,)] hcy
    hda:f32[] = mul 0.0010000000474974513 hcu
    hdb:f32[] = sub hcj hda
    hdc:f32[] = mul 0.0010000000474974513 hcz
    hdd:f32[] = sub hcl hdc
    hde:f32[200] = mul hdb a
    hdf:f32[200] = add hde hdd
    hdg:f32[200] = sub b hdf
    hdh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hdi:f32[] = div -2.0 hdh
    hdj:f32[200] = mul a hdg
    hdk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hdi
    hdl:f32[200] = mul hdk hdj
    hdm:f32[] = reduce_sum[axes=(0,)] hdl
    hdn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hdo:f32[] = div -2.0 hdn
    hdp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hdo
    hdq:f32[200] = mul hdp hdg
    hdr:f32[] = reduce_sum[axes=(0,)] hdq
    hds:f32[] = mul 0.0010000000474974513 hdm
    hdt:f32[] = sub hdb hds
    hdu:f32[] = mul 0.0010000000474974513 hdr
    hdv:f32[] = sub hdd hdu
    hdw:f32[200] = mul hdt a
    hdx:f32[200] = add hdw hdv
    hdy:f32[200] = sub b hdx
    hdz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hea:f32[] = div -2.0 hdz
    heb:f32[200] = mul a hdy
    hec:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hea
    hed:f32[200] = mul hec heb
    hee:f32[] = reduce_sum[axes=(0,)] hed
    hef:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    heg:f32[] = div -2.0 hef
    heh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] heg
    hei:f32[200] = mul heh hdy
    hej:f32[] = reduce_sum[axes=(0,)] hei
    hek:f32[] = mul 0.0010000000474974513 hee
    hel:f32[] = sub hdt hek
    hem:f32[] = mul 0.0010000000474974513 hej
    hen:f32[] = sub hdv hem
    heo:f32[200] = mul hel a
    hep:f32[200] = add heo hen
    heq:f32[200] = sub b hep
    her:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hes:f32[] = div -2.0 her
    het:f32[200] = mul a heq
    heu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hes
    hev:f32[200] = mul heu het
    hew:f32[] = reduce_sum[axes=(0,)] hev
    hex:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hey:f32[] = div -2.0 hex
    hez:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hey
    hfa:f32[200] = mul hez heq
    hfb:f32[] = reduce_sum[axes=(0,)] hfa
    hfc:f32[] = mul 0.0010000000474974513 hew
    hfd:f32[] = sub hel hfc
    hfe:f32[] = mul 0.0010000000474974513 hfb
    hff:f32[] = sub hen hfe
    hfg:f32[200] = mul hfd a
    hfh:f32[200] = add hfg hff
    hfi:f32[200] = sub b hfh
    hfj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hfk:f32[] = div -2.0 hfj
    hfl:f32[200] = mul a hfi
    hfm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hfk
    hfn:f32[200] = mul hfm hfl
    hfo:f32[] = reduce_sum[axes=(0,)] hfn
    hfp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hfq:f32[] = div -2.0 hfp
    hfr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hfq
    hfs:f32[200] = mul hfr hfi
    hft:f32[] = reduce_sum[axes=(0,)] hfs
    hfu:f32[] = mul 0.0010000000474974513 hfo
    hfv:f32[] = sub hfd hfu
    hfw:f32[] = mul 0.0010000000474974513 hft
    hfx:f32[] = sub hff hfw
    hfy:f32[200] = mul hfv a
    hfz:f32[200] = add hfy hfx
    hga:f32[200] = sub b hfz
    hgb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hgc:f32[] = div -2.0 hgb
    hgd:f32[200] = mul a hga
    hge:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hgc
    hgf:f32[200] = mul hge hgd
    hgg:f32[] = reduce_sum[axes=(0,)] hgf
    hgh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hgi:f32[] = div -2.0 hgh
    hgj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hgi
    hgk:f32[200] = mul hgj hga
    hgl:f32[] = reduce_sum[axes=(0,)] hgk
    hgm:f32[] = mul 0.0010000000474974513 hgg
    hgn:f32[] = sub hfv hgm
    hgo:f32[] = mul 0.0010000000474974513 hgl
    hgp:f32[] = sub hfx hgo
    hgq:f32[200] = mul hgn a
    hgr:f32[200] = add hgq hgp
    hgs:f32[200] = sub b hgr
    hgt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hgu:f32[] = div -2.0 hgt
    hgv:f32[200] = mul a hgs
    hgw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hgu
    hgx:f32[200] = mul hgw hgv
    hgy:f32[] = reduce_sum[axes=(0,)] hgx
    hgz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hha:f32[] = div -2.0 hgz
    hhb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hha
    hhc:f32[200] = mul hhb hgs
    hhd:f32[] = reduce_sum[axes=(0,)] hhc
    hhe:f32[] = mul 0.0010000000474974513 hgy
    hhf:f32[] = sub hgn hhe
    hhg:f32[] = mul 0.0010000000474974513 hhd
    hhh:f32[] = sub hgp hhg
    hhi:f32[200] = mul hhf a
    hhj:f32[200] = add hhi hhh
    hhk:f32[200] = sub b hhj
    hhl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hhm:f32[] = div -2.0 hhl
    hhn:f32[200] = mul a hhk
    hho:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hhm
    hhp:f32[200] = mul hho hhn
    hhq:f32[] = reduce_sum[axes=(0,)] hhp
    hhr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hhs:f32[] = div -2.0 hhr
    hht:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hhs
    hhu:f32[200] = mul hht hhk
    hhv:f32[] = reduce_sum[axes=(0,)] hhu
    hhw:f32[] = mul 0.0010000000474974513 hhq
    hhx:f32[] = sub hhf hhw
    hhy:f32[] = mul 0.0010000000474974513 hhv
    hhz:f32[] = sub hhh hhy
    hia:f32[200] = mul hhx a
    hib:f32[200] = add hia hhz
    hic:f32[200] = sub b hib
    hid:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hie:f32[] = div -2.0 hid
    hif:f32[200] = mul a hic
    hig:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hie
    hih:f32[200] = mul hig hif
    hii:f32[] = reduce_sum[axes=(0,)] hih
    hij:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hik:f32[] = div -2.0 hij
    hil:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hik
    him:f32[200] = mul hil hic
    hin:f32[] = reduce_sum[axes=(0,)] him
    hio:f32[] = mul 0.0010000000474974513 hii
    hip:f32[] = sub hhx hio
    hiq:f32[] = mul 0.0010000000474974513 hin
    hir:f32[] = sub hhz hiq
    his:f32[200] = mul hip a
    hit:f32[200] = add his hir
    hiu:f32[200] = sub b hit
    hiv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hiw:f32[] = div -2.0 hiv
    hix:f32[200] = mul a hiu
    hiy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hiw
    hiz:f32[200] = mul hiy hix
    hja:f32[] = reduce_sum[axes=(0,)] hiz
    hjb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hjc:f32[] = div -2.0 hjb
    hjd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hjc
    hje:f32[200] = mul hjd hiu
    hjf:f32[] = reduce_sum[axes=(0,)] hje
    hjg:f32[] = mul 0.0010000000474974513 hja
    hjh:f32[] = sub hip hjg
    hji:f32[] = mul 0.0010000000474974513 hjf
    hjj:f32[] = sub hir hji
    hjk:f32[200] = mul hjh a
    hjl:f32[200] = add hjk hjj
    hjm:f32[200] = sub b hjl
    hjn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hjo:f32[] = div -2.0 hjn
    hjp:f32[200] = mul a hjm
    hjq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hjo
    hjr:f32[200] = mul hjq hjp
    hjs:f32[] = reduce_sum[axes=(0,)] hjr
    hjt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hju:f32[] = div -2.0 hjt
    hjv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hju
    hjw:f32[200] = mul hjv hjm
    hjx:f32[] = reduce_sum[axes=(0,)] hjw
    hjy:f32[] = mul 0.0010000000474974513 hjs
    hjz:f32[] = sub hjh hjy
    hka:f32[] = mul 0.0010000000474974513 hjx
    hkb:f32[] = sub hjj hka
    hkc:f32[200] = mul hjz a
    hkd:f32[200] = add hkc hkb
    hke:f32[200] = sub b hkd
    hkf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hkg:f32[] = div -2.0 hkf
    hkh:f32[200] = mul a hke
    hki:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hkg
    hkj:f32[200] = mul hki hkh
    hkk:f32[] = reduce_sum[axes=(0,)] hkj
    hkl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hkm:f32[] = div -2.0 hkl
    hkn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hkm
    hko:f32[200] = mul hkn hke
    hkp:f32[] = reduce_sum[axes=(0,)] hko
    hkq:f32[] = mul 0.0010000000474974513 hkk
    hkr:f32[] = sub hjz hkq
    hks:f32[] = mul 0.0010000000474974513 hkp
    hkt:f32[] = sub hkb hks
    hku:f32[200] = mul hkr a
    hkv:f32[200] = add hku hkt
    hkw:f32[200] = sub b hkv
    hkx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hky:f32[] = div -2.0 hkx
    hkz:f32[200] = mul a hkw
    hla:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hky
    hlb:f32[200] = mul hla hkz
    hlc:f32[] = reduce_sum[axes=(0,)] hlb
    hld:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hle:f32[] = div -2.0 hld
    hlf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hle
    hlg:f32[200] = mul hlf hkw
    hlh:f32[] = reduce_sum[axes=(0,)] hlg
    hli:f32[] = mul 0.0010000000474974513 hlc
    hlj:f32[] = sub hkr hli
    hlk:f32[] = mul 0.0010000000474974513 hlh
    hll:f32[] = sub hkt hlk
    hlm:f32[200] = mul hlj a
    hln:f32[200] = add hlm hll
    hlo:f32[200] = sub b hln
    hlp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hlq:f32[] = div -2.0 hlp
    hlr:f32[200] = mul a hlo
    hls:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hlq
    hlt:f32[200] = mul hls hlr
    hlu:f32[] = reduce_sum[axes=(0,)] hlt
    hlv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hlw:f32[] = div -2.0 hlv
    hlx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hlw
    hly:f32[200] = mul hlx hlo
    hlz:f32[] = reduce_sum[axes=(0,)] hly
    hma:f32[] = mul 0.0010000000474974513 hlu
    hmb:f32[] = sub hlj hma
    hmc:f32[] = mul 0.0010000000474974513 hlz
    hmd:f32[] = sub hll hmc
    hme:f32[200] = mul hmb a
    hmf:f32[200] = add hme hmd
    hmg:f32[200] = sub b hmf
    hmh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hmi:f32[] = div -2.0 hmh
    hmj:f32[200] = mul a hmg
    hmk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hmi
    hml:f32[200] = mul hmk hmj
    hmm:f32[] = reduce_sum[axes=(0,)] hml
    hmn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hmo:f32[] = div -2.0 hmn
    hmp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hmo
    hmq:f32[200] = mul hmp hmg
    hmr:f32[] = reduce_sum[axes=(0,)] hmq
    hms:f32[] = mul 0.0010000000474974513 hmm
    hmt:f32[] = sub hmb hms
    hmu:f32[] = mul 0.0010000000474974513 hmr
    hmv:f32[] = sub hmd hmu
    hmw:f32[200] = mul hmt a
    hmx:f32[200] = add hmw hmv
    hmy:f32[200] = sub b hmx
    hmz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hna:f32[] = div -2.0 hmz
    hnb:f32[200] = mul a hmy
    hnc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hna
    hnd:f32[200] = mul hnc hnb
    hne:f32[] = reduce_sum[axes=(0,)] hnd
    hnf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hng:f32[] = div -2.0 hnf
    hnh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hng
    hni:f32[200] = mul hnh hmy
    hnj:f32[] = reduce_sum[axes=(0,)] hni
    hnk:f32[] = mul 0.0010000000474974513 hne
    hnl:f32[] = sub hmt hnk
    hnm:f32[] = mul 0.0010000000474974513 hnj
    hnn:f32[] = sub hmv hnm
    hno:f32[200] = mul hnl a
    hnp:f32[200] = add hno hnn
    hnq:f32[200] = sub b hnp
    hnr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hns:f32[] = div -2.0 hnr
    hnt:f32[200] = mul a hnq
    hnu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hns
    hnv:f32[200] = mul hnu hnt
    hnw:f32[] = reduce_sum[axes=(0,)] hnv
    hnx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hny:f32[] = div -2.0 hnx
    hnz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hny
    hoa:f32[200] = mul hnz hnq
    hob:f32[] = reduce_sum[axes=(0,)] hoa
    hoc:f32[] = mul 0.0010000000474974513 hnw
    hod:f32[] = sub hnl hoc
    hoe:f32[] = mul 0.0010000000474974513 hob
    hof:f32[] = sub hnn hoe
    hog:f32[200] = mul hod a
    hoh:f32[200] = add hog hof
    hoi:f32[200] = sub b hoh
    hoj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hok:f32[] = div -2.0 hoj
    hol:f32[200] = mul a hoi
    hom:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hok
    hon:f32[200] = mul hom hol
    hoo:f32[] = reduce_sum[axes=(0,)] hon
    hop:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hoq:f32[] = div -2.0 hop
    hor:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hoq
    hos:f32[200] = mul hor hoi
    hot:f32[] = reduce_sum[axes=(0,)] hos
    hou:f32[] = mul 0.0010000000474974513 hoo
    hov:f32[] = sub hod hou
    how:f32[] = mul 0.0010000000474974513 hot
    hox:f32[] = sub hof how
    hoy:f32[200] = mul hov a
    hoz:f32[200] = add hoy hox
    hpa:f32[200] = sub b hoz
    hpb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hpc:f32[] = div -2.0 hpb
    hpd:f32[200] = mul a hpa
    hpe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hpc
    hpf:f32[200] = mul hpe hpd
    hpg:f32[] = reduce_sum[axes=(0,)] hpf
    hph:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hpi:f32[] = div -2.0 hph
    hpj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hpi
    hpk:f32[200] = mul hpj hpa
    hpl:f32[] = reduce_sum[axes=(0,)] hpk
    hpm:f32[] = mul 0.0010000000474974513 hpg
    hpn:f32[] = sub hov hpm
    hpo:f32[] = mul 0.0010000000474974513 hpl
    hpp:f32[] = sub hox hpo
    hpq:f32[200] = mul hpn a
    hpr:f32[200] = add hpq hpp
    hps:f32[200] = sub b hpr
    hpt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hpu:f32[] = div -2.0 hpt
    hpv:f32[200] = mul a hps
    hpw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hpu
    hpx:f32[200] = mul hpw hpv
    hpy:f32[] = reduce_sum[axes=(0,)] hpx
    hpz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hqa:f32[] = div -2.0 hpz
    hqb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hqa
    hqc:f32[200] = mul hqb hps
    hqd:f32[] = reduce_sum[axes=(0,)] hqc
    hqe:f32[] = mul 0.0010000000474974513 hpy
    hqf:f32[] = sub hpn hqe
    hqg:f32[] = mul 0.0010000000474974513 hqd
    hqh:f32[] = sub hpp hqg
    hqi:f32[200] = mul hqf a
    hqj:f32[200] = add hqi hqh
    hqk:f32[200] = sub b hqj
    hql:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hqm:f32[] = div -2.0 hql
    hqn:f32[200] = mul a hqk
    hqo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hqm
    hqp:f32[200] = mul hqo hqn
    hqq:f32[] = reduce_sum[axes=(0,)] hqp
    hqr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hqs:f32[] = div -2.0 hqr
    hqt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hqs
    hqu:f32[200] = mul hqt hqk
    hqv:f32[] = reduce_sum[axes=(0,)] hqu
    hqw:f32[] = mul 0.0010000000474974513 hqq
    hqx:f32[] = sub hqf hqw
    hqy:f32[] = mul 0.0010000000474974513 hqv
    hqz:f32[] = sub hqh hqy
    hra:f32[200] = mul hqx a
    hrb:f32[200] = add hra hqz
    hrc:f32[200] = sub b hrb
    hrd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hre:f32[] = div -2.0 hrd
    hrf:f32[200] = mul a hrc
    hrg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hre
    hrh:f32[200] = mul hrg hrf
    hri:f32[] = reduce_sum[axes=(0,)] hrh
    hrj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hrk:f32[] = div -2.0 hrj
    hrl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hrk
    hrm:f32[200] = mul hrl hrc
    hrn:f32[] = reduce_sum[axes=(0,)] hrm
    hro:f32[] = mul 0.0010000000474974513 hri
    hrp:f32[] = sub hqx hro
    hrq:f32[] = mul 0.0010000000474974513 hrn
    hrr:f32[] = sub hqz hrq
    hrs:f32[200] = mul hrp a
    hrt:f32[200] = add hrs hrr
    hru:f32[200] = sub b hrt
    hrv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hrw:f32[] = div -2.0 hrv
    hrx:f32[200] = mul a hru
    hry:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hrw
    hrz:f32[200] = mul hry hrx
    hsa:f32[] = reduce_sum[axes=(0,)] hrz
    hsb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hsc:f32[] = div -2.0 hsb
    hsd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hsc
    hse:f32[200] = mul hsd hru
    hsf:f32[] = reduce_sum[axes=(0,)] hse
    hsg:f32[] = mul 0.0010000000474974513 hsa
    hsh:f32[] = sub hrp hsg
    hsi:f32[] = mul 0.0010000000474974513 hsf
    hsj:f32[] = sub hrr hsi
    hsk:f32[200] = mul hsh a
    hsl:f32[200] = add hsk hsj
    hsm:f32[200] = sub b hsl
    hsn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hso:f32[] = div -2.0 hsn
    hsp:f32[200] = mul a hsm
    hsq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hso
    hsr:f32[200] = mul hsq hsp
    hss:f32[] = reduce_sum[axes=(0,)] hsr
    hst:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hsu:f32[] = div -2.0 hst
    hsv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hsu
    hsw:f32[200] = mul hsv hsm
    hsx:f32[] = reduce_sum[axes=(0,)] hsw
    hsy:f32[] = mul 0.0010000000474974513 hss
    hsz:f32[] = sub hsh hsy
    hta:f32[] = mul 0.0010000000474974513 hsx
    htb:f32[] = sub hsj hta
    htc:f32[200] = mul hsz a
    htd:f32[200] = add htc htb
    hte:f32[200] = sub b htd
    htf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    htg:f32[] = div -2.0 htf
    hth:f32[200] = mul a hte
    hti:f32[] = convert_element_type[new_dtype=float32 weak_type=False] htg
    htj:f32[200] = mul hti hth
    htk:f32[] = reduce_sum[axes=(0,)] htj
    htl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    htm:f32[] = div -2.0 htl
    htn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] htm
    hto:f32[200] = mul htn hte
    htp:f32[] = reduce_sum[axes=(0,)] hto
    htq:f32[] = mul 0.0010000000474974513 htk
    htr:f32[] = sub hsz htq
    hts:f32[] = mul 0.0010000000474974513 htp
    htt:f32[] = sub htb hts
    htu:f32[200] = mul htr a
    htv:f32[200] = add htu htt
    htw:f32[200] = sub b htv
    htx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hty:f32[] = div -2.0 htx
    htz:f32[200] = mul a htw
    hua:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hty
    hub:f32[200] = mul hua htz
    huc:f32[] = reduce_sum[axes=(0,)] hub
    hud:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hue:f32[] = div -2.0 hud
    huf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hue
    hug:f32[200] = mul huf htw
    huh:f32[] = reduce_sum[axes=(0,)] hug
    hui:f32[] = mul 0.0010000000474974513 huc
    huj:f32[] = sub htr hui
    huk:f32[] = mul 0.0010000000474974513 huh
    hul:f32[] = sub htt huk
    hum:f32[200] = mul huj a
    hun:f32[200] = add hum hul
    huo:f32[200] = sub b hun
    hup:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    huq:f32[] = div -2.0 hup
    hur:f32[200] = mul a huo
    hus:f32[] = convert_element_type[new_dtype=float32 weak_type=False] huq
    hut:f32[200] = mul hus hur
    huu:f32[] = reduce_sum[axes=(0,)] hut
    huv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    huw:f32[] = div -2.0 huv
    hux:f32[] = convert_element_type[new_dtype=float32 weak_type=False] huw
    huy:f32[200] = mul hux huo
    huz:f32[] = reduce_sum[axes=(0,)] huy
    hva:f32[] = mul 0.0010000000474974513 huu
    hvb:f32[] = sub huj hva
    hvc:f32[] = mul 0.0010000000474974513 huz
    hvd:f32[] = sub hul hvc
    hve:f32[200] = mul hvb a
    hvf:f32[200] = add hve hvd
    hvg:f32[200] = sub b hvf
    hvh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hvi:f32[] = div -2.0 hvh
    hvj:f32[200] = mul a hvg
    hvk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hvi
    hvl:f32[200] = mul hvk hvj
    hvm:f32[] = reduce_sum[axes=(0,)] hvl
    hvn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hvo:f32[] = div -2.0 hvn
    hvp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hvo
    hvq:f32[200] = mul hvp hvg
    hvr:f32[] = reduce_sum[axes=(0,)] hvq
    hvs:f32[] = mul 0.0010000000474974513 hvm
    hvt:f32[] = sub hvb hvs
    hvu:f32[] = mul 0.0010000000474974513 hvr
    hvv:f32[] = sub hvd hvu
    hvw:f32[200] = mul hvt a
    hvx:f32[200] = add hvw hvv
    hvy:f32[200] = sub b hvx
    hvz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hwa:f32[] = div -2.0 hvz
    hwb:f32[200] = mul a hvy
    hwc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hwa
    hwd:f32[200] = mul hwc hwb
    hwe:f32[] = reduce_sum[axes=(0,)] hwd
    hwf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hwg:f32[] = div -2.0 hwf
    hwh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hwg
    hwi:f32[200] = mul hwh hvy
    hwj:f32[] = reduce_sum[axes=(0,)] hwi
    hwk:f32[] = mul 0.0010000000474974513 hwe
    hwl:f32[] = sub hvt hwk
    hwm:f32[] = mul 0.0010000000474974513 hwj
    hwn:f32[] = sub hvv hwm
    hwo:f32[200] = mul hwl a
    hwp:f32[200] = add hwo hwn
    hwq:f32[200] = sub b hwp
    hwr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hws:f32[] = div -2.0 hwr
    hwt:f32[200] = mul a hwq
    hwu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hws
    hwv:f32[200] = mul hwu hwt
    hww:f32[] = reduce_sum[axes=(0,)] hwv
    hwx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hwy:f32[] = div -2.0 hwx
    hwz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hwy
    hxa:f32[200] = mul hwz hwq
    hxb:f32[] = reduce_sum[axes=(0,)] hxa
    hxc:f32[] = mul 0.0010000000474974513 hww
    hxd:f32[] = sub hwl hxc
    hxe:f32[] = mul 0.0010000000474974513 hxb
    hxf:f32[] = sub hwn hxe
    hxg:f32[200] = mul hxd a
    hxh:f32[200] = add hxg hxf
    hxi:f32[200] = sub b hxh
    hxj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hxk:f32[] = div -2.0 hxj
    hxl:f32[200] = mul a hxi
    hxm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hxk
    hxn:f32[200] = mul hxm hxl
    hxo:f32[] = reduce_sum[axes=(0,)] hxn
    hxp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hxq:f32[] = div -2.0 hxp
    hxr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hxq
    hxs:f32[200] = mul hxr hxi
    hxt:f32[] = reduce_sum[axes=(0,)] hxs
    hxu:f32[] = mul 0.0010000000474974513 hxo
    hxv:f32[] = sub hxd hxu
    hxw:f32[] = mul 0.0010000000474974513 hxt
    hxx:f32[] = sub hxf hxw
    hxy:f32[200] = mul hxv a
    hxz:f32[200] = add hxy hxx
    hya:f32[200] = sub b hxz
    hyb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hyc:f32[] = div -2.0 hyb
    hyd:f32[200] = mul a hya
    hye:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hyc
    hyf:f32[200] = mul hye hyd
    hyg:f32[] = reduce_sum[axes=(0,)] hyf
    hyh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hyi:f32[] = div -2.0 hyh
    hyj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hyi
    hyk:f32[200] = mul hyj hya
    hyl:f32[] = reduce_sum[axes=(0,)] hyk
    hym:f32[] = mul 0.0010000000474974513 hyg
    hyn:f32[] = sub hxv hym
    hyo:f32[] = mul 0.0010000000474974513 hyl
    hyp:f32[] = sub hxx hyo
    hyq:f32[200] = mul hyn a
    hyr:f32[200] = add hyq hyp
    hys:f32[200] = sub b hyr
    hyt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hyu:f32[] = div -2.0 hyt
    hyv:f32[200] = mul a hys
    hyw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hyu
    hyx:f32[200] = mul hyw hyv
    hyy:f32[] = reduce_sum[axes=(0,)] hyx
    hyz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hza:f32[] = div -2.0 hyz
    hzb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hza
    hzc:f32[200] = mul hzb hys
    hzd:f32[] = reduce_sum[axes=(0,)] hzc
    hze:f32[] = mul 0.0010000000474974513 hyy
    hzf:f32[] = sub hyn hze
    hzg:f32[] = mul 0.0010000000474974513 hzd
    hzh:f32[] = sub hyp hzg
    hzi:f32[200] = mul hzf a
    hzj:f32[200] = add hzi hzh
    hzk:f32[200] = sub b hzj
    hzl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hzm:f32[] = div -2.0 hzl
    hzn:f32[200] = mul a hzk
    hzo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hzm
    hzp:f32[200] = mul hzo hzn
    hzq:f32[] = reduce_sum[axes=(0,)] hzp
    hzr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    hzs:f32[] = div -2.0 hzr
    hzt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] hzs
    hzu:f32[200] = mul hzt hzk
    hzv:f32[] = reduce_sum[axes=(0,)] hzu
    hzw:f32[] = mul 0.0010000000474974513 hzq
    hzx:f32[] = sub hzf hzw
    hzy:f32[] = mul 0.0010000000474974513 hzv
    hzz:f32[] = sub hzh hzy
    iaa:f32[200] = mul hzx a
    iab:f32[200] = add iaa hzz
    iac:f32[200] = sub b iab
    iad:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iae:f32[] = div -2.0 iad
    iaf:f32[200] = mul a iac
    iag:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iae
    iah:f32[200] = mul iag iaf
    iai:f32[] = reduce_sum[axes=(0,)] iah
    iaj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iak:f32[] = div -2.0 iaj
    ial:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iak
    iam:f32[200] = mul ial iac
    ian:f32[] = reduce_sum[axes=(0,)] iam
    iao:f32[] = mul 0.0010000000474974513 iai
    iap:f32[] = sub hzx iao
    iaq:f32[] = mul 0.0010000000474974513 ian
    iar:f32[] = sub hzz iaq
    ias:f32[200] = mul iap a
    iat:f32[200] = add ias iar
    iau:f32[200] = sub b iat
    iav:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iaw:f32[] = div -2.0 iav
    iax:f32[200] = mul a iau
    iay:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iaw
    iaz:f32[200] = mul iay iax
    iba:f32[] = reduce_sum[axes=(0,)] iaz
    ibb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ibc:f32[] = div -2.0 ibb
    ibd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ibc
    ibe:f32[200] = mul ibd iau
    ibf:f32[] = reduce_sum[axes=(0,)] ibe
    ibg:f32[] = mul 0.0010000000474974513 iba
    ibh:f32[] = sub iap ibg
    ibi:f32[] = mul 0.0010000000474974513 ibf
    ibj:f32[] = sub iar ibi
    ibk:f32[200] = mul ibh a
    ibl:f32[200] = add ibk ibj
    ibm:f32[200] = sub b ibl
    ibn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ibo:f32[] = div -2.0 ibn
    ibp:f32[200] = mul a ibm
    ibq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ibo
    ibr:f32[200] = mul ibq ibp
    ibs:f32[] = reduce_sum[axes=(0,)] ibr
    ibt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ibu:f32[] = div -2.0 ibt
    ibv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ibu
    ibw:f32[200] = mul ibv ibm
    ibx:f32[] = reduce_sum[axes=(0,)] ibw
    iby:f32[] = mul 0.0010000000474974513 ibs
    ibz:f32[] = sub ibh iby
    ica:f32[] = mul 0.0010000000474974513 ibx
    icb:f32[] = sub ibj ica
    icc:f32[200] = mul ibz a
    icd:f32[200] = add icc icb
    ice:f32[200] = sub b icd
    icf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    icg:f32[] = div -2.0 icf
    ich:f32[200] = mul a ice
    ici:f32[] = convert_element_type[new_dtype=float32 weak_type=False] icg
    icj:f32[200] = mul ici ich
    ick:f32[] = reduce_sum[axes=(0,)] icj
    icl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    icm:f32[] = div -2.0 icl
    icn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] icm
    ico:f32[200] = mul icn ice
    icp:f32[] = reduce_sum[axes=(0,)] ico
    icq:f32[] = mul 0.0010000000474974513 ick
    icr:f32[] = sub ibz icq
    ics:f32[] = mul 0.0010000000474974513 icp
    ict:f32[] = sub icb ics
    icu:f32[200] = mul icr a
    icv:f32[200] = add icu ict
    icw:f32[200] = sub b icv
    icx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    icy:f32[] = div -2.0 icx
    icz:f32[200] = mul a icw
    ida:f32[] = convert_element_type[new_dtype=float32 weak_type=False] icy
    idb:f32[200] = mul ida icz
    idc:f32[] = reduce_sum[axes=(0,)] idb
    idd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ide:f32[] = div -2.0 idd
    idf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ide
    idg:f32[200] = mul idf icw
    idh:f32[] = reduce_sum[axes=(0,)] idg
    idi:f32[] = mul 0.0010000000474974513 idc
    idj:f32[] = sub icr idi
    idk:f32[] = mul 0.0010000000474974513 idh
    idl:f32[] = sub ict idk
    idm:f32[200] = mul idj a
    idn:f32[200] = add idm idl
    ido:f32[200] = sub b idn
    idp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    idq:f32[] = div -2.0 idp
    idr:f32[200] = mul a ido
    ids:f32[] = convert_element_type[new_dtype=float32 weak_type=False] idq
    idt:f32[200] = mul ids idr
    idu:f32[] = reduce_sum[axes=(0,)] idt
    idv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    idw:f32[] = div -2.0 idv
    idx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] idw
    idy:f32[200] = mul idx ido
    idz:f32[] = reduce_sum[axes=(0,)] idy
    iea:f32[] = mul 0.0010000000474974513 idu
    ieb:f32[] = sub idj iea
    iec:f32[] = mul 0.0010000000474974513 idz
    ied:f32[] = sub idl iec
    iee:f32[200] = mul ieb a
    ief:f32[200] = add iee ied
    ieg:f32[200] = sub b ief
    ieh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iei:f32[] = div -2.0 ieh
    iej:f32[200] = mul a ieg
    iek:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iei
    iel:f32[200] = mul iek iej
    iem:f32[] = reduce_sum[axes=(0,)] iel
    ien:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ieo:f32[] = div -2.0 ien
    iep:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ieo
    ieq:f32[200] = mul iep ieg
    ier:f32[] = reduce_sum[axes=(0,)] ieq
    ies:f32[] = mul 0.0010000000474974513 iem
    iet:f32[] = sub ieb ies
    ieu:f32[] = mul 0.0010000000474974513 ier
    iev:f32[] = sub ied ieu
    iew:f32[200] = mul iet a
    iex:f32[200] = add iew iev
    iey:f32[200] = sub b iex
    iez:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ifa:f32[] = div -2.0 iez
    ifb:f32[200] = mul a iey
    ifc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ifa
    ifd:f32[200] = mul ifc ifb
    ife:f32[] = reduce_sum[axes=(0,)] ifd
    iff:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ifg:f32[] = div -2.0 iff
    ifh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ifg
    ifi:f32[200] = mul ifh iey
    ifj:f32[] = reduce_sum[axes=(0,)] ifi
    ifk:f32[] = mul 0.0010000000474974513 ife
    ifl:f32[] = sub iet ifk
    ifm:f32[] = mul 0.0010000000474974513 ifj
    ifn:f32[] = sub iev ifm
    ifo:f32[200] = mul ifl a
    ifp:f32[200] = add ifo ifn
    ifq:f32[200] = sub b ifp
    ifr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ifs:f32[] = div -2.0 ifr
    ift:f32[200] = mul a ifq
    ifu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ifs
    ifv:f32[200] = mul ifu ift
    ifw:f32[] = reduce_sum[axes=(0,)] ifv
    ifx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ify:f32[] = div -2.0 ifx
    ifz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ify
    iga:f32[200] = mul ifz ifq
    igb:f32[] = reduce_sum[axes=(0,)] iga
    igc:f32[] = mul 0.0010000000474974513 ifw
    igd:f32[] = sub ifl igc
    ige:f32[] = mul 0.0010000000474974513 igb
    igf:f32[] = sub ifn ige
    igg:f32[200] = mul igd a
    igh:f32[200] = add igg igf
    igi:f32[200] = sub b igh
    igj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    igk:f32[] = div -2.0 igj
    igl:f32[200] = mul a igi
    igm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] igk
    ign:f32[200] = mul igm igl
    igo:f32[] = reduce_sum[axes=(0,)] ign
    igp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    igq:f32[] = div -2.0 igp
    igr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] igq
    igs:f32[200] = mul igr igi
    igt:f32[] = reduce_sum[axes=(0,)] igs
    igu:f32[] = mul 0.0010000000474974513 igo
    igv:f32[] = sub igd igu
    igw:f32[] = mul 0.0010000000474974513 igt
    igx:f32[] = sub igf igw
    igy:f32[200] = mul igv a
    igz:f32[200] = add igy igx
    iha:f32[200] = sub b igz
    ihb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ihc:f32[] = div -2.0 ihb
    ihd:f32[200] = mul a iha
    ihe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ihc
    ihf:f32[200] = mul ihe ihd
    ihg:f32[] = reduce_sum[axes=(0,)] ihf
    ihh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ihi:f32[] = div -2.0 ihh
    ihj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ihi
    ihk:f32[200] = mul ihj iha
    ihl:f32[] = reduce_sum[axes=(0,)] ihk
    ihm:f32[] = mul 0.0010000000474974513 ihg
    ihn:f32[] = sub igv ihm
    iho:f32[] = mul 0.0010000000474974513 ihl
    ihp:f32[] = sub igx iho
    ihq:f32[200] = mul ihn a
    ihr:f32[200] = add ihq ihp
    ihs:f32[200] = sub b ihr
    iht:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ihu:f32[] = div -2.0 iht
    ihv:f32[200] = mul a ihs
    ihw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ihu
    ihx:f32[200] = mul ihw ihv
    ihy:f32[] = reduce_sum[axes=(0,)] ihx
    ihz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iia:f32[] = div -2.0 ihz
    iib:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iia
    iic:f32[200] = mul iib ihs
    iid:f32[] = reduce_sum[axes=(0,)] iic
    iie:f32[] = mul 0.0010000000474974513 ihy
    iif:f32[] = sub ihn iie
    iig:f32[] = mul 0.0010000000474974513 iid
    iih:f32[] = sub ihp iig
    iii:f32[200] = mul iif a
    iij:f32[200] = add iii iih
    iik:f32[200] = sub b iij
    iil:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iim:f32[] = div -2.0 iil
    iin:f32[200] = mul a iik
    iio:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iim
    iip:f32[200] = mul iio iin
    iiq:f32[] = reduce_sum[axes=(0,)] iip
    iir:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iis:f32[] = div -2.0 iir
    iit:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iis
    iiu:f32[200] = mul iit iik
    iiv:f32[] = reduce_sum[axes=(0,)] iiu
    iiw:f32[] = mul 0.0010000000474974513 iiq
    iix:f32[] = sub iif iiw
    iiy:f32[] = mul 0.0010000000474974513 iiv
    iiz:f32[] = sub iih iiy
    ija:f32[200] = mul iix a
    ijb:f32[200] = add ija iiz
    ijc:f32[200] = sub b ijb
    ijd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ije:f32[] = div -2.0 ijd
    ijf:f32[200] = mul a ijc
    ijg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ije
    ijh:f32[200] = mul ijg ijf
    iji:f32[] = reduce_sum[axes=(0,)] ijh
    ijj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ijk:f32[] = div -2.0 ijj
    ijl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ijk
    ijm:f32[200] = mul ijl ijc
    ijn:f32[] = reduce_sum[axes=(0,)] ijm
    ijo:f32[] = mul 0.0010000000474974513 iji
    ijp:f32[] = sub iix ijo
    ijq:f32[] = mul 0.0010000000474974513 ijn
    ijr:f32[] = sub iiz ijq
    ijs:f32[200] = mul ijp a
    ijt:f32[200] = add ijs ijr
    iju:f32[200] = sub b ijt
    ijv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ijw:f32[] = div -2.0 ijv
    ijx:f32[200] = mul a iju
    ijy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ijw
    ijz:f32[200] = mul ijy ijx
    ika:f32[] = reduce_sum[axes=(0,)] ijz
    ikb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ikc:f32[] = div -2.0 ikb
    ikd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ikc
    ike:f32[200] = mul ikd iju
    ikf:f32[] = reduce_sum[axes=(0,)] ike
    ikg:f32[] = mul 0.0010000000474974513 ika
    ikh:f32[] = sub ijp ikg
    iki:f32[] = mul 0.0010000000474974513 ikf
    ikj:f32[] = sub ijr iki
    ikk:f32[200] = mul ikh a
    ikl:f32[200] = add ikk ikj
    ikm:f32[200] = sub b ikl
    ikn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iko:f32[] = div -2.0 ikn
    ikp:f32[200] = mul a ikm
    ikq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iko
    ikr:f32[200] = mul ikq ikp
    iks:f32[] = reduce_sum[axes=(0,)] ikr
    ikt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iku:f32[] = div -2.0 ikt
    ikv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iku
    ikw:f32[200] = mul ikv ikm
    ikx:f32[] = reduce_sum[axes=(0,)] ikw
    iky:f32[] = mul 0.0010000000474974513 iks
    ikz:f32[] = sub ikh iky
    ila:f32[] = mul 0.0010000000474974513 ikx
    ilb:f32[] = sub ikj ila
    ilc:f32[200] = mul ikz a
    ild:f32[200] = add ilc ilb
    ile:f32[200] = sub b ild
    ilf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ilg:f32[] = div -2.0 ilf
    ilh:f32[200] = mul a ile
    ili:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ilg
    ilj:f32[200] = mul ili ilh
    ilk:f32[] = reduce_sum[axes=(0,)] ilj
    ill:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ilm:f32[] = div -2.0 ill
    iln:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ilm
    ilo:f32[200] = mul iln ile
    ilp:f32[] = reduce_sum[axes=(0,)] ilo
    ilq:f32[] = mul 0.0010000000474974513 ilk
    ilr:f32[] = sub ikz ilq
    ils:f32[] = mul 0.0010000000474974513 ilp
    ilt:f32[] = sub ilb ils
    ilu:f32[200] = mul ilr a
    ilv:f32[200] = add ilu ilt
    ilw:f32[200] = sub b ilv
    ilx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ily:f32[] = div -2.0 ilx
    ilz:f32[200] = mul a ilw
    ima:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ily
    imb:f32[200] = mul ima ilz
    imc:f32[] = reduce_sum[axes=(0,)] imb
    imd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ime:f32[] = div -2.0 imd
    imf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ime
    img:f32[200] = mul imf ilw
    imh:f32[] = reduce_sum[axes=(0,)] img
    imi:f32[] = mul 0.0010000000474974513 imc
    imj:f32[] = sub ilr imi
    imk:f32[] = mul 0.0010000000474974513 imh
    iml:f32[] = sub ilt imk
    imm:f32[200] = mul imj a
    imn:f32[200] = add imm iml
    imo:f32[200] = sub b imn
    imp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    imq:f32[] = div -2.0 imp
    imr:f32[200] = mul a imo
    ims:f32[] = convert_element_type[new_dtype=float32 weak_type=False] imq
    imt:f32[200] = mul ims imr
    imu:f32[] = reduce_sum[axes=(0,)] imt
    imv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    imw:f32[] = div -2.0 imv
    imx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] imw
    imy:f32[200] = mul imx imo
    imz:f32[] = reduce_sum[axes=(0,)] imy
    ina:f32[] = mul 0.0010000000474974513 imu
    inb:f32[] = sub imj ina
    inc:f32[] = mul 0.0010000000474974513 imz
    ind:f32[] = sub iml inc
    ine:f32[200] = mul inb a
    inf:f32[200] = add ine ind
    ing:f32[200] = sub b inf
    inh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ini:f32[] = div -2.0 inh
    inj:f32[200] = mul a ing
    ink:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ini
    inl:f32[200] = mul ink inj
    inm:f32[] = reduce_sum[axes=(0,)] inl
    inn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ino:f32[] = div -2.0 inn
    inp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ino
    inq:f32[200] = mul inp ing
    inr:f32[] = reduce_sum[axes=(0,)] inq
    ins:f32[] = mul 0.0010000000474974513 inm
    int:f32[] = sub inb ins
    inu:f32[] = mul 0.0010000000474974513 inr
    inv:f32[] = sub ind inu
    inw:f32[200] = mul int a
    inx:f32[200] = add inw inv
    iny:f32[200] = sub b inx
    inz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ioa:f32[] = div -2.0 inz
    iob:f32[200] = mul a iny
    ioc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ioa
    iod:f32[200] = mul ioc iob
    ioe:f32[] = reduce_sum[axes=(0,)] iod
    iof:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iog:f32[] = div -2.0 iof
    ioh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iog
    ioi:f32[200] = mul ioh iny
    ioj:f32[] = reduce_sum[axes=(0,)] ioi
    iok:f32[] = mul 0.0010000000474974513 ioe
    iol:f32[] = sub int iok
    iom:f32[] = mul 0.0010000000474974513 ioj
    ion:f32[] = sub inv iom
    ioo:f32[200] = mul iol a
    iop:f32[200] = add ioo ion
    ioq:f32[200] = sub b iop
    ior:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ios:f32[] = div -2.0 ior
    iot:f32[200] = mul a ioq
    iou:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ios
    iov:f32[200] = mul iou iot
    iow:f32[] = reduce_sum[axes=(0,)] iov
    iox:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ioy:f32[] = div -2.0 iox
    ioz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ioy
    ipa:f32[200] = mul ioz ioq
    ipb:f32[] = reduce_sum[axes=(0,)] ipa
    ipc:f32[] = mul 0.0010000000474974513 iow
    ipd:f32[] = sub iol ipc
    ipe:f32[] = mul 0.0010000000474974513 ipb
    ipf:f32[] = sub ion ipe
    ipg:f32[200] = mul ipd a
    iph:f32[200] = add ipg ipf
    ipi:f32[200] = sub b iph
    ipj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ipk:f32[] = div -2.0 ipj
    ipl:f32[200] = mul a ipi
    ipm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ipk
    ipn:f32[200] = mul ipm ipl
    ipo:f32[] = reduce_sum[axes=(0,)] ipn
    ipp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ipq:f32[] = div -2.0 ipp
    ipr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ipq
    ips:f32[200] = mul ipr ipi
    ipt:f32[] = reduce_sum[axes=(0,)] ips
    ipu:f32[] = mul 0.0010000000474974513 ipo
    ipv:f32[] = sub ipd ipu
    ipw:f32[] = mul 0.0010000000474974513 ipt
    ipx:f32[] = sub ipf ipw
    ipy:f32[200] = mul ipv a
    ipz:f32[200] = add ipy ipx
    iqa:f32[200] = sub b ipz
    iqb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iqc:f32[] = div -2.0 iqb
    iqd:f32[200] = mul a iqa
    iqe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iqc
    iqf:f32[200] = mul iqe iqd
    iqg:f32[] = reduce_sum[axes=(0,)] iqf
    iqh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iqi:f32[] = div -2.0 iqh
    iqj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iqi
    iqk:f32[200] = mul iqj iqa
    iql:f32[] = reduce_sum[axes=(0,)] iqk
    iqm:f32[] = mul 0.0010000000474974513 iqg
    iqn:f32[] = sub ipv iqm
    iqo:f32[] = mul 0.0010000000474974513 iql
    iqp:f32[] = sub ipx iqo
    iqq:f32[200] = mul iqn a
    iqr:f32[200] = add iqq iqp
    iqs:f32[200] = sub b iqr
    iqt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iqu:f32[] = div -2.0 iqt
    iqv:f32[200] = mul a iqs
    iqw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iqu
    iqx:f32[200] = mul iqw iqv
    iqy:f32[] = reduce_sum[axes=(0,)] iqx
    iqz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ira:f32[] = div -2.0 iqz
    irb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ira
    irc:f32[200] = mul irb iqs
    ird:f32[] = reduce_sum[axes=(0,)] irc
    ire:f32[] = mul 0.0010000000474974513 iqy
    irf:f32[] = sub iqn ire
    irg:f32[] = mul 0.0010000000474974513 ird
    irh:f32[] = sub iqp irg
    iri:f32[200] = mul irf a
    irj:f32[200] = add iri irh
    irk:f32[200] = sub b irj
    irl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    irm:f32[] = div -2.0 irl
    irn:f32[200] = mul a irk
    iro:f32[] = convert_element_type[new_dtype=float32 weak_type=False] irm
    irp:f32[200] = mul iro irn
    irq:f32[] = reduce_sum[axes=(0,)] irp
    irr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    irs:f32[] = div -2.0 irr
    irt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] irs
    iru:f32[200] = mul irt irk
    irv:f32[] = reduce_sum[axes=(0,)] iru
    irw:f32[] = mul 0.0010000000474974513 irq
    irx:f32[] = sub irf irw
    iry:f32[] = mul 0.0010000000474974513 irv
    irz:f32[] = sub irh iry
    isa:f32[200] = mul irx a
    isb:f32[200] = add isa irz
    isc:f32[200] = sub b isb
    isd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ise:f32[] = div -2.0 isd
    isf:f32[200] = mul a isc
    isg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ise
    ish:f32[200] = mul isg isf
    isi:f32[] = reduce_sum[axes=(0,)] ish
    isj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    isk:f32[] = div -2.0 isj
    isl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] isk
    ism:f32[200] = mul isl isc
    isn:f32[] = reduce_sum[axes=(0,)] ism
    iso:f32[] = mul 0.0010000000474974513 isi
    isp:f32[] = sub irx iso
    isq:f32[] = mul 0.0010000000474974513 isn
    isr:f32[] = sub irz isq
    iss:f32[200] = mul isp a
    ist:f32[200] = add iss isr
    isu:f32[200] = sub b ist
    isv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    isw:f32[] = div -2.0 isv
    isx:f32[200] = mul a isu
    isy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] isw
    isz:f32[200] = mul isy isx
    ita:f32[] = reduce_sum[axes=(0,)] isz
    itb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    itc:f32[] = div -2.0 itb
    itd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] itc
    ite:f32[200] = mul itd isu
    itf:f32[] = reduce_sum[axes=(0,)] ite
    itg:f32[] = mul 0.0010000000474974513 ita
    ith:f32[] = sub isp itg
    iti:f32[] = mul 0.0010000000474974513 itf
    itj:f32[] = sub isr iti
    itk:f32[200] = mul ith a
    itl:f32[200] = add itk itj
    itm:f32[200] = sub b itl
    itn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ito:f32[] = div -2.0 itn
    itp:f32[200] = mul a itm
    itq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ito
    itr:f32[200] = mul itq itp
    its:f32[] = reduce_sum[axes=(0,)] itr
    itt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    itu:f32[] = div -2.0 itt
    itv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] itu
    itw:f32[200] = mul itv itm
    itx:f32[] = reduce_sum[axes=(0,)] itw
    ity:f32[] = mul 0.0010000000474974513 its
    itz:f32[] = sub ith ity
    iua:f32[] = mul 0.0010000000474974513 itx
    iub:f32[] = sub itj iua
    iuc:f32[200] = mul itz a
    iud:f32[200] = add iuc iub
    iue:f32[200] = sub b iud
    iuf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iug:f32[] = div -2.0 iuf
    iuh:f32[200] = mul a iue
    iui:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iug
    iuj:f32[200] = mul iui iuh
    iuk:f32[] = reduce_sum[axes=(0,)] iuj
    iul:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ium:f32[] = div -2.0 iul
    iun:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ium
    iuo:f32[200] = mul iun iue
    iup:f32[] = reduce_sum[axes=(0,)] iuo
    iuq:f32[] = mul 0.0010000000474974513 iuk
    iur:f32[] = sub itz iuq
    ius:f32[] = mul 0.0010000000474974513 iup
    iut:f32[] = sub iub ius
    iuu:f32[200] = mul iur a
    iuv:f32[200] = add iuu iut
    iuw:f32[200] = sub b iuv
    iux:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iuy:f32[] = div -2.0 iux
    iuz:f32[200] = mul a iuw
    iva:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iuy
    ivb:f32[200] = mul iva iuz
    ivc:f32[] = reduce_sum[axes=(0,)] ivb
    ivd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ive:f32[] = div -2.0 ivd
    ivf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ive
    ivg:f32[200] = mul ivf iuw
    ivh:f32[] = reduce_sum[axes=(0,)] ivg
    ivi:f32[] = mul 0.0010000000474974513 ivc
    ivj:f32[] = sub iur ivi
    ivk:f32[] = mul 0.0010000000474974513 ivh
    ivl:f32[] = sub iut ivk
    ivm:f32[200] = mul ivj a
    ivn:f32[200] = add ivm ivl
    ivo:f32[200] = sub b ivn
    ivp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ivq:f32[] = div -2.0 ivp
    ivr:f32[200] = mul a ivo
    ivs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ivq
    ivt:f32[200] = mul ivs ivr
    ivu:f32[] = reduce_sum[axes=(0,)] ivt
    ivv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ivw:f32[] = div -2.0 ivv
    ivx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ivw
    ivy:f32[200] = mul ivx ivo
    ivz:f32[] = reduce_sum[axes=(0,)] ivy
    iwa:f32[] = mul 0.0010000000474974513 ivu
    iwb:f32[] = sub ivj iwa
    iwc:f32[] = mul 0.0010000000474974513 ivz
    iwd:f32[] = sub ivl iwc
    iwe:f32[200] = mul iwb a
    iwf:f32[200] = add iwe iwd
    iwg:f32[200] = sub b iwf
    iwh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iwi:f32[] = div -2.0 iwh
    iwj:f32[200] = mul a iwg
    iwk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iwi
    iwl:f32[200] = mul iwk iwj
    iwm:f32[] = reduce_sum[axes=(0,)] iwl
    iwn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iwo:f32[] = div -2.0 iwn
    iwp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iwo
    iwq:f32[200] = mul iwp iwg
    iwr:f32[] = reduce_sum[axes=(0,)] iwq
    iws:f32[] = mul 0.0010000000474974513 iwm
    iwt:f32[] = sub iwb iws
    iwu:f32[] = mul 0.0010000000474974513 iwr
    iwv:f32[] = sub iwd iwu
    iww:f32[200] = mul iwt a
    iwx:f32[200] = add iww iwv
    iwy:f32[200] = sub b iwx
    iwz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ixa:f32[] = div -2.0 iwz
    ixb:f32[200] = mul a iwy
    ixc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ixa
    ixd:f32[200] = mul ixc ixb
    ixe:f32[] = reduce_sum[axes=(0,)] ixd
    ixf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ixg:f32[] = div -2.0 ixf
    ixh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ixg
    ixi:f32[200] = mul ixh iwy
    ixj:f32[] = reduce_sum[axes=(0,)] ixi
    ixk:f32[] = mul 0.0010000000474974513 ixe
    ixl:f32[] = sub iwt ixk
    ixm:f32[] = mul 0.0010000000474974513 ixj
    ixn:f32[] = sub iwv ixm
    ixo:f32[200] = mul ixl a
    ixp:f32[200] = add ixo ixn
    ixq:f32[200] = sub b ixp
    ixr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ixs:f32[] = div -2.0 ixr
    ixt:f32[200] = mul a ixq
    ixu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ixs
    ixv:f32[200] = mul ixu ixt
    ixw:f32[] = reduce_sum[axes=(0,)] ixv
    ixx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ixy:f32[] = div -2.0 ixx
    ixz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ixy
    iya:f32[200] = mul ixz ixq
    iyb:f32[] = reduce_sum[axes=(0,)] iya
    iyc:f32[] = mul 0.0010000000474974513 ixw
    iyd:f32[] = sub ixl iyc
    iye:f32[] = mul 0.0010000000474974513 iyb
    iyf:f32[] = sub ixn iye
    iyg:f32[200] = mul iyd a
    iyh:f32[200] = add iyg iyf
    iyi:f32[200] = sub b iyh
    iyj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iyk:f32[] = div -2.0 iyj
    iyl:f32[200] = mul a iyi
    iym:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iyk
    iyn:f32[200] = mul iym iyl
    iyo:f32[] = reduce_sum[axes=(0,)] iyn
    iyp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    iyq:f32[] = div -2.0 iyp
    iyr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] iyq
    iys:f32[200] = mul iyr iyi
    iyt:f32[] = reduce_sum[axes=(0,)] iys
    iyu:f32[] = mul 0.0010000000474974513 iyo
    iyv:f32[] = sub iyd iyu
    iyw:f32[] = mul 0.0010000000474974513 iyt
    iyx:f32[] = sub iyf iyw
    iyy:f32[200] = mul iyv a
    iyz:f32[200] = add iyy iyx
    iza:f32[200] = sub b iyz
    izb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    izc:f32[] = div -2.0 izb
    izd:f32[200] = mul a iza
    ize:f32[] = convert_element_type[new_dtype=float32 weak_type=False] izc
    izf:f32[200] = mul ize izd
    izg:f32[] = reduce_sum[axes=(0,)] izf
    izh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    izi:f32[] = div -2.0 izh
    izj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] izi
    izk:f32[200] = mul izj iza
    izl:f32[] = reduce_sum[axes=(0,)] izk
    izm:f32[] = mul 0.0010000000474974513 izg
    izn:f32[] = sub iyv izm
    izo:f32[] = mul 0.0010000000474974513 izl
    izp:f32[] = sub iyx izo
    izq:f32[200] = mul izn a
    izr:f32[200] = add izq izp
    izs:f32[200] = sub b izr
    izt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    izu:f32[] = div -2.0 izt
    izv:f32[200] = mul a izs
    izw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] izu
    izx:f32[200] = mul izw izv
    izy:f32[] = reduce_sum[axes=(0,)] izx
    izz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jaa:f32[] = div -2.0 izz
    jab:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jaa
    jac:f32[200] = mul jab izs
    jad:f32[] = reduce_sum[axes=(0,)] jac
    jae:f32[] = mul 0.0010000000474974513 izy
    jaf:f32[] = sub izn jae
    jag:f32[] = mul 0.0010000000474974513 jad
    jah:f32[] = sub izp jag
    jai:f32[200] = mul jaf a
    jaj:f32[200] = add jai jah
    jak:f32[200] = sub b jaj
    jal:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jam:f32[] = div -2.0 jal
    jan:f32[200] = mul a jak
    jao:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jam
    jap:f32[200] = mul jao jan
    jaq:f32[] = reduce_sum[axes=(0,)] jap
    jar:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jas:f32[] = div -2.0 jar
    jat:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jas
    jau:f32[200] = mul jat jak
    jav:f32[] = reduce_sum[axes=(0,)] jau
    jaw:f32[] = mul 0.0010000000474974513 jaq
    jax:f32[] = sub jaf jaw
    jay:f32[] = mul 0.0010000000474974513 jav
    jaz:f32[] = sub jah jay
    jba:f32[200] = mul jax a
    jbb:f32[200] = add jba jaz
    jbc:f32[200] = sub b jbb
    jbd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jbe:f32[] = div -2.0 jbd
    jbf:f32[200] = mul a jbc
    jbg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jbe
    jbh:f32[200] = mul jbg jbf
    jbi:f32[] = reduce_sum[axes=(0,)] jbh
    jbj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jbk:f32[] = div -2.0 jbj
    jbl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jbk
    jbm:f32[200] = mul jbl jbc
    jbn:f32[] = reduce_sum[axes=(0,)] jbm
    jbo:f32[] = mul 0.0010000000474974513 jbi
    jbp:f32[] = sub jax jbo
    jbq:f32[] = mul 0.0010000000474974513 jbn
    jbr:f32[] = sub jaz jbq
    jbs:f32[200] = mul jbp a
    jbt:f32[200] = add jbs jbr
    jbu:f32[200] = sub b jbt
    jbv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jbw:f32[] = div -2.0 jbv
    jbx:f32[200] = mul a jbu
    jby:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jbw
    jbz:f32[200] = mul jby jbx
    jca:f32[] = reduce_sum[axes=(0,)] jbz
    jcb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jcc:f32[] = div -2.0 jcb
    jcd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jcc
    jce:f32[200] = mul jcd jbu
    jcf:f32[] = reduce_sum[axes=(0,)] jce
    jcg:f32[] = mul 0.0010000000474974513 jca
    jch:f32[] = sub jbp jcg
    jci:f32[] = mul 0.0010000000474974513 jcf
    jcj:f32[] = sub jbr jci
    jck:f32[200] = mul jch a
    jcl:f32[200] = add jck jcj
    jcm:f32[200] = sub b jcl
    jcn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jco:f32[] = div -2.0 jcn
    jcp:f32[200] = mul a jcm
    jcq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jco
    jcr:f32[200] = mul jcq jcp
    jcs:f32[] = reduce_sum[axes=(0,)] jcr
    jct:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jcu:f32[] = div -2.0 jct
    jcv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jcu
    jcw:f32[200] = mul jcv jcm
    jcx:f32[] = reduce_sum[axes=(0,)] jcw
    jcy:f32[] = mul 0.0010000000474974513 jcs
    jcz:f32[] = sub jch jcy
    jda:f32[] = mul 0.0010000000474974513 jcx
    jdb:f32[] = sub jcj jda
    jdc:f32[200] = mul jcz a
    jdd:f32[200] = add jdc jdb
    jde:f32[200] = sub b jdd
    jdf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jdg:f32[] = div -2.0 jdf
    jdh:f32[200] = mul a jde
    jdi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jdg
    jdj:f32[200] = mul jdi jdh
    jdk:f32[] = reduce_sum[axes=(0,)] jdj
    jdl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jdm:f32[] = div -2.0 jdl
    jdn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jdm
    jdo:f32[200] = mul jdn jde
    jdp:f32[] = reduce_sum[axes=(0,)] jdo
    jdq:f32[] = mul 0.0010000000474974513 jdk
    jdr:f32[] = sub jcz jdq
    jds:f32[] = mul 0.0010000000474974513 jdp
    jdt:f32[] = sub jdb jds
    jdu:f32[200] = mul jdr a
    jdv:f32[200] = add jdu jdt
    jdw:f32[200] = sub b jdv
    jdx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jdy:f32[] = div -2.0 jdx
    jdz:f32[200] = mul a jdw
    jea:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jdy
    jeb:f32[200] = mul jea jdz
    jec:f32[] = reduce_sum[axes=(0,)] jeb
    jed:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jee:f32[] = div -2.0 jed
    jef:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jee
    jeg:f32[200] = mul jef jdw
    jeh:f32[] = reduce_sum[axes=(0,)] jeg
    jei:f32[] = mul 0.0010000000474974513 jec
    jej:f32[] = sub jdr jei
    jek:f32[] = mul 0.0010000000474974513 jeh
    jel:f32[] = sub jdt jek
    jem:f32[200] = mul jej a
    jen:f32[200] = add jem jel
    jeo:f32[200] = sub b jen
    jep:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jeq:f32[] = div -2.0 jep
    jer:f32[200] = mul a jeo
    jes:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jeq
    jet:f32[200] = mul jes jer
    jeu:f32[] = reduce_sum[axes=(0,)] jet
    jev:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jew:f32[] = div -2.0 jev
    jex:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jew
    jey:f32[200] = mul jex jeo
    jez:f32[] = reduce_sum[axes=(0,)] jey
    jfa:f32[] = mul 0.0010000000474974513 jeu
    jfb:f32[] = sub jej jfa
    jfc:f32[] = mul 0.0010000000474974513 jez
    jfd:f32[] = sub jel jfc
    jfe:f32[200] = mul jfb a
    jff:f32[200] = add jfe jfd
    jfg:f32[200] = sub b jff
    jfh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jfi:f32[] = div -2.0 jfh
    jfj:f32[200] = mul a jfg
    jfk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jfi
    jfl:f32[200] = mul jfk jfj
    jfm:f32[] = reduce_sum[axes=(0,)] jfl
    jfn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jfo:f32[] = div -2.0 jfn
    jfp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jfo
    jfq:f32[200] = mul jfp jfg
    jfr:f32[] = reduce_sum[axes=(0,)] jfq
    jfs:f32[] = mul 0.0010000000474974513 jfm
    jft:f32[] = sub jfb jfs
    jfu:f32[] = mul 0.0010000000474974513 jfr
    jfv:f32[] = sub jfd jfu
    jfw:f32[200] = mul jft a
    jfx:f32[200] = add jfw jfv
    jfy:f32[200] = sub b jfx
    jfz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jga:f32[] = div -2.0 jfz
    jgb:f32[200] = mul a jfy
    jgc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jga
    jgd:f32[200] = mul jgc jgb
    jge:f32[] = reduce_sum[axes=(0,)] jgd
    jgf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jgg:f32[] = div -2.0 jgf
    jgh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jgg
    jgi:f32[200] = mul jgh jfy
    jgj:f32[] = reduce_sum[axes=(0,)] jgi
    jgk:f32[] = mul 0.0010000000474974513 jge
    jgl:f32[] = sub jft jgk
    jgm:f32[] = mul 0.0010000000474974513 jgj
    jgn:f32[] = sub jfv jgm
    jgo:f32[200] = mul jgl a
    jgp:f32[200] = add jgo jgn
    jgq:f32[200] = sub b jgp
    jgr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jgs:f32[] = div -2.0 jgr
    jgt:f32[200] = mul a jgq
    jgu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jgs
    jgv:f32[200] = mul jgu jgt
    jgw:f32[] = reduce_sum[axes=(0,)] jgv
    jgx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jgy:f32[] = div -2.0 jgx
    jgz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jgy
    jha:f32[200] = mul jgz jgq
    jhb:f32[] = reduce_sum[axes=(0,)] jha
    jhc:f32[] = mul 0.0010000000474974513 jgw
    jhd:f32[] = sub jgl jhc
    jhe:f32[] = mul 0.0010000000474974513 jhb
    jhf:f32[] = sub jgn jhe
    jhg:f32[200] = mul jhd a
    jhh:f32[200] = add jhg jhf
    jhi:f32[200] = sub b jhh
    jhj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jhk:f32[] = div -2.0 jhj
    jhl:f32[200] = mul a jhi
    jhm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jhk
    jhn:f32[200] = mul jhm jhl
    jho:f32[] = reduce_sum[axes=(0,)] jhn
    jhp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jhq:f32[] = div -2.0 jhp
    jhr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jhq
    jhs:f32[200] = mul jhr jhi
    jht:f32[] = reduce_sum[axes=(0,)] jhs
    jhu:f32[] = mul 0.0010000000474974513 jho
    jhv:f32[] = sub jhd jhu
    jhw:f32[] = mul 0.0010000000474974513 jht
    jhx:f32[] = sub jhf jhw
    jhy:f32[200] = mul jhv a
    jhz:f32[200] = add jhy jhx
    jia:f32[200] = sub b jhz
    jib:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jic:f32[] = div -2.0 jib
    jid:f32[200] = mul a jia
    jie:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jic
    jif:f32[200] = mul jie jid
    jig:f32[] = reduce_sum[axes=(0,)] jif
    jih:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jii:f32[] = div -2.0 jih
    jij:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jii
    jik:f32[200] = mul jij jia
    jil:f32[] = reduce_sum[axes=(0,)] jik
    jim:f32[] = mul 0.0010000000474974513 jig
    jin:f32[] = sub jhv jim
    jio:f32[] = mul 0.0010000000474974513 jil
    jip:f32[] = sub jhx jio
    jiq:f32[200] = mul jin a
    jir:f32[200] = add jiq jip
    jis:f32[200] = sub b jir
    jit:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jiu:f32[] = div -2.0 jit
    jiv:f32[200] = mul a jis
    jiw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jiu
    jix:f32[200] = mul jiw jiv
    jiy:f32[] = reduce_sum[axes=(0,)] jix
    jiz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jja:f32[] = div -2.0 jiz
    jjb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jja
    jjc:f32[200] = mul jjb jis
    jjd:f32[] = reduce_sum[axes=(0,)] jjc
    jje:f32[] = mul 0.0010000000474974513 jiy
    jjf:f32[] = sub jin jje
    jjg:f32[] = mul 0.0010000000474974513 jjd
    jjh:f32[] = sub jip jjg
    jji:f32[200] = mul jjf a
    jjj:f32[200] = add jji jjh
    jjk:f32[200] = sub b jjj
    jjl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jjm:f32[] = div -2.0 jjl
    jjn:f32[200] = mul a jjk
    jjo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jjm
    jjp:f32[200] = mul jjo jjn
    jjq:f32[] = reduce_sum[axes=(0,)] jjp
    jjr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jjs:f32[] = div -2.0 jjr
    jjt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jjs
    jju:f32[200] = mul jjt jjk
    jjv:f32[] = reduce_sum[axes=(0,)] jju
    jjw:f32[] = mul 0.0010000000474974513 jjq
    jjx:f32[] = sub jjf jjw
    jjy:f32[] = mul 0.0010000000474974513 jjv
    jjz:f32[] = sub jjh jjy
    jka:f32[200] = mul jjx a
    jkb:f32[200] = add jka jjz
    jkc:f32[200] = sub b jkb
    jkd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jke:f32[] = div -2.0 jkd
    jkf:f32[200] = mul a jkc
    jkg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jke
    jkh:f32[200] = mul jkg jkf
    jki:f32[] = reduce_sum[axes=(0,)] jkh
    jkj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jkk:f32[] = div -2.0 jkj
    jkl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jkk
    jkm:f32[200] = mul jkl jkc
    jkn:f32[] = reduce_sum[axes=(0,)] jkm
    jko:f32[] = mul 0.0010000000474974513 jki
    jkp:f32[] = sub jjx jko
    jkq:f32[] = mul 0.0010000000474974513 jkn
    jkr:f32[] = sub jjz jkq
    jks:f32[200] = mul jkp a
    jkt:f32[200] = add jks jkr
    jku:f32[200] = sub b jkt
    jkv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jkw:f32[] = div -2.0 jkv
    jkx:f32[200] = mul a jku
    jky:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jkw
    jkz:f32[200] = mul jky jkx
    jla:f32[] = reduce_sum[axes=(0,)] jkz
    jlb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jlc:f32[] = div -2.0 jlb
    jld:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jlc
    jle:f32[200] = mul jld jku
    jlf:f32[] = reduce_sum[axes=(0,)] jle
    jlg:f32[] = mul 0.0010000000474974513 jla
    jlh:f32[] = sub jkp jlg
    jli:f32[] = mul 0.0010000000474974513 jlf
    jlj:f32[] = sub jkr jli
    jlk:f32[200] = mul jlh a
    jll:f32[200] = add jlk jlj
    jlm:f32[200] = sub b jll
    jln:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jlo:f32[] = div -2.0 jln
    jlp:f32[200] = mul a jlm
    jlq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jlo
    jlr:f32[200] = mul jlq jlp
    jls:f32[] = reduce_sum[axes=(0,)] jlr
    jlt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jlu:f32[] = div -2.0 jlt
    jlv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jlu
    jlw:f32[200] = mul jlv jlm
    jlx:f32[] = reduce_sum[axes=(0,)] jlw
    jly:f32[] = mul 0.0010000000474974513 jls
    jlz:f32[] = sub jlh jly
    jma:f32[] = mul 0.0010000000474974513 jlx
    jmb:f32[] = sub jlj jma
    jmc:f32[200] = mul jlz a
    jmd:f32[200] = add jmc jmb
    jme:f32[200] = sub b jmd
    jmf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jmg:f32[] = div -2.0 jmf
    jmh:f32[200] = mul a jme
    jmi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jmg
    jmj:f32[200] = mul jmi jmh
    jmk:f32[] = reduce_sum[axes=(0,)] jmj
    jml:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jmm:f32[] = div -2.0 jml
    jmn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jmm
    jmo:f32[200] = mul jmn jme
    jmp:f32[] = reduce_sum[axes=(0,)] jmo
    jmq:f32[] = mul 0.0010000000474974513 jmk
    jmr:f32[] = sub jlz jmq
    jms:f32[] = mul 0.0010000000474974513 jmp
    jmt:f32[] = sub jmb jms
    jmu:f32[200] = mul jmr a
    jmv:f32[200] = add jmu jmt
    jmw:f32[200] = sub b jmv
    jmx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jmy:f32[] = div -2.0 jmx
    jmz:f32[200] = mul a jmw
    jna:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jmy
    jnb:f32[200] = mul jna jmz
    jnc:f32[] = reduce_sum[axes=(0,)] jnb
    jnd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jne:f32[] = div -2.0 jnd
    jnf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jne
    jng:f32[200] = mul jnf jmw
    jnh:f32[] = reduce_sum[axes=(0,)] jng
    jni:f32[] = mul 0.0010000000474974513 jnc
    jnj:f32[] = sub jmr jni
    jnk:f32[] = mul 0.0010000000474974513 jnh
    jnl:f32[] = sub jmt jnk
    jnm:f32[200] = mul jnj a
    jnn:f32[200] = add jnm jnl
    jno:f32[200] = sub b jnn
    jnp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jnq:f32[] = div -2.0 jnp
    jnr:f32[200] = mul a jno
    jns:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jnq
    jnt:f32[200] = mul jns jnr
    jnu:f32[] = reduce_sum[axes=(0,)] jnt
    jnv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jnw:f32[] = div -2.0 jnv
    jnx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jnw
    jny:f32[200] = mul jnx jno
    jnz:f32[] = reduce_sum[axes=(0,)] jny
    joa:f32[] = mul 0.0010000000474974513 jnu
    job:f32[] = sub jnj joa
    joc:f32[] = mul 0.0010000000474974513 jnz
    jod:f32[] = sub jnl joc
    joe:f32[200] = mul job a
    jof:f32[200] = add joe jod
    jog:f32[200] = sub b jof
    joh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    joi:f32[] = div -2.0 joh
    joj:f32[200] = mul a jog
    jok:f32[] = convert_element_type[new_dtype=float32 weak_type=False] joi
    jol:f32[200] = mul jok joj
    jom:f32[] = reduce_sum[axes=(0,)] jol
    jon:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    joo:f32[] = div -2.0 jon
    jop:f32[] = convert_element_type[new_dtype=float32 weak_type=False] joo
    joq:f32[200] = mul jop jog
    jor:f32[] = reduce_sum[axes=(0,)] joq
    jos:f32[] = mul 0.0010000000474974513 jom
    jot:f32[] = sub job jos
    jou:f32[] = mul 0.0010000000474974513 jor
    jov:f32[] = sub jod jou
    jow:f32[200] = mul jot a
    jox:f32[200] = add jow jov
    joy:f32[200] = sub b jox
    joz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jpa:f32[] = div -2.0 joz
    jpb:f32[200] = mul a joy
    jpc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jpa
    jpd:f32[200] = mul jpc jpb
    jpe:f32[] = reduce_sum[axes=(0,)] jpd
    jpf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jpg:f32[] = div -2.0 jpf
    jph:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jpg
    jpi:f32[200] = mul jph joy
    jpj:f32[] = reduce_sum[axes=(0,)] jpi
    jpk:f32[] = mul 0.0010000000474974513 jpe
    jpl:f32[] = sub jot jpk
    jpm:f32[] = mul 0.0010000000474974513 jpj
    jpn:f32[] = sub jov jpm
    jpo:f32[200] = mul jpl a
    jpp:f32[200] = add jpo jpn
    jpq:f32[200] = sub b jpp
    jpr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jps:f32[] = div -2.0 jpr
    jpt:f32[200] = mul a jpq
    jpu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jps
    jpv:f32[200] = mul jpu jpt
    jpw:f32[] = reduce_sum[axes=(0,)] jpv
    jpx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jpy:f32[] = div -2.0 jpx
    jpz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jpy
    jqa:f32[200] = mul jpz jpq
    jqb:f32[] = reduce_sum[axes=(0,)] jqa
    jqc:f32[] = mul 0.0010000000474974513 jpw
    jqd:f32[] = sub jpl jqc
    jqe:f32[] = mul 0.0010000000474974513 jqb
    jqf:f32[] = sub jpn jqe
    jqg:f32[200] = mul jqd a
    jqh:f32[200] = add jqg jqf
    jqi:f32[200] = sub b jqh
    jqj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jqk:f32[] = div -2.0 jqj
    jql:f32[200] = mul a jqi
    jqm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jqk
    jqn:f32[200] = mul jqm jql
    jqo:f32[] = reduce_sum[axes=(0,)] jqn
    jqp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jqq:f32[] = div -2.0 jqp
    jqr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jqq
    jqs:f32[200] = mul jqr jqi
    jqt:f32[] = reduce_sum[axes=(0,)] jqs
    jqu:f32[] = mul 0.0010000000474974513 jqo
    jqv:f32[] = sub jqd jqu
    jqw:f32[] = mul 0.0010000000474974513 jqt
    jqx:f32[] = sub jqf jqw
    jqy:f32[200] = mul jqv a
    jqz:f32[200] = add jqy jqx
    jra:f32[200] = sub b jqz
    jrb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jrc:f32[] = div -2.0 jrb
    jrd:f32[200] = mul a jra
    jre:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jrc
    jrf:f32[200] = mul jre jrd
    jrg:f32[] = reduce_sum[axes=(0,)] jrf
    jrh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jri:f32[] = div -2.0 jrh
    jrj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jri
    jrk:f32[200] = mul jrj jra
    jrl:f32[] = reduce_sum[axes=(0,)] jrk
    jrm:f32[] = mul 0.0010000000474974513 jrg
    jrn:f32[] = sub jqv jrm
    jro:f32[] = mul 0.0010000000474974513 jrl
    jrp:f32[] = sub jqx jro
    jrq:f32[200] = mul jrn a
    jrr:f32[200] = add jrq jrp
    jrs:f32[200] = sub b jrr
    jrt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jru:f32[] = div -2.0 jrt
    jrv:f32[200] = mul a jrs
    jrw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jru
    jrx:f32[200] = mul jrw jrv
    jry:f32[] = reduce_sum[axes=(0,)] jrx
    jrz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jsa:f32[] = div -2.0 jrz
    jsb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jsa
    jsc:f32[200] = mul jsb jrs
    jsd:f32[] = reduce_sum[axes=(0,)] jsc
    jse:f32[] = mul 0.0010000000474974513 jry
    jsf:f32[] = sub jrn jse
    jsg:f32[] = mul 0.0010000000474974513 jsd
    jsh:f32[] = sub jrp jsg
    jsi:f32[200] = mul jsf a
    jsj:f32[200] = add jsi jsh
    jsk:f32[200] = sub b jsj
    jsl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jsm:f32[] = div -2.0 jsl
    jsn:f32[200] = mul a jsk
    jso:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jsm
    jsp:f32[200] = mul jso jsn
    jsq:f32[] = reduce_sum[axes=(0,)] jsp
    jsr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jss:f32[] = div -2.0 jsr
    jst:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jss
    jsu:f32[200] = mul jst jsk
    jsv:f32[] = reduce_sum[axes=(0,)] jsu
    jsw:f32[] = mul 0.0010000000474974513 jsq
    jsx:f32[] = sub jsf jsw
    jsy:f32[] = mul 0.0010000000474974513 jsv
    jsz:f32[] = sub jsh jsy
    jta:f32[200] = mul jsx a
    jtb:f32[200] = add jta jsz
    jtc:f32[200] = sub b jtb
    jtd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jte:f32[] = div -2.0 jtd
    jtf:f32[200] = mul a jtc
    jtg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jte
    jth:f32[200] = mul jtg jtf
    jti:f32[] = reduce_sum[axes=(0,)] jth
    jtj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jtk:f32[] = div -2.0 jtj
    jtl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jtk
    jtm:f32[200] = mul jtl jtc
    jtn:f32[] = reduce_sum[axes=(0,)] jtm
    jto:f32[] = mul 0.0010000000474974513 jti
    jtp:f32[] = sub jsx jto
    jtq:f32[] = mul 0.0010000000474974513 jtn
    jtr:f32[] = sub jsz jtq
    jts:f32[200] = mul jtp a
    jtt:f32[200] = add jts jtr
    jtu:f32[200] = sub b jtt
    jtv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jtw:f32[] = div -2.0 jtv
    jtx:f32[200] = mul a jtu
    jty:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jtw
    jtz:f32[200] = mul jty jtx
    jua:f32[] = reduce_sum[axes=(0,)] jtz
    jub:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    juc:f32[] = div -2.0 jub
    jud:f32[] = convert_element_type[new_dtype=float32 weak_type=False] juc
    jue:f32[200] = mul jud jtu
    juf:f32[] = reduce_sum[axes=(0,)] jue
    jug:f32[] = mul 0.0010000000474974513 jua
    juh:f32[] = sub jtp jug
    jui:f32[] = mul 0.0010000000474974513 juf
    juj:f32[] = sub jtr jui
    juk:f32[200] = mul juh a
    jul:f32[200] = add juk juj
    jum:f32[200] = sub b jul
    jun:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    juo:f32[] = div -2.0 jun
    jup:f32[200] = mul a jum
    juq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] juo
    jur:f32[200] = mul juq jup
    jus:f32[] = reduce_sum[axes=(0,)] jur
    jut:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    juu:f32[] = div -2.0 jut
    juv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] juu
    juw:f32[200] = mul juv jum
    jux:f32[] = reduce_sum[axes=(0,)] juw
    juy:f32[] = mul 0.0010000000474974513 jus
    juz:f32[] = sub juh juy
    jva:f32[] = mul 0.0010000000474974513 jux
    jvb:f32[] = sub juj jva
    jvc:f32[200] = mul juz a
    jvd:f32[200] = add jvc jvb
    jve:f32[200] = sub b jvd
    jvf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jvg:f32[] = div -2.0 jvf
    jvh:f32[200] = mul a jve
    jvi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jvg
    jvj:f32[200] = mul jvi jvh
    jvk:f32[] = reduce_sum[axes=(0,)] jvj
    jvl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jvm:f32[] = div -2.0 jvl
    jvn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jvm
    jvo:f32[200] = mul jvn jve
    jvp:f32[] = reduce_sum[axes=(0,)] jvo
    jvq:f32[] = mul 0.0010000000474974513 jvk
    jvr:f32[] = sub juz jvq
    jvs:f32[] = mul 0.0010000000474974513 jvp
    jvt:f32[] = sub jvb jvs
    jvu:f32[200] = mul jvr a
    jvv:f32[200] = add jvu jvt
    jvw:f32[200] = sub b jvv
    jvx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jvy:f32[] = div -2.0 jvx
    jvz:f32[200] = mul a jvw
    jwa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jvy
    jwb:f32[200] = mul jwa jvz
    jwc:f32[] = reduce_sum[axes=(0,)] jwb
    jwd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jwe:f32[] = div -2.0 jwd
    jwf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jwe
    jwg:f32[200] = mul jwf jvw
    jwh:f32[] = reduce_sum[axes=(0,)] jwg
    jwi:f32[] = mul 0.0010000000474974513 jwc
    jwj:f32[] = sub jvr jwi
    jwk:f32[] = mul 0.0010000000474974513 jwh
    jwl:f32[] = sub jvt jwk
    jwm:f32[200] = mul jwj a
    jwn:f32[200] = add jwm jwl
    jwo:f32[200] = sub b jwn
    jwp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jwq:f32[] = div -2.0 jwp
    jwr:f32[200] = mul a jwo
    jws:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jwq
    jwt:f32[200] = mul jws jwr
    jwu:f32[] = reduce_sum[axes=(0,)] jwt
    jwv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jww:f32[] = div -2.0 jwv
    jwx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jww
    jwy:f32[200] = mul jwx jwo
    jwz:f32[] = reduce_sum[axes=(0,)] jwy
    jxa:f32[] = mul 0.0010000000474974513 jwu
    jxb:f32[] = sub jwj jxa
    jxc:f32[] = mul 0.0010000000474974513 jwz
    jxd:f32[] = sub jwl jxc
    jxe:f32[200] = mul jxb a
    jxf:f32[200] = add jxe jxd
    jxg:f32[200] = sub b jxf
    jxh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jxi:f32[] = div -2.0 jxh
    jxj:f32[200] = mul a jxg
    jxk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jxi
    jxl:f32[200] = mul jxk jxj
    jxm:f32[] = reduce_sum[axes=(0,)] jxl
    jxn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jxo:f32[] = div -2.0 jxn
    jxp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jxo
    jxq:f32[200] = mul jxp jxg
    jxr:f32[] = reduce_sum[axes=(0,)] jxq
    jxs:f32[] = mul 0.0010000000474974513 jxm
    jxt:f32[] = sub jxb jxs
    jxu:f32[] = mul 0.0010000000474974513 jxr
    jxv:f32[] = sub jxd jxu
    jxw:f32[200] = mul jxt a
    jxx:f32[200] = add jxw jxv
    jxy:f32[200] = sub b jxx
    jxz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jya:f32[] = div -2.0 jxz
    jyb:f32[200] = mul a jxy
    jyc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jya
    jyd:f32[200] = mul jyc jyb
    jye:f32[] = reduce_sum[axes=(0,)] jyd
    jyf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jyg:f32[] = div -2.0 jyf
    jyh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jyg
    jyi:f32[200] = mul jyh jxy
    jyj:f32[] = reduce_sum[axes=(0,)] jyi
    jyk:f32[] = mul 0.0010000000474974513 jye
    jyl:f32[] = sub jxt jyk
    jym:f32[] = mul 0.0010000000474974513 jyj
    jyn:f32[] = sub jxv jym
    jyo:f32[200] = mul jyl a
    jyp:f32[200] = add jyo jyn
    jyq:f32[200] = sub b jyp
    jyr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jys:f32[] = div -2.0 jyr
    jyt:f32[200] = mul a jyq
    jyu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jys
    jyv:f32[200] = mul jyu jyt
    jyw:f32[] = reduce_sum[axes=(0,)] jyv
    jyx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jyy:f32[] = div -2.0 jyx
    jyz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jyy
    jza:f32[200] = mul jyz jyq
    jzb:f32[] = reduce_sum[axes=(0,)] jza
    jzc:f32[] = mul 0.0010000000474974513 jyw
    jzd:f32[] = sub jyl jzc
    jze:f32[] = mul 0.0010000000474974513 jzb
    jzf:f32[] = sub jyn jze
    jzg:f32[200] = mul jzd a
    jzh:f32[200] = add jzg jzf
    jzi:f32[200] = sub b jzh
    jzj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jzk:f32[] = div -2.0 jzj
    jzl:f32[200] = mul a jzi
    jzm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jzk
    jzn:f32[200] = mul jzm jzl
    jzo:f32[] = reduce_sum[axes=(0,)] jzn
    jzp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    jzq:f32[] = div -2.0 jzp
    jzr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] jzq
    jzs:f32[200] = mul jzr jzi
    jzt:f32[] = reduce_sum[axes=(0,)] jzs
    jzu:f32[] = mul 0.0010000000474974513 jzo
    jzv:f32[] = sub jzd jzu
    jzw:f32[] = mul 0.0010000000474974513 jzt
    jzx:f32[] = sub jzf jzw
    jzy:f32[200] = mul jzv a
    jzz:f32[200] = add jzy jzx
    kaa:f32[200] = sub b jzz
    kab:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kac:f32[] = div -2.0 kab
    kad:f32[200] = mul a kaa
    kae:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kac
    kaf:f32[200] = mul kae kad
    kag:f32[] = reduce_sum[axes=(0,)] kaf
    kah:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kai:f32[] = div -2.0 kah
    kaj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kai
    kak:f32[200] = mul kaj kaa
    kal:f32[] = reduce_sum[axes=(0,)] kak
    kam:f32[] = mul 0.0010000000474974513 kag
    kan:f32[] = sub jzv kam
    kao:f32[] = mul 0.0010000000474974513 kal
    kap:f32[] = sub jzx kao
    kaq:f32[200] = mul kan a
    kar:f32[200] = add kaq kap
    kas:f32[200] = sub b kar
    kat:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kau:f32[] = div -2.0 kat
    kav:f32[200] = mul a kas
    kaw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kau
    kax:f32[200] = mul kaw kav
    kay:f32[] = reduce_sum[axes=(0,)] kax
    kaz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kba:f32[] = div -2.0 kaz
    kbb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kba
    kbc:f32[200] = mul kbb kas
    kbd:f32[] = reduce_sum[axes=(0,)] kbc
    kbe:f32[] = mul 0.0010000000474974513 kay
    kbf:f32[] = sub kan kbe
    kbg:f32[] = mul 0.0010000000474974513 kbd
    kbh:f32[] = sub kap kbg
    kbi:f32[200] = mul kbf a
    kbj:f32[200] = add kbi kbh
    kbk:f32[200] = sub b kbj
    kbl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kbm:f32[] = div -2.0 kbl
    kbn:f32[200] = mul a kbk
    kbo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kbm
    kbp:f32[200] = mul kbo kbn
    kbq:f32[] = reduce_sum[axes=(0,)] kbp
    kbr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kbs:f32[] = div -2.0 kbr
    kbt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kbs
    kbu:f32[200] = mul kbt kbk
    kbv:f32[] = reduce_sum[axes=(0,)] kbu
    kbw:f32[] = mul 0.0010000000474974513 kbq
    kbx:f32[] = sub kbf kbw
    kby:f32[] = mul 0.0010000000474974513 kbv
    kbz:f32[] = sub kbh kby
    kca:f32[200] = mul kbx a
    kcb:f32[200] = add kca kbz
    kcc:f32[200] = sub b kcb
    kcd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kce:f32[] = div -2.0 kcd
    kcf:f32[200] = mul a kcc
    kcg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kce
    kch:f32[200] = mul kcg kcf
    kci:f32[] = reduce_sum[axes=(0,)] kch
    kcj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kck:f32[] = div -2.0 kcj
    kcl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kck
    kcm:f32[200] = mul kcl kcc
    kcn:f32[] = reduce_sum[axes=(0,)] kcm
    kco:f32[] = mul 0.0010000000474974513 kci
    kcp:f32[] = sub kbx kco
    kcq:f32[] = mul 0.0010000000474974513 kcn
    kcr:f32[] = sub kbz kcq
    kcs:f32[200] = mul kcp a
    kct:f32[200] = add kcs kcr
    kcu:f32[200] = sub b kct
    kcv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kcw:f32[] = div -2.0 kcv
    kcx:f32[200] = mul a kcu
    kcy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kcw
    kcz:f32[200] = mul kcy kcx
    kda:f32[] = reduce_sum[axes=(0,)] kcz
    kdb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kdc:f32[] = div -2.0 kdb
    kdd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kdc
    kde:f32[200] = mul kdd kcu
    kdf:f32[] = reduce_sum[axes=(0,)] kde
    kdg:f32[] = mul 0.0010000000474974513 kda
    kdh:f32[] = sub kcp kdg
    kdi:f32[] = mul 0.0010000000474974513 kdf
    kdj:f32[] = sub kcr kdi
    kdk:f32[200] = mul kdh a
    kdl:f32[200] = add kdk kdj
    kdm:f32[200] = sub b kdl
    kdn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kdo:f32[] = div -2.0 kdn
    kdp:f32[200] = mul a kdm
    kdq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kdo
    kdr:f32[200] = mul kdq kdp
    kds:f32[] = reduce_sum[axes=(0,)] kdr
    kdt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kdu:f32[] = div -2.0 kdt
    kdv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kdu
    kdw:f32[200] = mul kdv kdm
    kdx:f32[] = reduce_sum[axes=(0,)] kdw
    kdy:f32[] = mul 0.0010000000474974513 kds
    kdz:f32[] = sub kdh kdy
    kea:f32[] = mul 0.0010000000474974513 kdx
    keb:f32[] = sub kdj kea
    kec:f32[200] = mul kdz a
    ked:f32[200] = add kec keb
    kee:f32[200] = sub b ked
    kef:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    keg:f32[] = div -2.0 kef
    keh:f32[200] = mul a kee
    kei:f32[] = convert_element_type[new_dtype=float32 weak_type=False] keg
    kej:f32[200] = mul kei keh
    kek:f32[] = reduce_sum[axes=(0,)] kej
    kel:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kem:f32[] = div -2.0 kel
    ken:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kem
    keo:f32[200] = mul ken kee
    kep:f32[] = reduce_sum[axes=(0,)] keo
    keq:f32[] = mul 0.0010000000474974513 kek
    ker:f32[] = sub kdz keq
    kes:f32[] = mul 0.0010000000474974513 kep
    ket:f32[] = sub keb kes
    keu:f32[200] = mul ker a
    kev:f32[200] = add keu ket
    kew:f32[200] = sub b kev
    kex:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    key:f32[] = div -2.0 kex
    kez:f32[200] = mul a kew
    kfa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] key
    kfb:f32[200] = mul kfa kez
    kfc:f32[] = reduce_sum[axes=(0,)] kfb
    kfd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kfe:f32[] = div -2.0 kfd
    kff:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kfe
    kfg:f32[200] = mul kff kew
    kfh:f32[] = reduce_sum[axes=(0,)] kfg
    kfi:f32[] = mul 0.0010000000474974513 kfc
    kfj:f32[] = sub ker kfi
    kfk:f32[] = mul 0.0010000000474974513 kfh
    kfl:f32[] = sub ket kfk
    kfm:f32[200] = mul kfj a
    kfn:f32[200] = add kfm kfl
    kfo:f32[200] = sub b kfn
    kfp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kfq:f32[] = div -2.0 kfp
    kfr:f32[200] = mul a kfo
    kfs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kfq
    kft:f32[200] = mul kfs kfr
    kfu:f32[] = reduce_sum[axes=(0,)] kft
    kfv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kfw:f32[] = div -2.0 kfv
    kfx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kfw
    kfy:f32[200] = mul kfx kfo
    kfz:f32[] = reduce_sum[axes=(0,)] kfy
    kga:f32[] = mul 0.0010000000474974513 kfu
    kgb:f32[] = sub kfj kga
    kgc:f32[] = mul 0.0010000000474974513 kfz
    kgd:f32[] = sub kfl kgc
    kge:f32[200] = mul kgb a
    kgf:f32[200] = add kge kgd
    kgg:f32[200] = sub b kgf
    kgh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kgi:f32[] = div -2.0 kgh
    kgj:f32[200] = mul a kgg
    kgk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kgi
    kgl:f32[200] = mul kgk kgj
    kgm:f32[] = reduce_sum[axes=(0,)] kgl
    kgn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kgo:f32[] = div -2.0 kgn
    kgp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kgo
    kgq:f32[200] = mul kgp kgg
    kgr:f32[] = reduce_sum[axes=(0,)] kgq
    kgs:f32[] = mul 0.0010000000474974513 kgm
    kgt:f32[] = sub kgb kgs
    kgu:f32[] = mul 0.0010000000474974513 kgr
    kgv:f32[] = sub kgd kgu
    kgw:f32[200] = mul kgt a
    kgx:f32[200] = add kgw kgv
    kgy:f32[200] = sub b kgx
    kgz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kha:f32[] = div -2.0 kgz
    khb:f32[200] = mul a kgy
    khc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kha
    khd:f32[200] = mul khc khb
    khe:f32[] = reduce_sum[axes=(0,)] khd
    khf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    khg:f32[] = div -2.0 khf
    khh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] khg
    khi:f32[200] = mul khh kgy
    khj:f32[] = reduce_sum[axes=(0,)] khi
    khk:f32[] = mul 0.0010000000474974513 khe
    khl:f32[] = sub kgt khk
    khm:f32[] = mul 0.0010000000474974513 khj
    khn:f32[] = sub kgv khm
    kho:f32[200] = mul khl a
    khp:f32[200] = add kho khn
    khq:f32[200] = sub b khp
    khr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    khs:f32[] = div -2.0 khr
    kht:f32[200] = mul a khq
    khu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] khs
    khv:f32[200] = mul khu kht
    khw:f32[] = reduce_sum[axes=(0,)] khv
    khx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    khy:f32[] = div -2.0 khx
    khz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] khy
    kia:f32[200] = mul khz khq
    kib:f32[] = reduce_sum[axes=(0,)] kia
    kic:f32[] = mul 0.0010000000474974513 khw
    kid:f32[] = sub khl kic
    kie:f32[] = mul 0.0010000000474974513 kib
    kif:f32[] = sub khn kie
    kig:f32[200] = mul kid a
    kih:f32[200] = add kig kif
    kii:f32[200] = sub b kih
    kij:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kik:f32[] = div -2.0 kij
    kil:f32[200] = mul a kii
    kim:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kik
    kin:f32[200] = mul kim kil
    kio:f32[] = reduce_sum[axes=(0,)] kin
    kip:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kiq:f32[] = div -2.0 kip
    kir:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kiq
    kis:f32[200] = mul kir kii
    kit:f32[] = reduce_sum[axes=(0,)] kis
    kiu:f32[] = mul 0.0010000000474974513 kio
    kiv:f32[] = sub kid kiu
    kiw:f32[] = mul 0.0010000000474974513 kit
    kix:f32[] = sub kif kiw
    kiy:f32[200] = mul kiv a
    kiz:f32[200] = add kiy kix
    kja:f32[200] = sub b kiz
    kjb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kjc:f32[] = div -2.0 kjb
    kjd:f32[200] = mul a kja
    kje:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kjc
    kjf:f32[200] = mul kje kjd
    kjg:f32[] = reduce_sum[axes=(0,)] kjf
    kjh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kji:f32[] = div -2.0 kjh
    kjj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kji
    kjk:f32[200] = mul kjj kja
    kjl:f32[] = reduce_sum[axes=(0,)] kjk
    kjm:f32[] = mul 0.0010000000474974513 kjg
    kjn:f32[] = sub kiv kjm
    kjo:f32[] = mul 0.0010000000474974513 kjl
    kjp:f32[] = sub kix kjo
    kjq:f32[200] = mul kjn a
    kjr:f32[200] = add kjq kjp
    kjs:f32[200] = sub b kjr
    kjt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kju:f32[] = div -2.0 kjt
    kjv:f32[200] = mul a kjs
    kjw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kju
    kjx:f32[200] = mul kjw kjv
    kjy:f32[] = reduce_sum[axes=(0,)] kjx
    kjz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kka:f32[] = div -2.0 kjz
    kkb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kka
    kkc:f32[200] = mul kkb kjs
    kkd:f32[] = reduce_sum[axes=(0,)] kkc
    kke:f32[] = mul 0.0010000000474974513 kjy
    kkf:f32[] = sub kjn kke
    kkg:f32[] = mul 0.0010000000474974513 kkd
    kkh:f32[] = sub kjp kkg
    kki:f32[200] = mul kkf a
    kkj:f32[200] = add kki kkh
    kkk:f32[200] = sub b kkj
    kkl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kkm:f32[] = div -2.0 kkl
    kkn:f32[200] = mul a kkk
    kko:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kkm
    kkp:f32[200] = mul kko kkn
    kkq:f32[] = reduce_sum[axes=(0,)] kkp
    kkr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kks:f32[] = div -2.0 kkr
    kkt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kks
    kku:f32[200] = mul kkt kkk
    kkv:f32[] = reduce_sum[axes=(0,)] kku
    kkw:f32[] = mul 0.0010000000474974513 kkq
    kkx:f32[] = sub kkf kkw
    kky:f32[] = mul 0.0010000000474974513 kkv
    kkz:f32[] = sub kkh kky
    kla:f32[200] = mul kkx a
    klb:f32[200] = add kla kkz
    klc:f32[200] = sub b klb
    kld:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kle:f32[] = div -2.0 kld
    klf:f32[200] = mul a klc
    klg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kle
    klh:f32[200] = mul klg klf
    kli:f32[] = reduce_sum[axes=(0,)] klh
    klj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    klk:f32[] = div -2.0 klj
    kll:f32[] = convert_element_type[new_dtype=float32 weak_type=False] klk
    klm:f32[200] = mul kll klc
    kln:f32[] = reduce_sum[axes=(0,)] klm
    klo:f32[] = mul 0.0010000000474974513 kli
    klp:f32[] = sub kkx klo
    klq:f32[] = mul 0.0010000000474974513 kln
    klr:f32[] = sub kkz klq
    kls:f32[200] = mul klp a
    klt:f32[200] = add kls klr
    klu:f32[200] = sub b klt
    klv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    klw:f32[] = div -2.0 klv
    klx:f32[200] = mul a klu
    kly:f32[] = convert_element_type[new_dtype=float32 weak_type=False] klw
    klz:f32[200] = mul kly klx
    kma:f32[] = reduce_sum[axes=(0,)] klz
    kmb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kmc:f32[] = div -2.0 kmb
    kmd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kmc
    kme:f32[200] = mul kmd klu
    kmf:f32[] = reduce_sum[axes=(0,)] kme
    kmg:f32[] = mul 0.0010000000474974513 kma
    kmh:f32[] = sub klp kmg
    kmi:f32[] = mul 0.0010000000474974513 kmf
    kmj:f32[] = sub klr kmi
    kmk:f32[200] = mul kmh a
    kml:f32[200] = add kmk kmj
    kmm:f32[200] = sub b kml
    kmn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kmo:f32[] = div -2.0 kmn
    kmp:f32[200] = mul a kmm
    kmq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kmo
    kmr:f32[200] = mul kmq kmp
    kms:f32[] = reduce_sum[axes=(0,)] kmr
    kmt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kmu:f32[] = div -2.0 kmt
    kmv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kmu
    kmw:f32[200] = mul kmv kmm
    kmx:f32[] = reduce_sum[axes=(0,)] kmw
    kmy:f32[] = mul 0.0010000000474974513 kms
    kmz:f32[] = sub kmh kmy
    kna:f32[] = mul 0.0010000000474974513 kmx
    knb:f32[] = sub kmj kna
    knc:f32[200] = mul kmz a
    knd:f32[200] = add knc knb
    kne:f32[200] = sub b knd
    knf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kng:f32[] = div -2.0 knf
    knh:f32[200] = mul a kne
    kni:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kng
    knj:f32[200] = mul kni knh
    knk:f32[] = reduce_sum[axes=(0,)] knj
    knl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    knm:f32[] = div -2.0 knl
    knn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] knm
    kno:f32[200] = mul knn kne
    knp:f32[] = reduce_sum[axes=(0,)] kno
    knq:f32[] = mul 0.0010000000474974513 knk
    knr:f32[] = sub kmz knq
    kns:f32[] = mul 0.0010000000474974513 knp
    knt:f32[] = sub knb kns
    knu:f32[200] = mul knr a
    knv:f32[200] = add knu knt
    knw:f32[200] = sub b knv
    knx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kny:f32[] = div -2.0 knx
    knz:f32[200] = mul a knw
    koa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kny
    kob:f32[200] = mul koa knz
    koc:f32[] = reduce_sum[axes=(0,)] kob
    kod:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    koe:f32[] = div -2.0 kod
    kof:f32[] = convert_element_type[new_dtype=float32 weak_type=False] koe
    kog:f32[200] = mul kof knw
    koh:f32[] = reduce_sum[axes=(0,)] kog
    koi:f32[] = mul 0.0010000000474974513 koc
    koj:f32[] = sub knr koi
    kok:f32[] = mul 0.0010000000474974513 koh
    kol:f32[] = sub knt kok
    kom:f32[200] = mul koj a
    kon:f32[200] = add kom kol
    koo:f32[200] = sub b kon
    kop:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    koq:f32[] = div -2.0 kop
    kor:f32[200] = mul a koo
    kos:f32[] = convert_element_type[new_dtype=float32 weak_type=False] koq
    kot:f32[200] = mul kos kor
    kou:f32[] = reduce_sum[axes=(0,)] kot
    kov:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kow:f32[] = div -2.0 kov
    kox:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kow
    koy:f32[200] = mul kox koo
    koz:f32[] = reduce_sum[axes=(0,)] koy
    kpa:f32[] = mul 0.0010000000474974513 kou
    kpb:f32[] = sub koj kpa
    kpc:f32[] = mul 0.0010000000474974513 koz
    kpd:f32[] = sub kol kpc
    kpe:f32[200] = mul kpb a
    kpf:f32[200] = add kpe kpd
    kpg:f32[200] = sub b kpf
    kph:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kpi:f32[] = div -2.0 kph
    kpj:f32[200] = mul a kpg
    kpk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kpi
    kpl:f32[200] = mul kpk kpj
    kpm:f32[] = reduce_sum[axes=(0,)] kpl
    kpn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kpo:f32[] = div -2.0 kpn
    kpp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kpo
    kpq:f32[200] = mul kpp kpg
    kpr:f32[] = reduce_sum[axes=(0,)] kpq
    kps:f32[] = mul 0.0010000000474974513 kpm
    kpt:f32[] = sub kpb kps
    kpu:f32[] = mul 0.0010000000474974513 kpr
    kpv:f32[] = sub kpd kpu
    kpw:f32[200] = mul kpt a
    kpx:f32[200] = add kpw kpv
    kpy:f32[200] = sub b kpx
    kpz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kqa:f32[] = div -2.0 kpz
    kqb:f32[200] = mul a kpy
    kqc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kqa
    kqd:f32[200] = mul kqc kqb
    kqe:f32[] = reduce_sum[axes=(0,)] kqd
    kqf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kqg:f32[] = div -2.0 kqf
    kqh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kqg
    kqi:f32[200] = mul kqh kpy
    kqj:f32[] = reduce_sum[axes=(0,)] kqi
    kqk:f32[] = mul 0.0010000000474974513 kqe
    kql:f32[] = sub kpt kqk
    kqm:f32[] = mul 0.0010000000474974513 kqj
    kqn:f32[] = sub kpv kqm
    kqo:f32[200] = mul kql a
    kqp:f32[200] = add kqo kqn
    kqq:f32[200] = sub b kqp
    kqr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kqs:f32[] = div -2.0 kqr
    kqt:f32[200] = mul a kqq
    kqu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kqs
    kqv:f32[200] = mul kqu kqt
    kqw:f32[] = reduce_sum[axes=(0,)] kqv
    kqx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kqy:f32[] = div -2.0 kqx
    kqz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kqy
    kra:f32[200] = mul kqz kqq
    krb:f32[] = reduce_sum[axes=(0,)] kra
    krc:f32[] = mul 0.0010000000474974513 kqw
    krd:f32[] = sub kql krc
    kre:f32[] = mul 0.0010000000474974513 krb
    krf:f32[] = sub kqn kre
    krg:f32[200] = mul krd a
    krh:f32[200] = add krg krf
    kri:f32[200] = sub b krh
    krj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    krk:f32[] = div -2.0 krj
    krl:f32[200] = mul a kri
    krm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] krk
    krn:f32[200] = mul krm krl
    kro:f32[] = reduce_sum[axes=(0,)] krn
    krp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    krq:f32[] = div -2.0 krp
    krr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] krq
    krs:f32[200] = mul krr kri
    krt:f32[] = reduce_sum[axes=(0,)] krs
    kru:f32[] = mul 0.0010000000474974513 kro
    krv:f32[] = sub krd kru
    krw:f32[] = mul 0.0010000000474974513 krt
    krx:f32[] = sub krf krw
    kry:f32[200] = mul krv a
    krz:f32[200] = add kry krx
    ksa:f32[200] = sub b krz
    ksb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ksc:f32[] = div -2.0 ksb
    ksd:f32[200] = mul a ksa
    kse:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ksc
    ksf:f32[200] = mul kse ksd
    ksg:f32[] = reduce_sum[axes=(0,)] ksf
    ksh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ksi:f32[] = div -2.0 ksh
    ksj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ksi
    ksk:f32[200] = mul ksj ksa
    ksl:f32[] = reduce_sum[axes=(0,)] ksk
    ksm:f32[] = mul 0.0010000000474974513 ksg
    ksn:f32[] = sub krv ksm
    kso:f32[] = mul 0.0010000000474974513 ksl
    ksp:f32[] = sub krx kso
    ksq:f32[200] = mul ksn a
    ksr:f32[200] = add ksq ksp
    kss:f32[200] = sub b ksr
    kst:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ksu:f32[] = div -2.0 kst
    ksv:f32[200] = mul a kss
    ksw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ksu
    ksx:f32[200] = mul ksw ksv
    ksy:f32[] = reduce_sum[axes=(0,)] ksx
    ksz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kta:f32[] = div -2.0 ksz
    ktb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kta
    ktc:f32[200] = mul ktb kss
    ktd:f32[] = reduce_sum[axes=(0,)] ktc
    kte:f32[] = mul 0.0010000000474974513 ksy
    ktf:f32[] = sub ksn kte
    ktg:f32[] = mul 0.0010000000474974513 ktd
    kth:f32[] = sub ksp ktg
    kti:f32[200] = mul ktf a
    ktj:f32[200] = add kti kth
    ktk:f32[200] = sub b ktj
    ktl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ktm:f32[] = div -2.0 ktl
    ktn:f32[200] = mul a ktk
    kto:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ktm
    ktp:f32[200] = mul kto ktn
    ktq:f32[] = reduce_sum[axes=(0,)] ktp
    ktr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kts:f32[] = div -2.0 ktr
    ktt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kts
    ktu:f32[200] = mul ktt ktk
    ktv:f32[] = reduce_sum[axes=(0,)] ktu
    ktw:f32[] = mul 0.0010000000474974513 ktq
    ktx:f32[] = sub ktf ktw
    kty:f32[] = mul 0.0010000000474974513 ktv
    ktz:f32[] = sub kth kty
    kua:f32[200] = mul ktx a
    kub:f32[200] = add kua ktz
    kuc:f32[200] = sub b kub
    kud:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kue:f32[] = div -2.0 kud
    kuf:f32[200] = mul a kuc
    kug:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kue
    kuh:f32[200] = mul kug kuf
    kui:f32[] = reduce_sum[axes=(0,)] kuh
    kuj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kuk:f32[] = div -2.0 kuj
    kul:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kuk
    kum:f32[200] = mul kul kuc
    kun:f32[] = reduce_sum[axes=(0,)] kum
    kuo:f32[] = mul 0.0010000000474974513 kui
    kup:f32[] = sub ktx kuo
    kuq:f32[] = mul 0.0010000000474974513 kun
    kur:f32[] = sub ktz kuq
    kus:f32[200] = mul kup a
    kut:f32[200] = add kus kur
    kuu:f32[200] = sub b kut
    kuv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kuw:f32[] = div -2.0 kuv
    kux:f32[200] = mul a kuu
    kuy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kuw
    kuz:f32[200] = mul kuy kux
    kva:f32[] = reduce_sum[axes=(0,)] kuz
    kvb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kvc:f32[] = div -2.0 kvb
    kvd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kvc
    kve:f32[200] = mul kvd kuu
    kvf:f32[] = reduce_sum[axes=(0,)] kve
    kvg:f32[] = mul 0.0010000000474974513 kva
    kvh:f32[] = sub kup kvg
    kvi:f32[] = mul 0.0010000000474974513 kvf
    kvj:f32[] = sub kur kvi
    kvk:f32[200] = mul kvh a
    kvl:f32[200] = add kvk kvj
    kvm:f32[200] = sub b kvl
    kvn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kvo:f32[] = div -2.0 kvn
    kvp:f32[200] = mul a kvm
    kvq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kvo
    kvr:f32[200] = mul kvq kvp
    kvs:f32[] = reduce_sum[axes=(0,)] kvr
    kvt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kvu:f32[] = div -2.0 kvt
    kvv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kvu
    kvw:f32[200] = mul kvv kvm
    kvx:f32[] = reduce_sum[axes=(0,)] kvw
    kvy:f32[] = mul 0.0010000000474974513 kvs
    kvz:f32[] = sub kvh kvy
    kwa:f32[] = mul 0.0010000000474974513 kvx
    kwb:f32[] = sub kvj kwa
    kwc:f32[200] = mul kvz a
    kwd:f32[200] = add kwc kwb
    kwe:f32[200] = sub b kwd
    kwf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kwg:f32[] = div -2.0 kwf
    kwh:f32[200] = mul a kwe
    kwi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kwg
    kwj:f32[200] = mul kwi kwh
    kwk:f32[] = reduce_sum[axes=(0,)] kwj
    kwl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kwm:f32[] = div -2.0 kwl
    kwn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kwm
    kwo:f32[200] = mul kwn kwe
    kwp:f32[] = reduce_sum[axes=(0,)] kwo
    kwq:f32[] = mul 0.0010000000474974513 kwk
    kwr:f32[] = sub kvz kwq
    kws:f32[] = mul 0.0010000000474974513 kwp
    kwt:f32[] = sub kwb kws
    kwu:f32[200] = mul kwr a
    kwv:f32[200] = add kwu kwt
    kww:f32[200] = sub b kwv
    kwx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kwy:f32[] = div -2.0 kwx
    kwz:f32[200] = mul a kww
    kxa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kwy
    kxb:f32[200] = mul kxa kwz
    kxc:f32[] = reduce_sum[axes=(0,)] kxb
    kxd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kxe:f32[] = div -2.0 kxd
    kxf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kxe
    kxg:f32[200] = mul kxf kww
    kxh:f32[] = reduce_sum[axes=(0,)] kxg
    kxi:f32[] = mul 0.0010000000474974513 kxc
    kxj:f32[] = sub kwr kxi
    kxk:f32[] = mul 0.0010000000474974513 kxh
    kxl:f32[] = sub kwt kxk
    kxm:f32[200] = mul kxj a
    kxn:f32[200] = add kxm kxl
    kxo:f32[200] = sub b kxn
    kxp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kxq:f32[] = div -2.0 kxp
    kxr:f32[200] = mul a kxo
    kxs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kxq
    kxt:f32[200] = mul kxs kxr
    kxu:f32[] = reduce_sum[axes=(0,)] kxt
    kxv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kxw:f32[] = div -2.0 kxv
    kxx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kxw
    kxy:f32[200] = mul kxx kxo
    kxz:f32[] = reduce_sum[axes=(0,)] kxy
    kya:f32[] = mul 0.0010000000474974513 kxu
    kyb:f32[] = sub kxj kya
    kyc:f32[] = mul 0.0010000000474974513 kxz
    kyd:f32[] = sub kxl kyc
    kye:f32[200] = mul kyb a
    kyf:f32[200] = add kye kyd
    kyg:f32[200] = sub b kyf
    kyh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kyi:f32[] = div -2.0 kyh
    kyj:f32[200] = mul a kyg
    kyk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kyi
    kyl:f32[200] = mul kyk kyj
    kym:f32[] = reduce_sum[axes=(0,)] kyl
    kyn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kyo:f32[] = div -2.0 kyn
    kyp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kyo
    kyq:f32[200] = mul kyp kyg
    kyr:f32[] = reduce_sum[axes=(0,)] kyq
    kys:f32[] = mul 0.0010000000474974513 kym
    kyt:f32[] = sub kyb kys
    kyu:f32[] = mul 0.0010000000474974513 kyr
    kyv:f32[] = sub kyd kyu
    kyw:f32[200] = mul kyt a
    kyx:f32[200] = add kyw kyv
    kyy:f32[200] = sub b kyx
    kyz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kza:f32[] = div -2.0 kyz
    kzb:f32[200] = mul a kyy
    kzc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kza
    kzd:f32[200] = mul kzc kzb
    kze:f32[] = reduce_sum[axes=(0,)] kzd
    kzf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kzg:f32[] = div -2.0 kzf
    kzh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kzg
    kzi:f32[200] = mul kzh kyy
    kzj:f32[] = reduce_sum[axes=(0,)] kzi
    kzk:f32[] = mul 0.0010000000474974513 kze
    kzl:f32[] = sub kyt kzk
    kzm:f32[] = mul 0.0010000000474974513 kzj
    kzn:f32[] = sub kyv kzm
    kzo:f32[200] = mul kzl a
    kzp:f32[200] = add kzo kzn
    kzq:f32[200] = sub b kzp
    kzr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kzs:f32[] = div -2.0 kzr
    kzt:f32[200] = mul a kzq
    kzu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kzs
    kzv:f32[200] = mul kzu kzt
    kzw:f32[] = reduce_sum[axes=(0,)] kzv
    kzx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    kzy:f32[] = div -2.0 kzx
    kzz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] kzy
    laa:f32[200] = mul kzz kzq
    lab:f32[] = reduce_sum[axes=(0,)] laa
    lac:f32[] = mul 0.0010000000474974513 kzw
    lad:f32[] = sub kzl lac
    lae:f32[] = mul 0.0010000000474974513 lab
    laf:f32[] = sub kzn lae
    lag:f32[200] = mul lad a
    lah:f32[200] = add lag laf
    lai:f32[200] = sub b lah
    laj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lak:f32[] = div -2.0 laj
    lal:f32[200] = mul a lai
    lam:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lak
    lan:f32[200] = mul lam lal
    lao:f32[] = reduce_sum[axes=(0,)] lan
    lap:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    laq:f32[] = div -2.0 lap
    lar:f32[] = convert_element_type[new_dtype=float32 weak_type=False] laq
    las:f32[200] = mul lar lai
    lat:f32[] = reduce_sum[axes=(0,)] las
    lau:f32[] = mul 0.0010000000474974513 lao
    lav:f32[] = sub lad lau
    law:f32[] = mul 0.0010000000474974513 lat
    lax:f32[] = sub laf law
    lay:f32[200] = mul lav a
    laz:f32[200] = add lay lax
    lba:f32[200] = sub b laz
    lbb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lbc:f32[] = div -2.0 lbb
    lbd:f32[200] = mul a lba
    lbe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lbc
    lbf:f32[200] = mul lbe lbd
    lbg:f32[] = reduce_sum[axes=(0,)] lbf
    lbh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lbi:f32[] = div -2.0 lbh
    lbj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lbi
    lbk:f32[200] = mul lbj lba
    lbl:f32[] = reduce_sum[axes=(0,)] lbk
    lbm:f32[] = mul 0.0010000000474974513 lbg
    lbn:f32[] = sub lav lbm
    lbo:f32[] = mul 0.0010000000474974513 lbl
    lbp:f32[] = sub lax lbo
    lbq:f32[200] = mul lbn a
    lbr:f32[200] = add lbq lbp
    lbs:f32[200] = sub b lbr
    lbt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lbu:f32[] = div -2.0 lbt
    lbv:f32[200] = mul a lbs
    lbw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lbu
    lbx:f32[200] = mul lbw lbv
    lby:f32[] = reduce_sum[axes=(0,)] lbx
    lbz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lca:f32[] = div -2.0 lbz
    lcb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lca
    lcc:f32[200] = mul lcb lbs
    lcd:f32[] = reduce_sum[axes=(0,)] lcc
    lce:f32[] = mul 0.0010000000474974513 lby
    lcf:f32[] = sub lbn lce
    lcg:f32[] = mul 0.0010000000474974513 lcd
    lch:f32[] = sub lbp lcg
    lci:f32[200] = mul lcf a
    lcj:f32[200] = add lci lch
    lck:f32[200] = sub b lcj
    lcl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lcm:f32[] = div -2.0 lcl
    lcn:f32[200] = mul a lck
    lco:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lcm
    lcp:f32[200] = mul lco lcn
    lcq:f32[] = reduce_sum[axes=(0,)] lcp
    lcr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lcs:f32[] = div -2.0 lcr
    lct:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lcs
    lcu:f32[200] = mul lct lck
    lcv:f32[] = reduce_sum[axes=(0,)] lcu
    lcw:f32[] = mul 0.0010000000474974513 lcq
    lcx:f32[] = sub lcf lcw
    lcy:f32[] = mul 0.0010000000474974513 lcv
    lcz:f32[] = sub lch lcy
    lda:f32[200] = mul lcx a
    ldb:f32[200] = add lda lcz
    ldc:f32[200] = sub b ldb
    ldd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lde:f32[] = div -2.0 ldd
    ldf:f32[200] = mul a ldc
    ldg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lde
    ldh:f32[200] = mul ldg ldf
    ldi:f32[] = reduce_sum[axes=(0,)] ldh
    ldj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ldk:f32[] = div -2.0 ldj
    ldl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ldk
    ldm:f32[200] = mul ldl ldc
    ldn:f32[] = reduce_sum[axes=(0,)] ldm
    ldo:f32[] = mul 0.0010000000474974513 ldi
    ldp:f32[] = sub lcx ldo
    ldq:f32[] = mul 0.0010000000474974513 ldn
    ldr:f32[] = sub lcz ldq
    lds:f32[200] = mul ldp a
    ldt:f32[200] = add lds ldr
    ldu:f32[200] = sub b ldt
    ldv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ldw:f32[] = div -2.0 ldv
    ldx:f32[200] = mul a ldu
    ldy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ldw
    ldz:f32[200] = mul ldy ldx
    lea:f32[] = reduce_sum[axes=(0,)] ldz
    leb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lec:f32[] = div -2.0 leb
    led:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lec
    lee:f32[200] = mul led ldu
    lef:f32[] = reduce_sum[axes=(0,)] lee
    leg:f32[] = mul 0.0010000000474974513 lea
    leh:f32[] = sub ldp leg
    lei:f32[] = mul 0.0010000000474974513 lef
    lej:f32[] = sub ldr lei
    lek:f32[200] = mul leh a
    lel:f32[200] = add lek lej
    lem:f32[200] = sub b lel
    len:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    leo:f32[] = div -2.0 len
    lep:f32[200] = mul a lem
    leq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] leo
    ler:f32[200] = mul leq lep
    les:f32[] = reduce_sum[axes=(0,)] ler
    let:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    leu:f32[] = div -2.0 let
    lev:f32[] = convert_element_type[new_dtype=float32 weak_type=False] leu
    lew:f32[200] = mul lev lem
    lex:f32[] = reduce_sum[axes=(0,)] lew
    ley:f32[] = mul 0.0010000000474974513 les
    lez:f32[] = sub leh ley
    lfa:f32[] = mul 0.0010000000474974513 lex
    lfb:f32[] = sub lej lfa
    lfc:f32[200] = mul lez a
    lfd:f32[200] = add lfc lfb
    lfe:f32[200] = sub b lfd
    lff:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lfg:f32[] = div -2.0 lff
    lfh:f32[200] = mul a lfe
    lfi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lfg
    lfj:f32[200] = mul lfi lfh
    lfk:f32[] = reduce_sum[axes=(0,)] lfj
    lfl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lfm:f32[] = div -2.0 lfl
    lfn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lfm
    lfo:f32[200] = mul lfn lfe
    lfp:f32[] = reduce_sum[axes=(0,)] lfo
    lfq:f32[] = mul 0.0010000000474974513 lfk
    lfr:f32[] = sub lez lfq
    lfs:f32[] = mul 0.0010000000474974513 lfp
    lft:f32[] = sub lfb lfs
    lfu:f32[200] = mul lfr a
    lfv:f32[200] = add lfu lft
    lfw:f32[200] = sub b lfv
    lfx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lfy:f32[] = div -2.0 lfx
    lfz:f32[200] = mul a lfw
    lga:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lfy
    lgb:f32[200] = mul lga lfz
    lgc:f32[] = reduce_sum[axes=(0,)] lgb
    lgd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lge:f32[] = div -2.0 lgd
    lgf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lge
    lgg:f32[200] = mul lgf lfw
    lgh:f32[] = reduce_sum[axes=(0,)] lgg
    lgi:f32[] = mul 0.0010000000474974513 lgc
    lgj:f32[] = sub lfr lgi
    lgk:f32[] = mul 0.0010000000474974513 lgh
    lgl:f32[] = sub lft lgk
    lgm:f32[200] = mul lgj a
    lgn:f32[200] = add lgm lgl
    lgo:f32[200] = sub b lgn
    lgp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lgq:f32[] = div -2.0 lgp
    lgr:f32[200] = mul a lgo
    lgs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lgq
    lgt:f32[200] = mul lgs lgr
    lgu:f32[] = reduce_sum[axes=(0,)] lgt
    lgv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lgw:f32[] = div -2.0 lgv
    lgx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lgw
    lgy:f32[200] = mul lgx lgo
    lgz:f32[] = reduce_sum[axes=(0,)] lgy
    lha:f32[] = mul 0.0010000000474974513 lgu
    lhb:f32[] = sub lgj lha
    lhc:f32[] = mul 0.0010000000474974513 lgz
    lhd:f32[] = sub lgl lhc
    lhe:f32[200] = mul lhb a
    lhf:f32[200] = add lhe lhd
    lhg:f32[200] = sub b lhf
    lhh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lhi:f32[] = div -2.0 lhh
    lhj:f32[200] = mul a lhg
    lhk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lhi
    lhl:f32[200] = mul lhk lhj
    lhm:f32[] = reduce_sum[axes=(0,)] lhl
    lhn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lho:f32[] = div -2.0 lhn
    lhp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lho
    lhq:f32[200] = mul lhp lhg
    lhr:f32[] = reduce_sum[axes=(0,)] lhq
    lhs:f32[] = mul 0.0010000000474974513 lhm
    lht:f32[] = sub lhb lhs
    lhu:f32[] = mul 0.0010000000474974513 lhr
    lhv:f32[] = sub lhd lhu
    lhw:f32[200] = mul lht a
    lhx:f32[200] = add lhw lhv
    lhy:f32[200] = sub b lhx
    lhz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lia:f32[] = div -2.0 lhz
    lib:f32[200] = mul a lhy
    lic:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lia
    lid:f32[200] = mul lic lib
    lie:f32[] = reduce_sum[axes=(0,)] lid
    lif:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lig:f32[] = div -2.0 lif
    lih:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lig
    lii:f32[200] = mul lih lhy
    lij:f32[] = reduce_sum[axes=(0,)] lii
    lik:f32[] = mul 0.0010000000474974513 lie
    lil:f32[] = sub lht lik
    lim:f32[] = mul 0.0010000000474974513 lij
    lin:f32[] = sub lhv lim
    lio:f32[200] = mul lil a
    lip:f32[200] = add lio lin
    liq:f32[200] = sub b lip
    lir:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lis:f32[] = div -2.0 lir
    lit:f32[200] = mul a liq
    liu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lis
    liv:f32[200] = mul liu lit
    liw:f32[] = reduce_sum[axes=(0,)] liv
    lix:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    liy:f32[] = div -2.0 lix
    liz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] liy
    lja:f32[200] = mul liz liq
    ljb:f32[] = reduce_sum[axes=(0,)] lja
    ljc:f32[] = mul 0.0010000000474974513 liw
    ljd:f32[] = sub lil ljc
    lje:f32[] = mul 0.0010000000474974513 ljb
    ljf:f32[] = sub lin lje
    ljg:f32[200] = mul ljd a
    ljh:f32[200] = add ljg ljf
    lji:f32[200] = sub b ljh
    ljj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ljk:f32[] = div -2.0 ljj
    ljl:f32[200] = mul a lji
    ljm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ljk
    ljn:f32[200] = mul ljm ljl
    ljo:f32[] = reduce_sum[axes=(0,)] ljn
    ljp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ljq:f32[] = div -2.0 ljp
    ljr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ljq
    ljs:f32[200] = mul ljr lji
    ljt:f32[] = reduce_sum[axes=(0,)] ljs
    lju:f32[] = mul 0.0010000000474974513 ljo
    ljv:f32[] = sub ljd lju
    ljw:f32[] = mul 0.0010000000474974513 ljt
    ljx:f32[] = sub ljf ljw
    ljy:f32[200] = mul ljv a
    ljz:f32[200] = add ljy ljx
    lka:f32[200] = sub b ljz
    lkb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lkc:f32[] = div -2.0 lkb
    lkd:f32[200] = mul a lka
    lke:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lkc
    lkf:f32[200] = mul lke lkd
    lkg:f32[] = reduce_sum[axes=(0,)] lkf
    lkh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lki:f32[] = div -2.0 lkh
    lkj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lki
    lkk:f32[200] = mul lkj lka
    lkl:f32[] = reduce_sum[axes=(0,)] lkk
    lkm:f32[] = mul 0.0010000000474974513 lkg
    lkn:f32[] = sub ljv lkm
    lko:f32[] = mul 0.0010000000474974513 lkl
    lkp:f32[] = sub ljx lko
    lkq:f32[200] = mul lkn a
    lkr:f32[200] = add lkq lkp
    lks:f32[200] = sub b lkr
    lkt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lku:f32[] = div -2.0 lkt
    lkv:f32[200] = mul a lks
    lkw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lku
    lkx:f32[200] = mul lkw lkv
    lky:f32[] = reduce_sum[axes=(0,)] lkx
    lkz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lla:f32[] = div -2.0 lkz
    llb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lla
    llc:f32[200] = mul llb lks
    lld:f32[] = reduce_sum[axes=(0,)] llc
    lle:f32[] = mul 0.0010000000474974513 lky
    llf:f32[] = sub lkn lle
    llg:f32[] = mul 0.0010000000474974513 lld
    llh:f32[] = sub lkp llg
    lli:f32[200] = mul llf a
    llj:f32[200] = add lli llh
    llk:f32[200] = sub b llj
    lll:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    llm:f32[] = div -2.0 lll
    lln:f32[200] = mul a llk
    llo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] llm
    llp:f32[200] = mul llo lln
    llq:f32[] = reduce_sum[axes=(0,)] llp
    llr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lls:f32[] = div -2.0 llr
    llt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lls
    llu:f32[200] = mul llt llk
    llv:f32[] = reduce_sum[axes=(0,)] llu
    llw:f32[] = mul 0.0010000000474974513 llq
    llx:f32[] = sub llf llw
    lly:f32[] = mul 0.0010000000474974513 llv
    llz:f32[] = sub llh lly
    lma:f32[200] = mul llx a
    lmb:f32[200] = add lma llz
    lmc:f32[200] = sub b lmb
    lmd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lme:f32[] = div -2.0 lmd
    lmf:f32[200] = mul a lmc
    lmg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lme
    lmh:f32[200] = mul lmg lmf
    lmi:f32[] = reduce_sum[axes=(0,)] lmh
    lmj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lmk:f32[] = div -2.0 lmj
    lml:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lmk
    lmm:f32[200] = mul lml lmc
    lmn:f32[] = reduce_sum[axes=(0,)] lmm
    lmo:f32[] = mul 0.0010000000474974513 lmi
    lmp:f32[] = sub llx lmo
    lmq:f32[] = mul 0.0010000000474974513 lmn
    lmr:f32[] = sub llz lmq
    lms:f32[200] = mul lmp a
    lmt:f32[200] = add lms lmr
    lmu:f32[200] = sub b lmt
    lmv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lmw:f32[] = div -2.0 lmv
    lmx:f32[200] = mul a lmu
    lmy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lmw
    lmz:f32[200] = mul lmy lmx
    lna:f32[] = reduce_sum[axes=(0,)] lmz
    lnb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lnc:f32[] = div -2.0 lnb
    lnd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lnc
    lne:f32[200] = mul lnd lmu
    lnf:f32[] = reduce_sum[axes=(0,)] lne
    lng:f32[] = mul 0.0010000000474974513 lna
    lnh:f32[] = sub lmp lng
    lni:f32[] = mul 0.0010000000474974513 lnf
    lnj:f32[] = sub lmr lni
    lnk:f32[200] = mul lnh a
    lnl:f32[200] = add lnk lnj
    lnm:f32[200] = sub b lnl
    lnn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lno:f32[] = div -2.0 lnn
    lnp:f32[200] = mul a lnm
    lnq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lno
    lnr:f32[200] = mul lnq lnp
    lns:f32[] = reduce_sum[axes=(0,)] lnr
    lnt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lnu:f32[] = div -2.0 lnt
    lnv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lnu
    lnw:f32[200] = mul lnv lnm
    lnx:f32[] = reduce_sum[axes=(0,)] lnw
    lny:f32[] = mul 0.0010000000474974513 lns
    lnz:f32[] = sub lnh lny
    loa:f32[] = mul 0.0010000000474974513 lnx
    lob:f32[] = sub lnj loa
    loc:f32[200] = mul lnz a
    lod:f32[200] = add loc lob
    loe:f32[200] = sub b lod
    lof:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    log:f32[] = div -2.0 lof
    loh:f32[200] = mul a loe
    loi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] log
    loj:f32[200] = mul loi loh
    lok:f32[] = reduce_sum[axes=(0,)] loj
    lol:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lom:f32[] = div -2.0 lol
    lon:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lom
    loo:f32[200] = mul lon loe
    lop:f32[] = reduce_sum[axes=(0,)] loo
    loq:f32[] = mul 0.0010000000474974513 lok
    lor:f32[] = sub lnz loq
    los:f32[] = mul 0.0010000000474974513 lop
    lot:f32[] = sub lob los
    lou:f32[200] = mul lor a
    lov:f32[200] = add lou lot
    low:f32[200] = sub b lov
    lox:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    loy:f32[] = div -2.0 lox
    loz:f32[200] = mul a low
    lpa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] loy
    lpb:f32[200] = mul lpa loz
    lpc:f32[] = reduce_sum[axes=(0,)] lpb
    lpd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lpe:f32[] = div -2.0 lpd
    lpf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lpe
    lpg:f32[200] = mul lpf low
    lph:f32[] = reduce_sum[axes=(0,)] lpg
    lpi:f32[] = mul 0.0010000000474974513 lpc
    lpj:f32[] = sub lor lpi
    lpk:f32[] = mul 0.0010000000474974513 lph
    lpl:f32[] = sub lot lpk
    lpm:f32[200] = mul lpj a
    lpn:f32[200] = add lpm lpl
    lpo:f32[200] = sub b lpn
    lpp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lpq:f32[] = div -2.0 lpp
    lpr:f32[200] = mul a lpo
    lps:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lpq
    lpt:f32[200] = mul lps lpr
    lpu:f32[] = reduce_sum[axes=(0,)] lpt
    lpv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lpw:f32[] = div -2.0 lpv
    lpx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lpw
    lpy:f32[200] = mul lpx lpo
    lpz:f32[] = reduce_sum[axes=(0,)] lpy
    lqa:f32[] = mul 0.0010000000474974513 lpu
    lqb:f32[] = sub lpj lqa
    lqc:f32[] = mul 0.0010000000474974513 lpz
    lqd:f32[] = sub lpl lqc
    lqe:f32[200] = mul lqb a
    lqf:f32[200] = add lqe lqd
    lqg:f32[200] = sub b lqf
    lqh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lqi:f32[] = div -2.0 lqh
    lqj:f32[200] = mul a lqg
    lqk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lqi
    lql:f32[200] = mul lqk lqj
    lqm:f32[] = reduce_sum[axes=(0,)] lql
    lqn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lqo:f32[] = div -2.0 lqn
    lqp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lqo
    lqq:f32[200] = mul lqp lqg
    lqr:f32[] = reduce_sum[axes=(0,)] lqq
    lqs:f32[] = mul 0.0010000000474974513 lqm
    lqt:f32[] = sub lqb lqs
    lqu:f32[] = mul 0.0010000000474974513 lqr
    lqv:f32[] = sub lqd lqu
    lqw:f32[200] = mul lqt a
    lqx:f32[200] = add lqw lqv
    lqy:f32[200] = sub b lqx
    lqz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lra:f32[] = div -2.0 lqz
    lrb:f32[200] = mul a lqy
    lrc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lra
    lrd:f32[200] = mul lrc lrb
    lre:f32[] = reduce_sum[axes=(0,)] lrd
    lrf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lrg:f32[] = div -2.0 lrf
    lrh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lrg
    lri:f32[200] = mul lrh lqy
    lrj:f32[] = reduce_sum[axes=(0,)] lri
    lrk:f32[] = mul 0.0010000000474974513 lre
    lrl:f32[] = sub lqt lrk
    lrm:f32[] = mul 0.0010000000474974513 lrj
    lrn:f32[] = sub lqv lrm
    lro:f32[200] = mul lrl a
    lrp:f32[200] = add lro lrn
    lrq:f32[200] = sub b lrp
    lrr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lrs:f32[] = div -2.0 lrr
    lrt:f32[200] = mul a lrq
    lru:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lrs
    lrv:f32[200] = mul lru lrt
    lrw:f32[] = reduce_sum[axes=(0,)] lrv
    lrx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lry:f32[] = div -2.0 lrx
    lrz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lry
    lsa:f32[200] = mul lrz lrq
    lsb:f32[] = reduce_sum[axes=(0,)] lsa
    lsc:f32[] = mul 0.0010000000474974513 lrw
    lsd:f32[] = sub lrl lsc
    lse:f32[] = mul 0.0010000000474974513 lsb
    lsf:f32[] = sub lrn lse
    lsg:f32[200] = mul lsd a
    lsh:f32[200] = add lsg lsf
    lsi:f32[200] = sub b lsh
    lsj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lsk:f32[] = div -2.0 lsj
    lsl:f32[200] = mul a lsi
    lsm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lsk
    lsn:f32[200] = mul lsm lsl
    lso:f32[] = reduce_sum[axes=(0,)] lsn
    lsp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lsq:f32[] = div -2.0 lsp
    lsr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lsq
    lss:f32[200] = mul lsr lsi
    lst:f32[] = reduce_sum[axes=(0,)] lss
    lsu:f32[] = mul 0.0010000000474974513 lso
    lsv:f32[] = sub lsd lsu
    lsw:f32[] = mul 0.0010000000474974513 lst
    lsx:f32[] = sub lsf lsw
    lsy:f32[200] = mul lsv a
    lsz:f32[200] = add lsy lsx
    lta:f32[200] = sub b lsz
    ltb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ltc:f32[] = div -2.0 ltb
    ltd:f32[200] = mul a lta
    lte:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ltc
    ltf:f32[200] = mul lte ltd
    ltg:f32[] = reduce_sum[axes=(0,)] ltf
    lth:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lti:f32[] = div -2.0 lth
    ltj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lti
    ltk:f32[200] = mul ltj lta
    ltl:f32[] = reduce_sum[axes=(0,)] ltk
    ltm:f32[] = mul 0.0010000000474974513 ltg
    ltn:f32[] = sub lsv ltm
    lto:f32[] = mul 0.0010000000474974513 ltl
    ltp:f32[] = sub lsx lto
    ltq:f32[200] = mul ltn a
    ltr:f32[200] = add ltq ltp
    lts:f32[200] = sub b ltr
    ltt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ltu:f32[] = div -2.0 ltt
    ltv:f32[200] = mul a lts
    ltw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ltu
    ltx:f32[200] = mul ltw ltv
    lty:f32[] = reduce_sum[axes=(0,)] ltx
    ltz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lua:f32[] = div -2.0 ltz
    lub:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lua
    luc:f32[200] = mul lub lts
    lud:f32[] = reduce_sum[axes=(0,)] luc
    lue:f32[] = mul 0.0010000000474974513 lty
    luf:f32[] = sub ltn lue
    lug:f32[] = mul 0.0010000000474974513 lud
    luh:f32[] = sub ltp lug
    lui:f32[200] = mul luf a
    luj:f32[200] = add lui luh
    luk:f32[200] = sub b luj
    lul:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lum:f32[] = div -2.0 lul
    lun:f32[200] = mul a luk
    luo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lum
    lup:f32[200] = mul luo lun
    luq:f32[] = reduce_sum[axes=(0,)] lup
    lur:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lus:f32[] = div -2.0 lur
    lut:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lus
    luu:f32[200] = mul lut luk
    luv:f32[] = reduce_sum[axes=(0,)] luu
    luw:f32[] = mul 0.0010000000474974513 luq
    lux:f32[] = sub luf luw
    luy:f32[] = mul 0.0010000000474974513 luv
    luz:f32[] = sub luh luy
    lva:f32[200] = mul lux a
    lvb:f32[200] = add lva luz
    lvc:f32[200] = sub b lvb
    lvd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lve:f32[] = div -2.0 lvd
    lvf:f32[200] = mul a lvc
    lvg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lve
    lvh:f32[200] = mul lvg lvf
    lvi:f32[] = reduce_sum[axes=(0,)] lvh
    lvj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lvk:f32[] = div -2.0 lvj
    lvl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lvk
    lvm:f32[200] = mul lvl lvc
    lvn:f32[] = reduce_sum[axes=(0,)] lvm
    lvo:f32[] = mul 0.0010000000474974513 lvi
    lvp:f32[] = sub lux lvo
    lvq:f32[] = mul 0.0010000000474974513 lvn
    lvr:f32[] = sub luz lvq
    lvs:f32[200] = mul lvp a
    lvt:f32[200] = add lvs lvr
    lvu:f32[200] = sub b lvt
    lvv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lvw:f32[] = div -2.0 lvv
    lvx:f32[200] = mul a lvu
    lvy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lvw
    lvz:f32[200] = mul lvy lvx
    lwa:f32[] = reduce_sum[axes=(0,)] lvz
    lwb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lwc:f32[] = div -2.0 lwb
    lwd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lwc
    lwe:f32[200] = mul lwd lvu
    lwf:f32[] = reduce_sum[axes=(0,)] lwe
    lwg:f32[] = mul 0.0010000000474974513 lwa
    lwh:f32[] = sub lvp lwg
    lwi:f32[] = mul 0.0010000000474974513 lwf
    lwj:f32[] = sub lvr lwi
    lwk:f32[200] = mul lwh a
    lwl:f32[200] = add lwk lwj
    lwm:f32[200] = sub b lwl
    lwn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lwo:f32[] = div -2.0 lwn
    lwp:f32[200] = mul a lwm
    lwq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lwo
    lwr:f32[200] = mul lwq lwp
    lws:f32[] = reduce_sum[axes=(0,)] lwr
    lwt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lwu:f32[] = div -2.0 lwt
    lwv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lwu
    lww:f32[200] = mul lwv lwm
    lwx:f32[] = reduce_sum[axes=(0,)] lww
    lwy:f32[] = mul 0.0010000000474974513 lws
    lwz:f32[] = sub lwh lwy
    lxa:f32[] = mul 0.0010000000474974513 lwx
    lxb:f32[] = sub lwj lxa
    lxc:f32[200] = mul lwz a
    lxd:f32[200] = add lxc lxb
    lxe:f32[200] = sub b lxd
    lxf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lxg:f32[] = div -2.0 lxf
    lxh:f32[200] = mul a lxe
    lxi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lxg
    lxj:f32[200] = mul lxi lxh
    lxk:f32[] = reduce_sum[axes=(0,)] lxj
    lxl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lxm:f32[] = div -2.0 lxl
    lxn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lxm
    lxo:f32[200] = mul lxn lxe
    lxp:f32[] = reduce_sum[axes=(0,)] lxo
    lxq:f32[] = mul 0.0010000000474974513 lxk
    lxr:f32[] = sub lwz lxq
    lxs:f32[] = mul 0.0010000000474974513 lxp
    lxt:f32[] = sub lxb lxs
    lxu:f32[200] = mul lxr a
    lxv:f32[200] = add lxu lxt
    lxw:f32[200] = sub b lxv
    lxx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lxy:f32[] = div -2.0 lxx
    lxz:f32[200] = mul a lxw
    lya:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lxy
    lyb:f32[200] = mul lya lxz
    lyc:f32[] = reduce_sum[axes=(0,)] lyb
    lyd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lye:f32[] = div -2.0 lyd
    lyf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lye
    lyg:f32[200] = mul lyf lxw
    lyh:f32[] = reduce_sum[axes=(0,)] lyg
    lyi:f32[] = mul 0.0010000000474974513 lyc
    lyj:f32[] = sub lxr lyi
    lyk:f32[] = mul 0.0010000000474974513 lyh
    lyl:f32[] = sub lxt lyk
    lym:f32[200] = mul lyj a
    lyn:f32[200] = add lym lyl
    lyo:f32[200] = sub b lyn
    lyp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lyq:f32[] = div -2.0 lyp
    lyr:f32[200] = mul a lyo
    lys:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lyq
    lyt:f32[200] = mul lys lyr
    lyu:f32[] = reduce_sum[axes=(0,)] lyt
    lyv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lyw:f32[] = div -2.0 lyv
    lyx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lyw
    lyy:f32[200] = mul lyx lyo
    lyz:f32[] = reduce_sum[axes=(0,)] lyy
    lza:f32[] = mul 0.0010000000474974513 lyu
    lzb:f32[] = sub lyj lza
    lzc:f32[] = mul 0.0010000000474974513 lyz
    lzd:f32[] = sub lyl lzc
    lze:f32[200] = mul lzb a
    lzf:f32[200] = add lze lzd
    lzg:f32[200] = sub b lzf
    lzh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lzi:f32[] = div -2.0 lzh
    lzj:f32[200] = mul a lzg
    lzk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lzi
    lzl:f32[200] = mul lzk lzj
    lzm:f32[] = reduce_sum[axes=(0,)] lzl
    lzn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    lzo:f32[] = div -2.0 lzn
    lzp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] lzo
    lzq:f32[200] = mul lzp lzg
    lzr:f32[] = reduce_sum[axes=(0,)] lzq
    lzs:f32[] = mul 0.0010000000474974513 lzm
    lzt:f32[] = sub lzb lzs
    lzu:f32[] = mul 0.0010000000474974513 lzr
    lzv:f32[] = sub lzd lzu
    lzw:f32[200] = mul lzt a
    lzx:f32[200] = add lzw lzv
    lzy:f32[200] = sub b lzx
    lzz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    maa:f32[] = div -2.0 lzz
    mab:f32[200] = mul a lzy
    mac:f32[] = convert_element_type[new_dtype=float32 weak_type=False] maa
    mad:f32[200] = mul mac mab
    mae:f32[] = reduce_sum[axes=(0,)] mad
    maf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mag:f32[] = div -2.0 maf
    mah:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mag
    mai:f32[200] = mul mah lzy
    maj:f32[] = reduce_sum[axes=(0,)] mai
    mak:f32[] = mul 0.0010000000474974513 mae
    mal:f32[] = sub lzt mak
    mam:f32[] = mul 0.0010000000474974513 maj
    man:f32[] = sub lzv mam
    mao:f32[200] = mul mal a
    map:f32[200] = add mao man
    maq:f32[200] = sub b map
    mar:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mas:f32[] = div -2.0 mar
    mat:f32[200] = mul a maq
    mau:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mas
    mav:f32[200] = mul mau mat
    maw:f32[] = reduce_sum[axes=(0,)] mav
    max:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    may:f32[] = div -2.0 max
    maz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] may
    mba:f32[200] = mul maz maq
    mbb:f32[] = reduce_sum[axes=(0,)] mba
    mbc:f32[] = mul 0.0010000000474974513 maw
    mbd:f32[] = sub mal mbc
    mbe:f32[] = mul 0.0010000000474974513 mbb
    mbf:f32[] = sub man mbe
    mbg:f32[200] = mul mbd a
    mbh:f32[200] = add mbg mbf
    mbi:f32[200] = sub b mbh
    mbj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mbk:f32[] = div -2.0 mbj
    mbl:f32[200] = mul a mbi
    mbm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mbk
    mbn:f32[200] = mul mbm mbl
    mbo:f32[] = reduce_sum[axes=(0,)] mbn
    mbp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mbq:f32[] = div -2.0 mbp
    mbr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mbq
    mbs:f32[200] = mul mbr mbi
    mbt:f32[] = reduce_sum[axes=(0,)] mbs
    mbu:f32[] = mul 0.0010000000474974513 mbo
    mbv:f32[] = sub mbd mbu
    mbw:f32[] = mul 0.0010000000474974513 mbt
    mbx:f32[] = sub mbf mbw
    mby:f32[200] = mul mbv a
    mbz:f32[200] = add mby mbx
    mca:f32[200] = sub b mbz
    mcb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mcc:f32[] = div -2.0 mcb
    mcd:f32[200] = mul a mca
    mce:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mcc
    mcf:f32[200] = mul mce mcd
    mcg:f32[] = reduce_sum[axes=(0,)] mcf
    mch:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mci:f32[] = div -2.0 mch
    mcj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mci
    mck:f32[200] = mul mcj mca
    mcl:f32[] = reduce_sum[axes=(0,)] mck
    mcm:f32[] = mul 0.0010000000474974513 mcg
    mcn:f32[] = sub mbv mcm
    mco:f32[] = mul 0.0010000000474974513 mcl
    mcp:f32[] = sub mbx mco
    mcq:f32[200] = mul mcn a
    mcr:f32[200] = add mcq mcp
    mcs:f32[200] = sub b mcr
    mct:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mcu:f32[] = div -2.0 mct
    mcv:f32[200] = mul a mcs
    mcw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mcu
    mcx:f32[200] = mul mcw mcv
    mcy:f32[] = reduce_sum[axes=(0,)] mcx
    mcz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mda:f32[] = div -2.0 mcz
    mdb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mda
    mdc:f32[200] = mul mdb mcs
    mdd:f32[] = reduce_sum[axes=(0,)] mdc
    mde:f32[] = mul 0.0010000000474974513 mcy
    mdf:f32[] = sub mcn mde
    mdg:f32[] = mul 0.0010000000474974513 mdd
    mdh:f32[] = sub mcp mdg
    mdi:f32[200] = mul mdf a
    mdj:f32[200] = add mdi mdh
    mdk:f32[200] = sub b mdj
    mdl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mdm:f32[] = div -2.0 mdl
    mdn:f32[200] = mul a mdk
    mdo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mdm
    mdp:f32[200] = mul mdo mdn
    mdq:f32[] = reduce_sum[axes=(0,)] mdp
    mdr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mds:f32[] = div -2.0 mdr
    mdt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mds
    mdu:f32[200] = mul mdt mdk
    mdv:f32[] = reduce_sum[axes=(0,)] mdu
    mdw:f32[] = mul 0.0010000000474974513 mdq
    mdx:f32[] = sub mdf mdw
    mdy:f32[] = mul 0.0010000000474974513 mdv
    mdz:f32[] = sub mdh mdy
    mea:f32[200] = mul mdx a
    meb:f32[200] = add mea mdz
    mec:f32[200] = sub b meb
    med:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mee:f32[] = div -2.0 med
    mef:f32[200] = mul a mec
    meg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mee
    meh:f32[200] = mul meg mef
    mei:f32[] = reduce_sum[axes=(0,)] meh
    mej:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mek:f32[] = div -2.0 mej
    mel:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mek
    mem:f32[200] = mul mel mec
    men:f32[] = reduce_sum[axes=(0,)] mem
    meo:f32[] = mul 0.0010000000474974513 mei
    mep:f32[] = sub mdx meo
    meq:f32[] = mul 0.0010000000474974513 men
    mer:f32[] = sub mdz meq
    mes:f32[200] = mul mep a
    met:f32[200] = add mes mer
    meu:f32[200] = sub b met
    mev:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mew:f32[] = div -2.0 mev
    mex:f32[200] = mul a meu
    mey:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mew
    mez:f32[200] = mul mey mex
    mfa:f32[] = reduce_sum[axes=(0,)] mez
    mfb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mfc:f32[] = div -2.0 mfb
    mfd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mfc
    mfe:f32[200] = mul mfd meu
    mff:f32[] = reduce_sum[axes=(0,)] mfe
    mfg:f32[] = mul 0.0010000000474974513 mfa
    mfh:f32[] = sub mep mfg
    mfi:f32[] = mul 0.0010000000474974513 mff
    mfj:f32[] = sub mer mfi
    mfk:f32[200] = mul mfh a
    mfl:f32[200] = add mfk mfj
    mfm:f32[200] = sub b mfl
    mfn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mfo:f32[] = div -2.0 mfn
    mfp:f32[200] = mul a mfm
    mfq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mfo
    mfr:f32[200] = mul mfq mfp
    mfs:f32[] = reduce_sum[axes=(0,)] mfr
    mft:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mfu:f32[] = div -2.0 mft
    mfv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mfu
    mfw:f32[200] = mul mfv mfm
    mfx:f32[] = reduce_sum[axes=(0,)] mfw
    mfy:f32[] = mul 0.0010000000474974513 mfs
    mfz:f32[] = sub mfh mfy
    mga:f32[] = mul 0.0010000000474974513 mfx
    mgb:f32[] = sub mfj mga
    mgc:f32[200] = mul mfz a
    mgd:f32[200] = add mgc mgb
    mge:f32[200] = sub b mgd
    mgf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mgg:f32[] = div -2.0 mgf
    mgh:f32[200] = mul a mge
    mgi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mgg
    mgj:f32[200] = mul mgi mgh
    mgk:f32[] = reduce_sum[axes=(0,)] mgj
    mgl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mgm:f32[] = div -2.0 mgl
    mgn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mgm
    mgo:f32[200] = mul mgn mge
    mgp:f32[] = reduce_sum[axes=(0,)] mgo
    mgq:f32[] = mul 0.0010000000474974513 mgk
    mgr:f32[] = sub mfz mgq
    mgs:f32[] = mul 0.0010000000474974513 mgp
    mgt:f32[] = sub mgb mgs
    mgu:f32[200] = mul mgr a
    mgv:f32[200] = add mgu mgt
    mgw:f32[200] = sub b mgv
    mgx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mgy:f32[] = div -2.0 mgx
    mgz:f32[200] = mul a mgw
    mha:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mgy
    mhb:f32[200] = mul mha mgz
    mhc:f32[] = reduce_sum[axes=(0,)] mhb
    mhd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mhe:f32[] = div -2.0 mhd
    mhf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mhe
    mhg:f32[200] = mul mhf mgw
    mhh:f32[] = reduce_sum[axes=(0,)] mhg
    mhi:f32[] = mul 0.0010000000474974513 mhc
    mhj:f32[] = sub mgr mhi
    mhk:f32[] = mul 0.0010000000474974513 mhh
    mhl:f32[] = sub mgt mhk
    mhm:f32[200] = mul mhj a
    mhn:f32[200] = add mhm mhl
    mho:f32[200] = sub b mhn
    mhp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mhq:f32[] = div -2.0 mhp
    mhr:f32[200] = mul a mho
    mhs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mhq
    mht:f32[200] = mul mhs mhr
    mhu:f32[] = reduce_sum[axes=(0,)] mht
    mhv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mhw:f32[] = div -2.0 mhv
    mhx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mhw
    mhy:f32[200] = mul mhx mho
    mhz:f32[] = reduce_sum[axes=(0,)] mhy
    mia:f32[] = mul 0.0010000000474974513 mhu
    mib:f32[] = sub mhj mia
    mic:f32[] = mul 0.0010000000474974513 mhz
    mid:f32[] = sub mhl mic
    mie:f32[200] = mul mib a
    mif:f32[200] = add mie mid
    mig:f32[200] = sub b mif
    mih:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mii:f32[] = div -2.0 mih
    mij:f32[200] = mul a mig
    mik:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mii
    mil:f32[200] = mul mik mij
    mim:f32[] = reduce_sum[axes=(0,)] mil
    min:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mio:f32[] = div -2.0 min
    mip:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mio
    miq:f32[200] = mul mip mig
    mir:f32[] = reduce_sum[axes=(0,)] miq
    mis:f32[] = mul 0.0010000000474974513 mim
    mit:f32[] = sub mib mis
    miu:f32[] = mul 0.0010000000474974513 mir
    miv:f32[] = sub mid miu
    miw:f32[200] = mul mit a
    mix:f32[200] = add miw miv
    miy:f32[200] = sub b mix
    miz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mja:f32[] = div -2.0 miz
    mjb:f32[200] = mul a miy
    mjc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mja
    mjd:f32[200] = mul mjc mjb
    mje:f32[] = reduce_sum[axes=(0,)] mjd
    mjf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mjg:f32[] = div -2.0 mjf
    mjh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mjg
    mji:f32[200] = mul mjh miy
    mjj:f32[] = reduce_sum[axes=(0,)] mji
    mjk:f32[] = mul 0.0010000000474974513 mje
    mjl:f32[] = sub mit mjk
    mjm:f32[] = mul 0.0010000000474974513 mjj
    mjn:f32[] = sub miv mjm
    mjo:f32[200] = mul mjl a
    mjp:f32[200] = add mjo mjn
    mjq:f32[200] = sub b mjp
    mjr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mjs:f32[] = div -2.0 mjr
    mjt:f32[200] = mul a mjq
    mju:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mjs
    mjv:f32[200] = mul mju mjt
    mjw:f32[] = reduce_sum[axes=(0,)] mjv
    mjx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mjy:f32[] = div -2.0 mjx
    mjz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mjy
    mka:f32[200] = mul mjz mjq
    mkb:f32[] = reduce_sum[axes=(0,)] mka
    mkc:f32[] = mul 0.0010000000474974513 mjw
    mkd:f32[] = sub mjl mkc
    mke:f32[] = mul 0.0010000000474974513 mkb
    mkf:f32[] = sub mjn mke
    mkg:f32[200] = mul mkd a
    mkh:f32[200] = add mkg mkf
    mki:f32[200] = sub b mkh
    mkj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mkk:f32[] = div -2.0 mkj
    mkl:f32[200] = mul a mki
    mkm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mkk
    mkn:f32[200] = mul mkm mkl
    mko:f32[] = reduce_sum[axes=(0,)] mkn
    mkp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mkq:f32[] = div -2.0 mkp
    mkr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mkq
    mks:f32[200] = mul mkr mki
    mkt:f32[] = reduce_sum[axes=(0,)] mks
    mku:f32[] = mul 0.0010000000474974513 mko
    mkv:f32[] = sub mkd mku
    mkw:f32[] = mul 0.0010000000474974513 mkt
    mkx:f32[] = sub mkf mkw
    mky:f32[200] = mul mkv a
    mkz:f32[200] = add mky mkx
    mla:f32[200] = sub b mkz
    mlb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mlc:f32[] = div -2.0 mlb
    mld:f32[200] = mul a mla
    mle:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mlc
    mlf:f32[200] = mul mle mld
    mlg:f32[] = reduce_sum[axes=(0,)] mlf
    mlh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mli:f32[] = div -2.0 mlh
    mlj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mli
    mlk:f32[200] = mul mlj mla
    mll:f32[] = reduce_sum[axes=(0,)] mlk
    mlm:f32[] = mul 0.0010000000474974513 mlg
    mln:f32[] = sub mkv mlm
    mlo:f32[] = mul 0.0010000000474974513 mll
    mlp:f32[] = sub mkx mlo
    mlq:f32[200] = mul mln a
    mlr:f32[200] = add mlq mlp
    mls:f32[200] = sub b mlr
    mlt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mlu:f32[] = div -2.0 mlt
    mlv:f32[200] = mul a mls
    mlw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mlu
    mlx:f32[200] = mul mlw mlv
    mly:f32[] = reduce_sum[axes=(0,)] mlx
    mlz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mma:f32[] = div -2.0 mlz
    mmb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mma
    mmc:f32[200] = mul mmb mls
    mmd:f32[] = reduce_sum[axes=(0,)] mmc
    mme:f32[] = mul 0.0010000000474974513 mly
    mmf:f32[] = sub mln mme
    mmg:f32[] = mul 0.0010000000474974513 mmd
    mmh:f32[] = sub mlp mmg
    mmi:f32[200] = mul mmf a
    mmj:f32[200] = add mmi mmh
    mmk:f32[200] = sub b mmj
    mml:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mmm:f32[] = div -2.0 mml
    mmn:f32[200] = mul a mmk
    mmo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mmm
    mmp:f32[200] = mul mmo mmn
    mmq:f32[] = reduce_sum[axes=(0,)] mmp
    mmr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mms:f32[] = div -2.0 mmr
    mmt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mms
    mmu:f32[200] = mul mmt mmk
    mmv:f32[] = reduce_sum[axes=(0,)] mmu
    mmw:f32[] = mul 0.0010000000474974513 mmq
    mmx:f32[] = sub mmf mmw
    mmy:f32[] = mul 0.0010000000474974513 mmv
    mmz:f32[] = sub mmh mmy
    mna:f32[200] = mul mmx a
    mnb:f32[200] = add mna mmz
    mnc:f32[200] = sub b mnb
    mnd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mne:f32[] = div -2.0 mnd
    mnf:f32[200] = mul a mnc
    mng:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mne
    mnh:f32[200] = mul mng mnf
    mni:f32[] = reduce_sum[axes=(0,)] mnh
    mnj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mnk:f32[] = div -2.0 mnj
    mnl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mnk
    mnm:f32[200] = mul mnl mnc
    mnn:f32[] = reduce_sum[axes=(0,)] mnm
    mno:f32[] = mul 0.0010000000474974513 mni
    mnp:f32[] = sub mmx mno
    mnq:f32[] = mul 0.0010000000474974513 mnn
    mnr:f32[] = sub mmz mnq
    mns:f32[200] = mul mnp a
    mnt:f32[200] = add mns mnr
    mnu:f32[200] = sub b mnt
    mnv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mnw:f32[] = div -2.0 mnv
    mnx:f32[200] = mul a mnu
    mny:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mnw
    mnz:f32[200] = mul mny mnx
    moa:f32[] = reduce_sum[axes=(0,)] mnz
    mob:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    moc:f32[] = div -2.0 mob
    mod:f32[] = convert_element_type[new_dtype=float32 weak_type=False] moc
    moe:f32[200] = mul mod mnu
    mof:f32[] = reduce_sum[axes=(0,)] moe
    mog:f32[] = mul 0.0010000000474974513 moa
    moh:f32[] = sub mnp mog
    moi:f32[] = mul 0.0010000000474974513 mof
    moj:f32[] = sub mnr moi
    mok:f32[200] = mul moh a
    mol:f32[200] = add mok moj
    mom:f32[200] = sub b mol
    mon:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    moo:f32[] = div -2.0 mon
    mop:f32[200] = mul a mom
    moq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] moo
    mor:f32[200] = mul moq mop
    mos:f32[] = reduce_sum[axes=(0,)] mor
    mot:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mou:f32[] = div -2.0 mot
    mov:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mou
    mow:f32[200] = mul mov mom
    mox:f32[] = reduce_sum[axes=(0,)] mow
    moy:f32[] = mul 0.0010000000474974513 mos
    moz:f32[] = sub moh moy
    mpa:f32[] = mul 0.0010000000474974513 mox
    mpb:f32[] = sub moj mpa
    mpc:f32[200] = mul moz a
    mpd:f32[200] = add mpc mpb
    mpe:f32[200] = sub b mpd
    mpf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mpg:f32[] = div -2.0 mpf
    mph:f32[200] = mul a mpe
    mpi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mpg
    mpj:f32[200] = mul mpi mph
    mpk:f32[] = reduce_sum[axes=(0,)] mpj
    mpl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mpm:f32[] = div -2.0 mpl
    mpn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mpm
    mpo:f32[200] = mul mpn mpe
    mpp:f32[] = reduce_sum[axes=(0,)] mpo
    mpq:f32[] = mul 0.0010000000474974513 mpk
    mpr:f32[] = sub moz mpq
    mps:f32[] = mul 0.0010000000474974513 mpp
    mpt:f32[] = sub mpb mps
    mpu:f32[200] = mul mpr a
    mpv:f32[200] = add mpu mpt
    mpw:f32[200] = sub b mpv
    mpx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mpy:f32[] = div -2.0 mpx
    mpz:f32[200] = mul a mpw
    mqa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mpy
    mqb:f32[200] = mul mqa mpz
    mqc:f32[] = reduce_sum[axes=(0,)] mqb
    mqd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mqe:f32[] = div -2.0 mqd
    mqf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mqe
    mqg:f32[200] = mul mqf mpw
    mqh:f32[] = reduce_sum[axes=(0,)] mqg
    mqi:f32[] = mul 0.0010000000474974513 mqc
    mqj:f32[] = sub mpr mqi
    mqk:f32[] = mul 0.0010000000474974513 mqh
    mql:f32[] = sub mpt mqk
    mqm:f32[200] = mul mqj a
    mqn:f32[200] = add mqm mql
    mqo:f32[200] = sub b mqn
    mqp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mqq:f32[] = div -2.0 mqp
    mqr:f32[200] = mul a mqo
    mqs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mqq
    mqt:f32[200] = mul mqs mqr
    mqu:f32[] = reduce_sum[axes=(0,)] mqt
    mqv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mqw:f32[] = div -2.0 mqv
    mqx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mqw
    mqy:f32[200] = mul mqx mqo
    mqz:f32[] = reduce_sum[axes=(0,)] mqy
    mra:f32[] = mul 0.0010000000474974513 mqu
    mrb:f32[] = sub mqj mra
    mrc:f32[] = mul 0.0010000000474974513 mqz
    mrd:f32[] = sub mql mrc
    mre:f32[200] = mul mrb a
    mrf:f32[200] = add mre mrd
    mrg:f32[200] = sub b mrf
    mrh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mri:f32[] = div -2.0 mrh
    mrj:f32[200] = mul a mrg
    mrk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mri
    mrl:f32[200] = mul mrk mrj
    mrm:f32[] = reduce_sum[axes=(0,)] mrl
    mrn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mro:f32[] = div -2.0 mrn
    mrp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mro
    mrq:f32[200] = mul mrp mrg
    mrr:f32[] = reduce_sum[axes=(0,)] mrq
    mrs:f32[] = mul 0.0010000000474974513 mrm
    mrt:f32[] = sub mrb mrs
    mru:f32[] = mul 0.0010000000474974513 mrr
    mrv:f32[] = sub mrd mru
    mrw:f32[200] = mul mrt a
    mrx:f32[200] = add mrw mrv
    mry:f32[200] = sub b mrx
    mrz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    msa:f32[] = div -2.0 mrz
    msb:f32[200] = mul a mry
    msc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] msa
    msd:f32[200] = mul msc msb
    mse:f32[] = reduce_sum[axes=(0,)] msd
    msf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    msg:f32[] = div -2.0 msf
    msh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] msg
    msi:f32[200] = mul msh mry
    msj:f32[] = reduce_sum[axes=(0,)] msi
    msk:f32[] = mul 0.0010000000474974513 mse
    msl:f32[] = sub mrt msk
    msm:f32[] = mul 0.0010000000474974513 msj
    msn:f32[] = sub mrv msm
    mso:f32[200] = mul msl a
    msp:f32[200] = add mso msn
    msq:f32[200] = sub b msp
    msr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mss:f32[] = div -2.0 msr
    mst:f32[200] = mul a msq
    msu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mss
    msv:f32[200] = mul msu mst
    msw:f32[] = reduce_sum[axes=(0,)] msv
    msx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    msy:f32[] = div -2.0 msx
    msz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] msy
    mta:f32[200] = mul msz msq
    mtb:f32[] = reduce_sum[axes=(0,)] mta
    mtc:f32[] = mul 0.0010000000474974513 msw
    mtd:f32[] = sub msl mtc
    mte:f32[] = mul 0.0010000000474974513 mtb
    mtf:f32[] = sub msn mte
    mtg:f32[200] = mul mtd a
    mth:f32[200] = add mtg mtf
    mti:f32[200] = sub b mth
    mtj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mtk:f32[] = div -2.0 mtj
    mtl:f32[200] = mul a mti
    mtm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mtk
    mtn:f32[200] = mul mtm mtl
    mto:f32[] = reduce_sum[axes=(0,)] mtn
    mtp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mtq:f32[] = div -2.0 mtp
    mtr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mtq
    mts:f32[200] = mul mtr mti
    mtt:f32[] = reduce_sum[axes=(0,)] mts
    mtu:f32[] = mul 0.0010000000474974513 mto
    mtv:f32[] = sub mtd mtu
    mtw:f32[] = mul 0.0010000000474974513 mtt
    mtx:f32[] = sub mtf mtw
    mty:f32[200] = mul mtv a
    mtz:f32[200] = add mty mtx
    mua:f32[200] = sub b mtz
    mub:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    muc:f32[] = div -2.0 mub
    mud:f32[200] = mul a mua
    mue:f32[] = convert_element_type[new_dtype=float32 weak_type=False] muc
    muf:f32[200] = mul mue mud
    mug:f32[] = reduce_sum[axes=(0,)] muf
    muh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mui:f32[] = div -2.0 muh
    muj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mui
    muk:f32[200] = mul muj mua
    mul:f32[] = reduce_sum[axes=(0,)] muk
    mum:f32[] = mul 0.0010000000474974513 mug
    mun:f32[] = sub mtv mum
    muo:f32[] = mul 0.0010000000474974513 mul
    mup:f32[] = sub mtx muo
    muq:f32[200] = mul mun a
    mur:f32[200] = add muq mup
    mus:f32[200] = sub b mur
    mut:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    muu:f32[] = div -2.0 mut
    muv:f32[200] = mul a mus
    muw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] muu
    mux:f32[200] = mul muw muv
    muy:f32[] = reduce_sum[axes=(0,)] mux
    muz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mva:f32[] = div -2.0 muz
    mvb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mva
    mvc:f32[200] = mul mvb mus
    mvd:f32[] = reduce_sum[axes=(0,)] mvc
    mve:f32[] = mul 0.0010000000474974513 muy
    mvf:f32[] = sub mun mve
    mvg:f32[] = mul 0.0010000000474974513 mvd
    mvh:f32[] = sub mup mvg
    mvi:f32[200] = mul mvf a
    mvj:f32[200] = add mvi mvh
    mvk:f32[200] = sub b mvj
    mvl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mvm:f32[] = div -2.0 mvl
    mvn:f32[200] = mul a mvk
    mvo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mvm
    mvp:f32[200] = mul mvo mvn
    mvq:f32[] = reduce_sum[axes=(0,)] mvp
    mvr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mvs:f32[] = div -2.0 mvr
    mvt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mvs
    mvu:f32[200] = mul mvt mvk
    mvv:f32[] = reduce_sum[axes=(0,)] mvu
    mvw:f32[] = mul 0.0010000000474974513 mvq
    mvx:f32[] = sub mvf mvw
    mvy:f32[] = mul 0.0010000000474974513 mvv
    mvz:f32[] = sub mvh mvy
    mwa:f32[200] = mul mvx a
    mwb:f32[200] = add mwa mvz
    mwc:f32[200] = sub b mwb
    mwd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mwe:f32[] = div -2.0 mwd
    mwf:f32[200] = mul a mwc
    mwg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mwe
    mwh:f32[200] = mul mwg mwf
    mwi:f32[] = reduce_sum[axes=(0,)] mwh
    mwj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mwk:f32[] = div -2.0 mwj
    mwl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mwk
    mwm:f32[200] = mul mwl mwc
    mwn:f32[] = reduce_sum[axes=(0,)] mwm
    mwo:f32[] = mul 0.0010000000474974513 mwi
    mwp:f32[] = sub mvx mwo
    mwq:f32[] = mul 0.0010000000474974513 mwn
    mwr:f32[] = sub mvz mwq
    mws:f32[200] = mul mwp a
    mwt:f32[200] = add mws mwr
    mwu:f32[200] = sub b mwt
    mwv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mww:f32[] = div -2.0 mwv
    mwx:f32[200] = mul a mwu
    mwy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mww
    mwz:f32[200] = mul mwy mwx
    mxa:f32[] = reduce_sum[axes=(0,)] mwz
    mxb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mxc:f32[] = div -2.0 mxb
    mxd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mxc
    mxe:f32[200] = mul mxd mwu
    mxf:f32[] = reduce_sum[axes=(0,)] mxe
    mxg:f32[] = mul 0.0010000000474974513 mxa
    mxh:f32[] = sub mwp mxg
    mxi:f32[] = mul 0.0010000000474974513 mxf
    mxj:f32[] = sub mwr mxi
    mxk:f32[200] = mul mxh a
    mxl:f32[200] = add mxk mxj
    mxm:f32[200] = sub b mxl
    mxn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mxo:f32[] = div -2.0 mxn
    mxp:f32[200] = mul a mxm
    mxq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mxo
    mxr:f32[200] = mul mxq mxp
    mxs:f32[] = reduce_sum[axes=(0,)] mxr
    mxt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mxu:f32[] = div -2.0 mxt
    mxv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mxu
    mxw:f32[200] = mul mxv mxm
    mxx:f32[] = reduce_sum[axes=(0,)] mxw
    mxy:f32[] = mul 0.0010000000474974513 mxs
    mxz:f32[] = sub mxh mxy
    mya:f32[] = mul 0.0010000000474974513 mxx
    myb:f32[] = sub mxj mya
    myc:f32[200] = mul mxz a
    myd:f32[200] = add myc myb
    mye:f32[200] = sub b myd
    myf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    myg:f32[] = div -2.0 myf
    myh:f32[200] = mul a mye
    myi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] myg
    myj:f32[200] = mul myi myh
    myk:f32[] = reduce_sum[axes=(0,)] myj
    myl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mym:f32[] = div -2.0 myl
    myn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mym
    myo:f32[200] = mul myn mye
    myp:f32[] = reduce_sum[axes=(0,)] myo
    myq:f32[] = mul 0.0010000000474974513 myk
    myr:f32[] = sub mxz myq
    mys:f32[] = mul 0.0010000000474974513 myp
    myt:f32[] = sub myb mys
    myu:f32[200] = mul myr a
    myv:f32[200] = add myu myt
    myw:f32[200] = sub b myv
    myx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    myy:f32[] = div -2.0 myx
    myz:f32[200] = mul a myw
    mza:f32[] = convert_element_type[new_dtype=float32 weak_type=False] myy
    mzb:f32[200] = mul mza myz
    mzc:f32[] = reduce_sum[axes=(0,)] mzb
    mzd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mze:f32[] = div -2.0 mzd
    mzf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mze
    mzg:f32[200] = mul mzf myw
    mzh:f32[] = reduce_sum[axes=(0,)] mzg
    mzi:f32[] = mul 0.0010000000474974513 mzc
    mzj:f32[] = sub myr mzi
    mzk:f32[] = mul 0.0010000000474974513 mzh
    mzl:f32[] = sub myt mzk
    mzm:f32[200] = mul mzj a
    mzn:f32[200] = add mzm mzl
    mzo:f32[200] = sub b mzn
    mzp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mzq:f32[] = div -2.0 mzp
    mzr:f32[200] = mul a mzo
    mzs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mzq
    mzt:f32[200] = mul mzs mzr
    mzu:f32[] = reduce_sum[axes=(0,)] mzt
    mzv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    mzw:f32[] = div -2.0 mzv
    mzx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] mzw
    mzy:f32[200] = mul mzx mzo
    mzz:f32[] = reduce_sum[axes=(0,)] mzy
    naa:f32[] = mul 0.0010000000474974513 mzu
    nab:f32[] = sub mzj naa
    nac:f32[] = mul 0.0010000000474974513 mzz
    nad:f32[] = sub mzl nac
    nae:f32[200] = mul nab a
    naf:f32[200] = add nae nad
    nag:f32[200] = sub b naf
    nah:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nai:f32[] = div -2.0 nah
    naj:f32[200] = mul a nag
    nak:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nai
    nal:f32[200] = mul nak naj
    nam:f32[] = reduce_sum[axes=(0,)] nal
    nan:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nao:f32[] = div -2.0 nan
    nap:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nao
    naq:f32[200] = mul nap nag
    nar:f32[] = reduce_sum[axes=(0,)] naq
    nas:f32[] = mul 0.0010000000474974513 nam
    nat:f32[] = sub nab nas
    nau:f32[] = mul 0.0010000000474974513 nar
    nav:f32[] = sub nad nau
    naw:f32[200] = mul nat a
    nax:f32[200] = add naw nav
    nay:f32[200] = sub b nax
    naz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nba:f32[] = div -2.0 naz
    nbb:f32[200] = mul a nay
    nbc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nba
    nbd:f32[200] = mul nbc nbb
    nbe:f32[] = reduce_sum[axes=(0,)] nbd
    nbf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nbg:f32[] = div -2.0 nbf
    nbh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nbg
    nbi:f32[200] = mul nbh nay
    nbj:f32[] = reduce_sum[axes=(0,)] nbi
    nbk:f32[] = mul 0.0010000000474974513 nbe
    nbl:f32[] = sub nat nbk
    nbm:f32[] = mul 0.0010000000474974513 nbj
    nbn:f32[] = sub nav nbm
    nbo:f32[200] = mul nbl a
    nbp:f32[200] = add nbo nbn
    nbq:f32[200] = sub b nbp
    nbr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nbs:f32[] = div -2.0 nbr
    nbt:f32[200] = mul a nbq
    nbu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nbs
    nbv:f32[200] = mul nbu nbt
    nbw:f32[] = reduce_sum[axes=(0,)] nbv
    nbx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nby:f32[] = div -2.0 nbx
    nbz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nby
    nca:f32[200] = mul nbz nbq
    ncb:f32[] = reduce_sum[axes=(0,)] nca
    ncc:f32[] = mul 0.0010000000474974513 nbw
    ncd:f32[] = sub nbl ncc
    nce:f32[] = mul 0.0010000000474974513 ncb
    ncf:f32[] = sub nbn nce
    ncg:f32[200] = mul ncd a
    nch:f32[200] = add ncg ncf
    nci:f32[200] = sub b nch
    ncj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nck:f32[] = div -2.0 ncj
    ncl:f32[200] = mul a nci
    ncm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nck
    ncn:f32[200] = mul ncm ncl
    nco:f32[] = reduce_sum[axes=(0,)] ncn
    ncp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ncq:f32[] = div -2.0 ncp
    ncr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ncq
    ncs:f32[200] = mul ncr nci
    nct:f32[] = reduce_sum[axes=(0,)] ncs
    ncu:f32[] = mul 0.0010000000474974513 nco
    ncv:f32[] = sub ncd ncu
    ncw:f32[] = mul 0.0010000000474974513 nct
    ncx:f32[] = sub ncf ncw
    ncy:f32[200] = mul ncv a
    ncz:f32[200] = add ncy ncx
    nda:f32[200] = sub b ncz
    ndb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ndc:f32[] = div -2.0 ndb
    ndd:f32[200] = mul a nda
    nde:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ndc
    ndf:f32[200] = mul nde ndd
    ndg:f32[] = reduce_sum[axes=(0,)] ndf
    ndh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ndi:f32[] = div -2.0 ndh
    ndj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ndi
    ndk:f32[200] = mul ndj nda
    ndl:f32[] = reduce_sum[axes=(0,)] ndk
    ndm:f32[] = mul 0.0010000000474974513 ndg
    ndn:f32[] = sub ncv ndm
    ndo:f32[] = mul 0.0010000000474974513 ndl
    ndp:f32[] = sub ncx ndo
    ndq:f32[200] = mul ndn a
    ndr:f32[200] = add ndq ndp
    nds:f32[200] = sub b ndr
    ndt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ndu:f32[] = div -2.0 ndt
    ndv:f32[200] = mul a nds
    ndw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ndu
    ndx:f32[200] = mul ndw ndv
    ndy:f32[] = reduce_sum[axes=(0,)] ndx
    ndz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nea:f32[] = div -2.0 ndz
    neb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nea
    nec:f32[200] = mul neb nds
    ned:f32[] = reduce_sum[axes=(0,)] nec
    nee:f32[] = mul 0.0010000000474974513 ndy
    nef:f32[] = sub ndn nee
    neg:f32[] = mul 0.0010000000474974513 ned
    neh:f32[] = sub ndp neg
    nei:f32[200] = mul nef a
    nej:f32[200] = add nei neh
    nek:f32[200] = sub b nej
    nel:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nem:f32[] = div -2.0 nel
    nen:f32[200] = mul a nek
    neo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nem
    nep:f32[200] = mul neo nen
    neq:f32[] = reduce_sum[axes=(0,)] nep
    ner:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nes:f32[] = div -2.0 ner
    net:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nes
    neu:f32[200] = mul net nek
    nev:f32[] = reduce_sum[axes=(0,)] neu
    new:f32[] = mul 0.0010000000474974513 neq
    nex:f32[] = sub nef new
    ney:f32[] = mul 0.0010000000474974513 nev
    nez:f32[] = sub neh ney
    nfa:f32[200] = mul nex a
    nfb:f32[200] = add nfa nez
    nfc:f32[200] = sub b nfb
    nfd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nfe:f32[] = div -2.0 nfd
    nff:f32[200] = mul a nfc
    nfg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nfe
    nfh:f32[200] = mul nfg nff
    nfi:f32[] = reduce_sum[axes=(0,)] nfh
    nfj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nfk:f32[] = div -2.0 nfj
    nfl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nfk
    nfm:f32[200] = mul nfl nfc
    nfn:f32[] = reduce_sum[axes=(0,)] nfm
    nfo:f32[] = mul 0.0010000000474974513 nfi
    nfp:f32[] = sub nex nfo
    nfq:f32[] = mul 0.0010000000474974513 nfn
    nfr:f32[] = sub nez nfq
    nfs:f32[200] = mul nfp a
    nft:f32[200] = add nfs nfr
    nfu:f32[200] = sub b nft
    nfv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nfw:f32[] = div -2.0 nfv
    nfx:f32[200] = mul a nfu
    nfy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nfw
    nfz:f32[200] = mul nfy nfx
    nga:f32[] = reduce_sum[axes=(0,)] nfz
    ngb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ngc:f32[] = div -2.0 ngb
    ngd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ngc
    nge:f32[200] = mul ngd nfu
    ngf:f32[] = reduce_sum[axes=(0,)] nge
    ngg:f32[] = mul 0.0010000000474974513 nga
    ngh:f32[] = sub nfp ngg
    ngi:f32[] = mul 0.0010000000474974513 ngf
    ngj:f32[] = sub nfr ngi
    ngk:f32[200] = mul ngh a
    ngl:f32[200] = add ngk ngj
    ngm:f32[200] = sub b ngl
    ngn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ngo:f32[] = div -2.0 ngn
    ngp:f32[200] = mul a ngm
    ngq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ngo
    ngr:f32[200] = mul ngq ngp
    ngs:f32[] = reduce_sum[axes=(0,)] ngr
    ngt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ngu:f32[] = div -2.0 ngt
    ngv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ngu
    ngw:f32[200] = mul ngv ngm
    ngx:f32[] = reduce_sum[axes=(0,)] ngw
    ngy:f32[] = mul 0.0010000000474974513 ngs
    ngz:f32[] = sub ngh ngy
    nha:f32[] = mul 0.0010000000474974513 ngx
    nhb:f32[] = sub ngj nha
    nhc:f32[200] = mul ngz a
    nhd:f32[200] = add nhc nhb
    nhe:f32[200] = sub b nhd
    nhf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nhg:f32[] = div -2.0 nhf
    nhh:f32[200] = mul a nhe
    nhi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nhg
    nhj:f32[200] = mul nhi nhh
    nhk:f32[] = reduce_sum[axes=(0,)] nhj
    nhl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nhm:f32[] = div -2.0 nhl
    nhn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nhm
    nho:f32[200] = mul nhn nhe
    nhp:f32[] = reduce_sum[axes=(0,)] nho
    nhq:f32[] = mul 0.0010000000474974513 nhk
    nhr:f32[] = sub ngz nhq
    nhs:f32[] = mul 0.0010000000474974513 nhp
    nht:f32[] = sub nhb nhs
    nhu:f32[200] = mul nhr a
    nhv:f32[200] = add nhu nht
    nhw:f32[200] = sub b nhv
    nhx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nhy:f32[] = div -2.0 nhx
    nhz:f32[200] = mul a nhw
    nia:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nhy
    nib:f32[200] = mul nia nhz
    nic:f32[] = reduce_sum[axes=(0,)] nib
    nid:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nie:f32[] = div -2.0 nid
    nif:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nie
    nig:f32[200] = mul nif nhw
    nih:f32[] = reduce_sum[axes=(0,)] nig
    nii:f32[] = mul 0.0010000000474974513 nic
    nij:f32[] = sub nhr nii
    nik:f32[] = mul 0.0010000000474974513 nih
    nil:f32[] = sub nht nik
    nim:f32[200] = mul nij a
    nin:f32[200] = add nim nil
    nio:f32[200] = sub b nin
    nip:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    niq:f32[] = div -2.0 nip
    nir:f32[200] = mul a nio
    nis:f32[] = convert_element_type[new_dtype=float32 weak_type=False] niq
    nit:f32[200] = mul nis nir
    niu:f32[] = reduce_sum[axes=(0,)] nit
    niv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    niw:f32[] = div -2.0 niv
    nix:f32[] = convert_element_type[new_dtype=float32 weak_type=False] niw
    niy:f32[200] = mul nix nio
    niz:f32[] = reduce_sum[axes=(0,)] niy
    nja:f32[] = mul 0.0010000000474974513 niu
    njb:f32[] = sub nij nja
    njc:f32[] = mul 0.0010000000474974513 niz
    njd:f32[] = sub nil njc
    nje:f32[200] = mul njb a
    njf:f32[200] = add nje njd
    njg:f32[200] = sub b njf
    njh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nji:f32[] = div -2.0 njh
    njj:f32[200] = mul a njg
    njk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nji
    njl:f32[200] = mul njk njj
    njm:f32[] = reduce_sum[axes=(0,)] njl
    njn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    njo:f32[] = div -2.0 njn
    njp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] njo
    njq:f32[200] = mul njp njg
    njr:f32[] = reduce_sum[axes=(0,)] njq
    njs:f32[] = mul 0.0010000000474974513 njm
    njt:f32[] = sub njb njs
    nju:f32[] = mul 0.0010000000474974513 njr
    njv:f32[] = sub njd nju
    njw:f32[200] = mul njt a
    njx:f32[200] = add njw njv
    njy:f32[200] = sub b njx
    njz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nka:f32[] = div -2.0 njz
    nkb:f32[200] = mul a njy
    nkc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nka
    nkd:f32[200] = mul nkc nkb
    nke:f32[] = reduce_sum[axes=(0,)] nkd
    nkf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nkg:f32[] = div -2.0 nkf
    nkh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nkg
    nki:f32[200] = mul nkh njy
    nkj:f32[] = reduce_sum[axes=(0,)] nki
    nkk:f32[] = mul 0.0010000000474974513 nke
    nkl:f32[] = sub njt nkk
    nkm:f32[] = mul 0.0010000000474974513 nkj
    nkn:f32[] = sub njv nkm
    nko:f32[200] = mul nkl a
    nkp:f32[200] = add nko nkn
    nkq:f32[200] = sub b nkp
    nkr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nks:f32[] = div -2.0 nkr
    nkt:f32[200] = mul a nkq
    nku:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nks
    nkv:f32[200] = mul nku nkt
    nkw:f32[] = reduce_sum[axes=(0,)] nkv
    nkx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nky:f32[] = div -2.0 nkx
    nkz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nky
    nla:f32[200] = mul nkz nkq
    nlb:f32[] = reduce_sum[axes=(0,)] nla
    nlc:f32[] = mul 0.0010000000474974513 nkw
    nld:f32[] = sub nkl nlc
    nle:f32[] = mul 0.0010000000474974513 nlb
    nlf:f32[] = sub nkn nle
    nlg:f32[200] = mul nld a
    nlh:f32[200] = add nlg nlf
    nli:f32[200] = sub b nlh
    nlj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nlk:f32[] = div -2.0 nlj
    nll:f32[200] = mul a nli
    nlm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nlk
    nln:f32[200] = mul nlm nll
    nlo:f32[] = reduce_sum[axes=(0,)] nln
    nlp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nlq:f32[] = div -2.0 nlp
    nlr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nlq
    nls:f32[200] = mul nlr nli
    nlt:f32[] = reduce_sum[axes=(0,)] nls
    nlu:f32[] = mul 0.0010000000474974513 nlo
    nlv:f32[] = sub nld nlu
    nlw:f32[] = mul 0.0010000000474974513 nlt
    nlx:f32[] = sub nlf nlw
    nly:f32[200] = mul nlv a
    nlz:f32[200] = add nly nlx
    nma:f32[200] = sub b nlz
    nmb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nmc:f32[] = div -2.0 nmb
    nmd:f32[200] = mul a nma
    nme:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nmc
    nmf:f32[200] = mul nme nmd
    nmg:f32[] = reduce_sum[axes=(0,)] nmf
    nmh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nmi:f32[] = div -2.0 nmh
    nmj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nmi
    nmk:f32[200] = mul nmj nma
    nml:f32[] = reduce_sum[axes=(0,)] nmk
    nmm:f32[] = mul 0.0010000000474974513 nmg
    nmn:f32[] = sub nlv nmm
    nmo:f32[] = mul 0.0010000000474974513 nml
    nmp:f32[] = sub nlx nmo
    nmq:f32[200] = mul nmn a
    nmr:f32[200] = add nmq nmp
    nms:f32[200] = sub b nmr
    nmt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nmu:f32[] = div -2.0 nmt
    nmv:f32[200] = mul a nms
    nmw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nmu
    nmx:f32[200] = mul nmw nmv
    nmy:f32[] = reduce_sum[axes=(0,)] nmx
    nmz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nna:f32[] = div -2.0 nmz
    nnb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nna
    nnc:f32[200] = mul nnb nms
    nnd:f32[] = reduce_sum[axes=(0,)] nnc
    nne:f32[] = mul 0.0010000000474974513 nmy
    nnf:f32[] = sub nmn nne
    nng:f32[] = mul 0.0010000000474974513 nnd
    nnh:f32[] = sub nmp nng
    nni:f32[200] = mul nnf a
    nnj:f32[200] = add nni nnh
    nnk:f32[200] = sub b nnj
    nnl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nnm:f32[] = div -2.0 nnl
    nnn:f32[200] = mul a nnk
    nno:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nnm
    nnp:f32[200] = mul nno nnn
    nnq:f32[] = reduce_sum[axes=(0,)] nnp
    nnr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nns:f32[] = div -2.0 nnr
    nnt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nns
    nnu:f32[200] = mul nnt nnk
    nnv:f32[] = reduce_sum[axes=(0,)] nnu
    nnw:f32[] = mul 0.0010000000474974513 nnq
    nnx:f32[] = sub nnf nnw
    nny:f32[] = mul 0.0010000000474974513 nnv
    nnz:f32[] = sub nnh nny
    noa:f32[200] = mul nnx a
    nob:f32[200] = add noa nnz
    noc:f32[200] = sub b nob
    nod:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    noe:f32[] = div -2.0 nod
    nof:f32[200] = mul a noc
    nog:f32[] = convert_element_type[new_dtype=float32 weak_type=False] noe
    noh:f32[200] = mul nog nof
    noi:f32[] = reduce_sum[axes=(0,)] noh
    noj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nok:f32[] = div -2.0 noj
    nol:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nok
    nom:f32[200] = mul nol noc
    non:f32[] = reduce_sum[axes=(0,)] nom
    noo:f32[] = mul 0.0010000000474974513 noi
    nop:f32[] = sub nnx noo
    noq:f32[] = mul 0.0010000000474974513 non
    nor:f32[] = sub nnz noq
    nos:f32[200] = mul nop a
    not:f32[200] = add nos nor
    nou:f32[200] = sub b not
    nov:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    now:f32[] = div -2.0 nov
    nox:f32[200] = mul a nou
    noy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] now
    noz:f32[200] = mul noy nox
    npa:f32[] = reduce_sum[axes=(0,)] noz
    npb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    npc:f32[] = div -2.0 npb
    npd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] npc
    npe:f32[200] = mul npd nou
    npf:f32[] = reduce_sum[axes=(0,)] npe
    npg:f32[] = mul 0.0010000000474974513 npa
    nph:f32[] = sub nop npg
    npi:f32[] = mul 0.0010000000474974513 npf
    npj:f32[] = sub nor npi
    npk:f32[200] = mul nph a
    npl:f32[200] = add npk npj
    npm:f32[200] = sub b npl
    npn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    npo:f32[] = div -2.0 npn
    npp:f32[200] = mul a npm
    npq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] npo
    npr:f32[200] = mul npq npp
    nps:f32[] = reduce_sum[axes=(0,)] npr
    npt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    npu:f32[] = div -2.0 npt
    npv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] npu
    npw:f32[200] = mul npv npm
    npx:f32[] = reduce_sum[axes=(0,)] npw
    npy:f32[] = mul 0.0010000000474974513 nps
    npz:f32[] = sub nph npy
    nqa:f32[] = mul 0.0010000000474974513 npx
    nqb:f32[] = sub npj nqa
    nqc:f32[200] = mul npz a
    nqd:f32[200] = add nqc nqb
    nqe:f32[200] = sub b nqd
    nqf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nqg:f32[] = div -2.0 nqf
    nqh:f32[200] = mul a nqe
    nqi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nqg
    nqj:f32[200] = mul nqi nqh
    nqk:f32[] = reduce_sum[axes=(0,)] nqj
    nql:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nqm:f32[] = div -2.0 nql
    nqn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nqm
    nqo:f32[200] = mul nqn nqe
    nqp:f32[] = reduce_sum[axes=(0,)] nqo
    nqq:f32[] = mul 0.0010000000474974513 nqk
    nqr:f32[] = sub npz nqq
    nqs:f32[] = mul 0.0010000000474974513 nqp
    nqt:f32[] = sub nqb nqs
    nqu:f32[200] = mul nqr a
    nqv:f32[200] = add nqu nqt
    nqw:f32[200] = sub b nqv
    nqx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nqy:f32[] = div -2.0 nqx
    nqz:f32[200] = mul a nqw
    nra:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nqy
    nrb:f32[200] = mul nra nqz
    nrc:f32[] = reduce_sum[axes=(0,)] nrb
    nrd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nre:f32[] = div -2.0 nrd
    nrf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nre
    nrg:f32[200] = mul nrf nqw
    nrh:f32[] = reduce_sum[axes=(0,)] nrg
    nri:f32[] = mul 0.0010000000474974513 nrc
    nrj:f32[] = sub nqr nri
    nrk:f32[] = mul 0.0010000000474974513 nrh
    nrl:f32[] = sub nqt nrk
    nrm:f32[200] = mul nrj a
    nrn:f32[200] = add nrm nrl
    nro:f32[200] = sub b nrn
    nrp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nrq:f32[] = div -2.0 nrp
    nrr:f32[200] = mul a nro
    nrs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nrq
    nrt:f32[200] = mul nrs nrr
    nru:f32[] = reduce_sum[axes=(0,)] nrt
    nrv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nrw:f32[] = div -2.0 nrv
    nrx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nrw
    nry:f32[200] = mul nrx nro
    nrz:f32[] = reduce_sum[axes=(0,)] nry
    nsa:f32[] = mul 0.0010000000474974513 nru
    nsb:f32[] = sub nrj nsa
    nsc:f32[] = mul 0.0010000000474974513 nrz
    nsd:f32[] = sub nrl nsc
    nse:f32[200] = mul nsb a
    nsf:f32[200] = add nse nsd
    nsg:f32[200] = sub b nsf
    nsh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nsi:f32[] = div -2.0 nsh
    nsj:f32[200] = mul a nsg
    nsk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nsi
    nsl:f32[200] = mul nsk nsj
    nsm:f32[] = reduce_sum[axes=(0,)] nsl
    nsn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nso:f32[] = div -2.0 nsn
    nsp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nso
    nsq:f32[200] = mul nsp nsg
    nsr:f32[] = reduce_sum[axes=(0,)] nsq
    nss:f32[] = mul 0.0010000000474974513 nsm
    nst:f32[] = sub nsb nss
    nsu:f32[] = mul 0.0010000000474974513 nsr
    nsv:f32[] = sub nsd nsu
    nsw:f32[200] = mul nst a
    nsx:f32[200] = add nsw nsv
    nsy:f32[200] = sub b nsx
    nsz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nta:f32[] = div -2.0 nsz
    ntb:f32[200] = mul a nsy
    ntc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nta
    ntd:f32[200] = mul ntc ntb
    nte:f32[] = reduce_sum[axes=(0,)] ntd
    ntf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ntg:f32[] = div -2.0 ntf
    nth:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ntg
    nti:f32[200] = mul nth nsy
    ntj:f32[] = reduce_sum[axes=(0,)] nti
    ntk:f32[] = mul 0.0010000000474974513 nte
    ntl:f32[] = sub nst ntk
    ntm:f32[] = mul 0.0010000000474974513 ntj
    ntn:f32[] = sub nsv ntm
    nto:f32[200] = mul ntl a
    ntp:f32[200] = add nto ntn
    ntq:f32[200] = sub b ntp
    ntr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nts:f32[] = div -2.0 ntr
    ntt:f32[200] = mul a ntq
    ntu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nts
    ntv:f32[200] = mul ntu ntt
    ntw:f32[] = reduce_sum[axes=(0,)] ntv
    ntx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nty:f32[] = div -2.0 ntx
    ntz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nty
    nua:f32[200] = mul ntz ntq
    nub:f32[] = reduce_sum[axes=(0,)] nua
    nuc:f32[] = mul 0.0010000000474974513 ntw
    nud:f32[] = sub ntl nuc
    nue:f32[] = mul 0.0010000000474974513 nub
    nuf:f32[] = sub ntn nue
    nug:f32[200] = mul nud a
    nuh:f32[200] = add nug nuf
    nui:f32[200] = sub b nuh
    nuj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nuk:f32[] = div -2.0 nuj
    nul:f32[200] = mul a nui
    num:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nuk
    nun:f32[200] = mul num nul
    nuo:f32[] = reduce_sum[axes=(0,)] nun
    nup:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nuq:f32[] = div -2.0 nup
    nur:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nuq
    nus:f32[200] = mul nur nui
    nut:f32[] = reduce_sum[axes=(0,)] nus
    nuu:f32[] = mul 0.0010000000474974513 nuo
    nuv:f32[] = sub nud nuu
    nuw:f32[] = mul 0.0010000000474974513 nut
    nux:f32[] = sub nuf nuw
    nuy:f32[200] = mul nuv a
    nuz:f32[200] = add nuy nux
    nva:f32[200] = sub b nuz
    nvb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nvc:f32[] = div -2.0 nvb
    nvd:f32[200] = mul a nva
    nve:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nvc
    nvf:f32[200] = mul nve nvd
    nvg:f32[] = reduce_sum[axes=(0,)] nvf
    nvh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nvi:f32[] = div -2.0 nvh
    nvj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nvi
    nvk:f32[200] = mul nvj nva
    nvl:f32[] = reduce_sum[axes=(0,)] nvk
    nvm:f32[] = mul 0.0010000000474974513 nvg
    nvn:f32[] = sub nuv nvm
    nvo:f32[] = mul 0.0010000000474974513 nvl
    nvp:f32[] = sub nux nvo
    nvq:f32[200] = mul nvn a
    nvr:f32[200] = add nvq nvp
    nvs:f32[200] = sub b nvr
    nvt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nvu:f32[] = div -2.0 nvt
    nvv:f32[200] = mul a nvs
    nvw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nvu
    nvx:f32[200] = mul nvw nvv
    nvy:f32[] = reduce_sum[axes=(0,)] nvx
    nvz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nwa:f32[] = div -2.0 nvz
    nwb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nwa
    nwc:f32[200] = mul nwb nvs
    nwd:f32[] = reduce_sum[axes=(0,)] nwc
    nwe:f32[] = mul 0.0010000000474974513 nvy
    nwf:f32[] = sub nvn nwe
    nwg:f32[] = mul 0.0010000000474974513 nwd
    nwh:f32[] = sub nvp nwg
    nwi:f32[200] = mul nwf a
    nwj:f32[200] = add nwi nwh
    nwk:f32[200] = sub b nwj
    nwl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nwm:f32[] = div -2.0 nwl
    nwn:f32[200] = mul a nwk
    nwo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nwm
    nwp:f32[200] = mul nwo nwn
    nwq:f32[] = reduce_sum[axes=(0,)] nwp
    nwr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nws:f32[] = div -2.0 nwr
    nwt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nws
    nwu:f32[200] = mul nwt nwk
    nwv:f32[] = reduce_sum[axes=(0,)] nwu
    nww:f32[] = mul 0.0010000000474974513 nwq
    nwx:f32[] = sub nwf nww
    nwy:f32[] = mul 0.0010000000474974513 nwv
    nwz:f32[] = sub nwh nwy
    nxa:f32[200] = mul nwx a
    nxb:f32[200] = add nxa nwz
    nxc:f32[200] = sub b nxb
    nxd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nxe:f32[] = div -2.0 nxd
    nxf:f32[200] = mul a nxc
    nxg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nxe
    nxh:f32[200] = mul nxg nxf
    nxi:f32[] = reduce_sum[axes=(0,)] nxh
    nxj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nxk:f32[] = div -2.0 nxj
    nxl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nxk
    nxm:f32[200] = mul nxl nxc
    nxn:f32[] = reduce_sum[axes=(0,)] nxm
    nxo:f32[] = mul 0.0010000000474974513 nxi
    nxp:f32[] = sub nwx nxo
    nxq:f32[] = mul 0.0010000000474974513 nxn
    nxr:f32[] = sub nwz nxq
    nxs:f32[200] = mul nxp a
    nxt:f32[200] = add nxs nxr
    nxu:f32[200] = sub b nxt
    nxv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nxw:f32[] = div -2.0 nxv
    nxx:f32[200] = mul a nxu
    nxy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nxw
    nxz:f32[200] = mul nxy nxx
    nya:f32[] = reduce_sum[axes=(0,)] nxz
    nyb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nyc:f32[] = div -2.0 nyb
    nyd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nyc
    nye:f32[200] = mul nyd nxu
    nyf:f32[] = reduce_sum[axes=(0,)] nye
    nyg:f32[] = mul 0.0010000000474974513 nya
    nyh:f32[] = sub nxp nyg
    nyi:f32[] = mul 0.0010000000474974513 nyf
    nyj:f32[] = sub nxr nyi
    nyk:f32[200] = mul nyh a
    nyl:f32[200] = add nyk nyj
    nym:f32[200] = sub b nyl
    nyn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nyo:f32[] = div -2.0 nyn
    nyp:f32[200] = mul a nym
    nyq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nyo
    nyr:f32[200] = mul nyq nyp
    nys:f32[] = reduce_sum[axes=(0,)] nyr
    nyt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nyu:f32[] = div -2.0 nyt
    nyv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nyu
    nyw:f32[200] = mul nyv nym
    nyx:f32[] = reduce_sum[axes=(0,)] nyw
    nyy:f32[] = mul 0.0010000000474974513 nys
    nyz:f32[] = sub nyh nyy
    nza:f32[] = mul 0.0010000000474974513 nyx
    nzb:f32[] = sub nyj nza
    nzc:f32[200] = mul nyz a
    nzd:f32[200] = add nzc nzb
    nze:f32[200] = sub b nzd
    nzf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nzg:f32[] = div -2.0 nzf
    nzh:f32[200] = mul a nze
    nzi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nzg
    nzj:f32[200] = mul nzi nzh
    nzk:f32[] = reduce_sum[axes=(0,)] nzj
    nzl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nzm:f32[] = div -2.0 nzl
    nzn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nzm
    nzo:f32[200] = mul nzn nze
    nzp:f32[] = reduce_sum[axes=(0,)] nzo
    nzq:f32[] = mul 0.0010000000474974513 nzk
    nzr:f32[] = sub nyz nzq
    nzs:f32[] = mul 0.0010000000474974513 nzp
    nzt:f32[] = sub nzb nzs
    nzu:f32[200] = mul nzr a
    nzv:f32[200] = add nzu nzt
    nzw:f32[200] = sub b nzv
    nzx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    nzy:f32[] = div -2.0 nzx
    nzz:f32[200] = mul a nzw
    oaa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] nzy
    oab:f32[200] = mul oaa nzz
    oac:f32[] = reduce_sum[axes=(0,)] oab
    oad:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oae:f32[] = div -2.0 oad
    oaf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oae
    oag:f32[200] = mul oaf nzw
    oah:f32[] = reduce_sum[axes=(0,)] oag
    oai:f32[] = mul 0.0010000000474974513 oac
    oaj:f32[] = sub nzr oai
    oak:f32[] = mul 0.0010000000474974513 oah
    oal:f32[] = sub nzt oak
    oam:f32[200] = mul oaj a
    oan:f32[200] = add oam oal
    oao:f32[200] = sub b oan
    oap:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oaq:f32[] = div -2.0 oap
    oar:f32[200] = mul a oao
    oas:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oaq
    oat:f32[200] = mul oas oar
    oau:f32[] = reduce_sum[axes=(0,)] oat
    oav:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oaw:f32[] = div -2.0 oav
    oax:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oaw
    oay:f32[200] = mul oax oao
    oaz:f32[] = reduce_sum[axes=(0,)] oay
    oba:f32[] = mul 0.0010000000474974513 oau
    obb:f32[] = sub oaj oba
    obc:f32[] = mul 0.0010000000474974513 oaz
    obd:f32[] = sub oal obc
    obe:f32[200] = mul obb a
    obf:f32[200] = add obe obd
    obg:f32[200] = sub b obf
    obh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    obi:f32[] = div -2.0 obh
    obj:f32[200] = mul a obg
    obk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] obi
    obl:f32[200] = mul obk obj
    obm:f32[] = reduce_sum[axes=(0,)] obl
    obn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    obo:f32[] = div -2.0 obn
    obp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] obo
    obq:f32[200] = mul obp obg
    obr:f32[] = reduce_sum[axes=(0,)] obq
    obs:f32[] = mul 0.0010000000474974513 obm
    obt:f32[] = sub obb obs
    obu:f32[] = mul 0.0010000000474974513 obr
    obv:f32[] = sub obd obu
    obw:f32[200] = mul obt a
    obx:f32[200] = add obw obv
    oby:f32[200] = sub b obx
    obz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oca:f32[] = div -2.0 obz
    ocb:f32[200] = mul a oby
    occ:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oca
    ocd:f32[200] = mul occ ocb
    oce:f32[] = reduce_sum[axes=(0,)] ocd
    ocf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ocg:f32[] = div -2.0 ocf
    och:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ocg
    oci:f32[200] = mul och oby
    ocj:f32[] = reduce_sum[axes=(0,)] oci
    ock:f32[] = mul 0.0010000000474974513 oce
    ocl:f32[] = sub obt ock
    ocm:f32[] = mul 0.0010000000474974513 ocj
    ocn:f32[] = sub obv ocm
    oco:f32[200] = mul ocl a
    ocp:f32[200] = add oco ocn
    ocq:f32[200] = sub b ocp
    ocr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ocs:f32[] = div -2.0 ocr
    oct:f32[200] = mul a ocq
    ocu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ocs
    ocv:f32[200] = mul ocu oct
    ocw:f32[] = reduce_sum[axes=(0,)] ocv
    ocx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ocy:f32[] = div -2.0 ocx
    ocz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ocy
    oda:f32[200] = mul ocz ocq
    odb:f32[] = reduce_sum[axes=(0,)] oda
    odc:f32[] = mul 0.0010000000474974513 ocw
    odd:f32[] = sub ocl odc
    ode:f32[] = mul 0.0010000000474974513 odb
    odf:f32[] = sub ocn ode
    odg:f32[200] = mul odd a
    odh:f32[200] = add odg odf
    odi:f32[200] = sub b odh
    odj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    odk:f32[] = div -2.0 odj
    odl:f32[200] = mul a odi
    odm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] odk
    odn:f32[200] = mul odm odl
    odo:f32[] = reduce_sum[axes=(0,)] odn
    odp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    odq:f32[] = div -2.0 odp
    odr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] odq
    ods:f32[200] = mul odr odi
    odt:f32[] = reduce_sum[axes=(0,)] ods
    odu:f32[] = mul 0.0010000000474974513 odo
    odv:f32[] = sub odd odu
    odw:f32[] = mul 0.0010000000474974513 odt
    odx:f32[] = sub odf odw
    ody:f32[200] = mul odv a
    odz:f32[200] = add ody odx
    oea:f32[200] = sub b odz
    oeb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oec:f32[] = div -2.0 oeb
    oed:f32[200] = mul a oea
    oee:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oec
    oef:f32[200] = mul oee oed
    oeg:f32[] = reduce_sum[axes=(0,)] oef
    oeh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oei:f32[] = div -2.0 oeh
    oej:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oei
    oek:f32[200] = mul oej oea
    oel:f32[] = reduce_sum[axes=(0,)] oek
    oem:f32[] = mul 0.0010000000474974513 oeg
    oen:f32[] = sub odv oem
    oeo:f32[] = mul 0.0010000000474974513 oel
    oep:f32[] = sub odx oeo
    oeq:f32[200] = mul oen a
    oer:f32[200] = add oeq oep
    oes:f32[200] = sub b oer
    oet:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oeu:f32[] = div -2.0 oet
    oev:f32[200] = mul a oes
    oew:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oeu
    oex:f32[200] = mul oew oev
    oey:f32[] = reduce_sum[axes=(0,)] oex
    oez:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ofa:f32[] = div -2.0 oez
    ofb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ofa
    ofc:f32[200] = mul ofb oes
    ofd:f32[] = reduce_sum[axes=(0,)] ofc
    ofe:f32[] = mul 0.0010000000474974513 oey
    off:f32[] = sub oen ofe
    ofg:f32[] = mul 0.0010000000474974513 ofd
    ofh:f32[] = sub oep ofg
    ofi:f32[200] = mul off a
    ofj:f32[200] = add ofi ofh
    ofk:f32[200] = sub b ofj
    ofl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ofm:f32[] = div -2.0 ofl
    ofn:f32[200] = mul a ofk
    ofo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ofm
    ofp:f32[200] = mul ofo ofn
    ofq:f32[] = reduce_sum[axes=(0,)] ofp
    ofr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ofs:f32[] = div -2.0 ofr
    oft:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ofs
    ofu:f32[200] = mul oft ofk
    ofv:f32[] = reduce_sum[axes=(0,)] ofu
    ofw:f32[] = mul 0.0010000000474974513 ofq
    ofx:f32[] = sub off ofw
    ofy:f32[] = mul 0.0010000000474974513 ofv
    ofz:f32[] = sub ofh ofy
    oga:f32[200] = mul ofx a
    ogb:f32[200] = add oga ofz
    ogc:f32[200] = sub b ogb
    ogd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oge:f32[] = div -2.0 ogd
    ogf:f32[200] = mul a ogc
    ogg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oge
    ogh:f32[200] = mul ogg ogf
    ogi:f32[] = reduce_sum[axes=(0,)] ogh
    ogj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ogk:f32[] = div -2.0 ogj
    ogl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ogk
    ogm:f32[200] = mul ogl ogc
    ogn:f32[] = reduce_sum[axes=(0,)] ogm
    ogo:f32[] = mul 0.0010000000474974513 ogi
    ogp:f32[] = sub ofx ogo
    ogq:f32[] = mul 0.0010000000474974513 ogn
    ogr:f32[] = sub ofz ogq
    ogs:f32[200] = mul ogp a
    ogt:f32[200] = add ogs ogr
    ogu:f32[200] = sub b ogt
    ogv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ogw:f32[] = div -2.0 ogv
    ogx:f32[200] = mul a ogu
    ogy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ogw
    ogz:f32[200] = mul ogy ogx
    oha:f32[] = reduce_sum[axes=(0,)] ogz
    ohb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ohc:f32[] = div -2.0 ohb
    ohd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ohc
    ohe:f32[200] = mul ohd ogu
    ohf:f32[] = reduce_sum[axes=(0,)] ohe
    ohg:f32[] = mul 0.0010000000474974513 oha
    ohh:f32[] = sub ogp ohg
    ohi:f32[] = mul 0.0010000000474974513 ohf
    ohj:f32[] = sub ogr ohi
    ohk:f32[200] = mul ohh a
    ohl:f32[200] = add ohk ohj
    ohm:f32[200] = sub b ohl
    ohn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oho:f32[] = div -2.0 ohn
    ohp:f32[200] = mul a ohm
    ohq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oho
    ohr:f32[200] = mul ohq ohp
    ohs:f32[] = reduce_sum[axes=(0,)] ohr
    oht:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ohu:f32[] = div -2.0 oht
    ohv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ohu
    ohw:f32[200] = mul ohv ohm
    ohx:f32[] = reduce_sum[axes=(0,)] ohw
    ohy:f32[] = mul 0.0010000000474974513 ohs
    ohz:f32[] = sub ohh ohy
    oia:f32[] = mul 0.0010000000474974513 ohx
    oib:f32[] = sub ohj oia
    oic:f32[200] = mul ohz a
    oid:f32[200] = add oic oib
    oie:f32[200] = sub b oid
    oif:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oig:f32[] = div -2.0 oif
    oih:f32[200] = mul a oie
    oii:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oig
    oij:f32[200] = mul oii oih
    oik:f32[] = reduce_sum[axes=(0,)] oij
    oil:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oim:f32[] = div -2.0 oil
    oin:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oim
    oio:f32[200] = mul oin oie
    oip:f32[] = reduce_sum[axes=(0,)] oio
    oiq:f32[] = mul 0.0010000000474974513 oik
    oir:f32[] = sub ohz oiq
    ois:f32[] = mul 0.0010000000474974513 oip
    oit:f32[] = sub oib ois
    oiu:f32[200] = mul oir a
    oiv:f32[200] = add oiu oit
    oiw:f32[200] = sub b oiv
    oix:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oiy:f32[] = div -2.0 oix
    oiz:f32[200] = mul a oiw
    oja:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oiy
    ojb:f32[200] = mul oja oiz
    ojc:f32[] = reduce_sum[axes=(0,)] ojb
    ojd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oje:f32[] = div -2.0 ojd
    ojf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oje
    ojg:f32[200] = mul ojf oiw
    ojh:f32[] = reduce_sum[axes=(0,)] ojg
    oji:f32[] = mul 0.0010000000474974513 ojc
    ojj:f32[] = sub oir oji
    ojk:f32[] = mul 0.0010000000474974513 ojh
    ojl:f32[] = sub oit ojk
    ojm:f32[200] = mul ojj a
    ojn:f32[200] = add ojm ojl
    ojo:f32[200] = sub b ojn
    ojp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ojq:f32[] = div -2.0 ojp
    ojr:f32[200] = mul a ojo
    ojs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ojq
    ojt:f32[200] = mul ojs ojr
    oju:f32[] = reduce_sum[axes=(0,)] ojt
    ojv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ojw:f32[] = div -2.0 ojv
    ojx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ojw
    ojy:f32[200] = mul ojx ojo
    ojz:f32[] = reduce_sum[axes=(0,)] ojy
    oka:f32[] = mul 0.0010000000474974513 oju
    okb:f32[] = sub ojj oka
    okc:f32[] = mul 0.0010000000474974513 ojz
    okd:f32[] = sub ojl okc
    oke:f32[200] = mul okb a
    okf:f32[200] = add oke okd
    okg:f32[200] = sub b okf
    okh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oki:f32[] = div -2.0 okh
    okj:f32[200] = mul a okg
    okk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oki
    okl:f32[200] = mul okk okj
    okm:f32[] = reduce_sum[axes=(0,)] okl
    okn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oko:f32[] = div -2.0 okn
    okp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oko
    okq:f32[200] = mul okp okg
    okr:f32[] = reduce_sum[axes=(0,)] okq
    oks:f32[] = mul 0.0010000000474974513 okm
    okt:f32[] = sub okb oks
    oku:f32[] = mul 0.0010000000474974513 okr
    okv:f32[] = sub okd oku
    okw:f32[200] = mul okt a
    okx:f32[200] = add okw okv
    oky:f32[200] = sub b okx
    okz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ola:f32[] = div -2.0 okz
    olb:f32[200] = mul a oky
    olc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ola
    old:f32[200] = mul olc olb
    ole:f32[] = reduce_sum[axes=(0,)] old
    olf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    olg:f32[] = div -2.0 olf
    olh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] olg
    oli:f32[200] = mul olh oky
    olj:f32[] = reduce_sum[axes=(0,)] oli
    olk:f32[] = mul 0.0010000000474974513 ole
    oll:f32[] = sub okt olk
    olm:f32[] = mul 0.0010000000474974513 olj
    oln:f32[] = sub okv olm
    olo:f32[200] = mul oll a
    olp:f32[200] = add olo oln
    olq:f32[200] = sub b olp
    olr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ols:f32[] = div -2.0 olr
    olt:f32[200] = mul a olq
    olu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ols
    olv:f32[200] = mul olu olt
    olw:f32[] = reduce_sum[axes=(0,)] olv
    olx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oly:f32[] = div -2.0 olx
    olz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oly
    oma:f32[200] = mul olz olq
    omb:f32[] = reduce_sum[axes=(0,)] oma
    omc:f32[] = mul 0.0010000000474974513 olw
    omd:f32[] = sub oll omc
    ome:f32[] = mul 0.0010000000474974513 omb
    omf:f32[] = sub oln ome
    omg:f32[200] = mul omd a
    omh:f32[200] = add omg omf
    omi:f32[200] = sub b omh
    omj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    omk:f32[] = div -2.0 omj
    oml:f32[200] = mul a omi
    omm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] omk
    omn:f32[200] = mul omm oml
    omo:f32[] = reduce_sum[axes=(0,)] omn
    omp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    omq:f32[] = div -2.0 omp
    omr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] omq
    oms:f32[200] = mul omr omi
    omt:f32[] = reduce_sum[axes=(0,)] oms
    omu:f32[] = mul 0.0010000000474974513 omo
    omv:f32[] = sub omd omu
    omw:f32[] = mul 0.0010000000474974513 omt
    omx:f32[] = sub omf omw
    omy:f32[200] = mul omv a
    omz:f32[200] = add omy omx
    ona:f32[200] = sub b omz
    onb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    onc:f32[] = div -2.0 onb
    ond:f32[200] = mul a ona
    one:f32[] = convert_element_type[new_dtype=float32 weak_type=False] onc
    onf:f32[200] = mul one ond
    ong:f32[] = reduce_sum[axes=(0,)] onf
    onh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oni:f32[] = div -2.0 onh
    onj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oni
    onk:f32[200] = mul onj ona
    onl:f32[] = reduce_sum[axes=(0,)] onk
    onm:f32[] = mul 0.0010000000474974513 ong
    onn:f32[] = sub omv onm
    ono:f32[] = mul 0.0010000000474974513 onl
    onp:f32[] = sub omx ono
    onq:f32[200] = mul onn a
    onr:f32[200] = add onq onp
    ons:f32[200] = sub b onr
    ont:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    onu:f32[] = div -2.0 ont
    onv:f32[200] = mul a ons
    onw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] onu
    onx:f32[200] = mul onw onv
    ony:f32[] = reduce_sum[axes=(0,)] onx
    onz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ooa:f32[] = div -2.0 onz
    oob:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ooa
    ooc:f32[200] = mul oob ons
    ood:f32[] = reduce_sum[axes=(0,)] ooc
    ooe:f32[] = mul 0.0010000000474974513 ony
    oof:f32[] = sub onn ooe
    oog:f32[] = mul 0.0010000000474974513 ood
    ooh:f32[] = sub onp oog
    ooi:f32[200] = mul oof a
    ooj:f32[200] = add ooi ooh
    ook:f32[200] = sub b ooj
    ool:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oom:f32[] = div -2.0 ool
    oon:f32[200] = mul a ook
    ooo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oom
    oop:f32[200] = mul ooo oon
    ooq:f32[] = reduce_sum[axes=(0,)] oop
    oor:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oos:f32[] = div -2.0 oor
    oot:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oos
    oou:f32[200] = mul oot ook
    oov:f32[] = reduce_sum[axes=(0,)] oou
    oow:f32[] = mul 0.0010000000474974513 ooq
    oox:f32[] = sub oof oow
    ooy:f32[] = mul 0.0010000000474974513 oov
    ooz:f32[] = sub ooh ooy
    opa:f32[200] = mul oox a
    opb:f32[200] = add opa ooz
    opc:f32[200] = sub b opb
    opd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ope:f32[] = div -2.0 opd
    opf:f32[200] = mul a opc
    opg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ope
    oph:f32[200] = mul opg opf
    opi:f32[] = reduce_sum[axes=(0,)] oph
    opj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    opk:f32[] = div -2.0 opj
    opl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] opk
    opm:f32[200] = mul opl opc
    opn:f32[] = reduce_sum[axes=(0,)] opm
    opo:f32[] = mul 0.0010000000474974513 opi
    opp:f32[] = sub oox opo
    opq:f32[] = mul 0.0010000000474974513 opn
    opr:f32[] = sub ooz opq
    ops:f32[200] = mul opp a
    opt:f32[200] = add ops opr
    opu:f32[200] = sub b opt
    opv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    opw:f32[] = div -2.0 opv
    opx:f32[200] = mul a opu
    opy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] opw
    opz:f32[200] = mul opy opx
    oqa:f32[] = reduce_sum[axes=(0,)] opz
    oqb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oqc:f32[] = div -2.0 oqb
    oqd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oqc
    oqe:f32[200] = mul oqd opu
    oqf:f32[] = reduce_sum[axes=(0,)] oqe
    oqg:f32[] = mul 0.0010000000474974513 oqa
    oqh:f32[] = sub opp oqg
    oqi:f32[] = mul 0.0010000000474974513 oqf
    oqj:f32[] = sub opr oqi
    oqk:f32[200] = mul oqh a
    oql:f32[200] = add oqk oqj
    oqm:f32[200] = sub b oql
    oqn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oqo:f32[] = div -2.0 oqn
    oqp:f32[200] = mul a oqm
    oqq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oqo
    oqr:f32[200] = mul oqq oqp
    oqs:f32[] = reduce_sum[axes=(0,)] oqr
    oqt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oqu:f32[] = div -2.0 oqt
    oqv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oqu
    oqw:f32[200] = mul oqv oqm
    oqx:f32[] = reduce_sum[axes=(0,)] oqw
    oqy:f32[] = mul 0.0010000000474974513 oqs
    oqz:f32[] = sub oqh oqy
    ora:f32[] = mul 0.0010000000474974513 oqx
    orb:f32[] = sub oqj ora
    orc:f32[200] = mul oqz a
    ord:f32[200] = add orc orb
    ore:f32[200] = sub b ord
    orf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    org:f32[] = div -2.0 orf
    orh:f32[200] = mul a ore
    ori:f32[] = convert_element_type[new_dtype=float32 weak_type=False] org
    orj:f32[200] = mul ori orh
    ork:f32[] = reduce_sum[axes=(0,)] orj
    orl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    orm:f32[] = div -2.0 orl
    orn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] orm
    oro:f32[200] = mul orn ore
    orp:f32[] = reduce_sum[axes=(0,)] oro
    orq:f32[] = mul 0.0010000000474974513 ork
    orr:f32[] = sub oqz orq
    ors:f32[] = mul 0.0010000000474974513 orp
    ort:f32[] = sub orb ors
    oru:f32[200] = mul orr a
    orv:f32[200] = add oru ort
    orw:f32[200] = sub b orv
    orx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ory:f32[] = div -2.0 orx
    orz:f32[200] = mul a orw
    osa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ory
    osb:f32[200] = mul osa orz
    osc:f32[] = reduce_sum[axes=(0,)] osb
    osd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ose:f32[] = div -2.0 osd
    osf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ose
    osg:f32[200] = mul osf orw
    osh:f32[] = reduce_sum[axes=(0,)] osg
    osi:f32[] = mul 0.0010000000474974513 osc
    osj:f32[] = sub orr osi
    osk:f32[] = mul 0.0010000000474974513 osh
    osl:f32[] = sub ort osk
    osm:f32[200] = mul osj a
    osn:f32[200] = add osm osl
    oso:f32[200] = sub b osn
    osp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    osq:f32[] = div -2.0 osp
    osr:f32[200] = mul a oso
    oss:f32[] = convert_element_type[new_dtype=float32 weak_type=False] osq
    ost:f32[200] = mul oss osr
    osu:f32[] = reduce_sum[axes=(0,)] ost
    osv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    osw:f32[] = div -2.0 osv
    osx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] osw
    osy:f32[200] = mul osx oso
    osz:f32[] = reduce_sum[axes=(0,)] osy
    ota:f32[] = mul 0.0010000000474974513 osu
    otb:f32[] = sub osj ota
    otc:f32[] = mul 0.0010000000474974513 osz
    otd:f32[] = sub osl otc
    ote:f32[200] = mul otb a
    otf:f32[200] = add ote otd
    otg:f32[200] = sub b otf
    oth:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oti:f32[] = div -2.0 oth
    otj:f32[200] = mul a otg
    otk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oti
    otl:f32[200] = mul otk otj
    otm:f32[] = reduce_sum[axes=(0,)] otl
    otn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oto:f32[] = div -2.0 otn
    otp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oto
    otq:f32[200] = mul otp otg
    otr:f32[] = reduce_sum[axes=(0,)] otq
    ots:f32[] = mul 0.0010000000474974513 otm
    ott:f32[] = sub otb ots
    otu:f32[] = mul 0.0010000000474974513 otr
    otv:f32[] = sub otd otu
    otw:f32[200] = mul ott a
    otx:f32[200] = add otw otv
    oty:f32[200] = sub b otx
    otz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oua:f32[] = div -2.0 otz
    oub:f32[200] = mul a oty
    ouc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oua
    oud:f32[200] = mul ouc oub
    oue:f32[] = reduce_sum[axes=(0,)] oud
    ouf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oug:f32[] = div -2.0 ouf
    ouh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oug
    oui:f32[200] = mul ouh oty
    ouj:f32[] = reduce_sum[axes=(0,)] oui
    ouk:f32[] = mul 0.0010000000474974513 oue
    oul:f32[] = sub ott ouk
    oum:f32[] = mul 0.0010000000474974513 ouj
    oun:f32[] = sub otv oum
    ouo:f32[200] = mul oul a
    oup:f32[200] = add ouo oun
    ouq:f32[200] = sub b oup
    our:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ous:f32[] = div -2.0 our
    out:f32[200] = mul a ouq
    ouu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ous
    ouv:f32[200] = mul ouu out
    ouw:f32[] = reduce_sum[axes=(0,)] ouv
    oux:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ouy:f32[] = div -2.0 oux
    ouz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ouy
    ova:f32[200] = mul ouz ouq
    ovb:f32[] = reduce_sum[axes=(0,)] ova
    ovc:f32[] = mul 0.0010000000474974513 ouw
    ovd:f32[] = sub oul ovc
    ove:f32[] = mul 0.0010000000474974513 ovb
    ovf:f32[] = sub oun ove
    ovg:f32[200] = mul ovd a
    ovh:f32[200] = add ovg ovf
    ovi:f32[200] = sub b ovh
    ovj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ovk:f32[] = div -2.0 ovj
    ovl:f32[200] = mul a ovi
    ovm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ovk
    ovn:f32[200] = mul ovm ovl
    ovo:f32[] = reduce_sum[axes=(0,)] ovn
    ovp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ovq:f32[] = div -2.0 ovp
    ovr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ovq
    ovs:f32[200] = mul ovr ovi
    ovt:f32[] = reduce_sum[axes=(0,)] ovs
    ovu:f32[] = mul 0.0010000000474974513 ovo
    ovv:f32[] = sub ovd ovu
    ovw:f32[] = mul 0.0010000000474974513 ovt
    ovx:f32[] = sub ovf ovw
    ovy:f32[200] = mul ovv a
    ovz:f32[200] = add ovy ovx
    owa:f32[200] = sub b ovz
    owb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    owc:f32[] = div -2.0 owb
    owd:f32[200] = mul a owa
    owe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] owc
    owf:f32[200] = mul owe owd
    owg:f32[] = reduce_sum[axes=(0,)] owf
    owh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    owi:f32[] = div -2.0 owh
    owj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] owi
    owk:f32[200] = mul owj owa
    owl:f32[] = reduce_sum[axes=(0,)] owk
    owm:f32[] = mul 0.0010000000474974513 owg
    own:f32[] = sub ovv owm
    owo:f32[] = mul 0.0010000000474974513 owl
    owp:f32[] = sub ovx owo
    owq:f32[200] = mul own a
    owr:f32[200] = add owq owp
    ows:f32[200] = sub b owr
    owt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    owu:f32[] = div -2.0 owt
    owv:f32[200] = mul a ows
    oww:f32[] = convert_element_type[new_dtype=float32 weak_type=False] owu
    owx:f32[200] = mul oww owv
    owy:f32[] = reduce_sum[axes=(0,)] owx
    owz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oxa:f32[] = div -2.0 owz
    oxb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oxa
    oxc:f32[200] = mul oxb ows
    oxd:f32[] = reduce_sum[axes=(0,)] oxc
    oxe:f32[] = mul 0.0010000000474974513 owy
    oxf:f32[] = sub own oxe
    oxg:f32[] = mul 0.0010000000474974513 oxd
    oxh:f32[] = sub owp oxg
    oxi:f32[200] = mul oxf a
    oxj:f32[200] = add oxi oxh
    oxk:f32[200] = sub b oxj
    oxl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oxm:f32[] = div -2.0 oxl
    oxn:f32[200] = mul a oxk
    oxo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oxm
    oxp:f32[200] = mul oxo oxn
    oxq:f32[] = reduce_sum[axes=(0,)] oxp
    oxr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oxs:f32[] = div -2.0 oxr
    oxt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oxs
    oxu:f32[200] = mul oxt oxk
    oxv:f32[] = reduce_sum[axes=(0,)] oxu
    oxw:f32[] = mul 0.0010000000474974513 oxq
    oxx:f32[] = sub oxf oxw
    oxy:f32[] = mul 0.0010000000474974513 oxv
    oxz:f32[] = sub oxh oxy
    oya:f32[200] = mul oxx a
    oyb:f32[200] = add oya oxz
    oyc:f32[200] = sub b oyb
    oyd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oye:f32[] = div -2.0 oyd
    oyf:f32[200] = mul a oyc
    oyg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oye
    oyh:f32[200] = mul oyg oyf
    oyi:f32[] = reduce_sum[axes=(0,)] oyh
    oyj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oyk:f32[] = div -2.0 oyj
    oyl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oyk
    oym:f32[200] = mul oyl oyc
    oyn:f32[] = reduce_sum[axes=(0,)] oym
    oyo:f32[] = mul 0.0010000000474974513 oyi
    oyp:f32[] = sub oxx oyo
    oyq:f32[] = mul 0.0010000000474974513 oyn
    oyr:f32[] = sub oxz oyq
    oys:f32[200] = mul oyp a
    oyt:f32[200] = add oys oyr
    oyu:f32[200] = sub b oyt
    oyv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    oyw:f32[] = div -2.0 oyv
    oyx:f32[200] = mul a oyu
    oyy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] oyw
    oyz:f32[200] = mul oyy oyx
    oza:f32[] = reduce_sum[axes=(0,)] oyz
    ozb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ozc:f32[] = div -2.0 ozb
    ozd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ozc
    oze:f32[200] = mul ozd oyu
    ozf:f32[] = reduce_sum[axes=(0,)] oze
    ozg:f32[] = mul 0.0010000000474974513 oza
    ozh:f32[] = sub oyp ozg
    ozi:f32[] = mul 0.0010000000474974513 ozf
    ozj:f32[] = sub oyr ozi
    ozk:f32[200] = mul ozh a
    ozl:f32[200] = add ozk ozj
    ozm:f32[200] = sub b ozl
    ozn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ozo:f32[] = div -2.0 ozn
    ozp:f32[200] = mul a ozm
    ozq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ozo
    ozr:f32[200] = mul ozq ozp
    ozs:f32[] = reduce_sum[axes=(0,)] ozr
    ozt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ozu:f32[] = div -2.0 ozt
    ozv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ozu
    ozw:f32[200] = mul ozv ozm
    ozx:f32[] = reduce_sum[axes=(0,)] ozw
    ozy:f32[] = mul 0.0010000000474974513 ozs
    ozz:f32[] = sub ozh ozy
    paa:f32[] = mul 0.0010000000474974513 ozx
    pab:f32[] = sub ozj paa
    pac:f32[200] = mul ozz a
    pad:f32[200] = add pac pab
    pae:f32[200] = sub b pad
    paf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pag:f32[] = div -2.0 paf
    pah:f32[200] = mul a pae
    pai:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pag
    paj:f32[200] = mul pai pah
    pak:f32[] = reduce_sum[axes=(0,)] paj
    pal:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pam:f32[] = div -2.0 pal
    pan:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pam
    pao:f32[200] = mul pan pae
    pap:f32[] = reduce_sum[axes=(0,)] pao
    paq:f32[] = mul 0.0010000000474974513 pak
    par:f32[] = sub ozz paq
    pas:f32[] = mul 0.0010000000474974513 pap
    pat:f32[] = sub pab pas
    pau:f32[200] = mul par a
    pav:f32[200] = add pau pat
    paw:f32[200] = sub b pav
    pax:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pay:f32[] = div -2.0 pax
    paz:f32[200] = mul a paw
    pba:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pay
    pbb:f32[200] = mul pba paz
    pbc:f32[] = reduce_sum[axes=(0,)] pbb
    pbd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pbe:f32[] = div -2.0 pbd
    pbf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pbe
    pbg:f32[200] = mul pbf paw
    pbh:f32[] = reduce_sum[axes=(0,)] pbg
    pbi:f32[] = mul 0.0010000000474974513 pbc
    pbj:f32[] = sub par pbi
    pbk:f32[] = mul 0.0010000000474974513 pbh
    pbl:f32[] = sub pat pbk
    pbm:f32[200] = mul pbj a
    pbn:f32[200] = add pbm pbl
    pbo:f32[200] = sub b pbn
    pbp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pbq:f32[] = div -2.0 pbp
    pbr:f32[200] = mul a pbo
    pbs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pbq
    pbt:f32[200] = mul pbs pbr
    pbu:f32[] = reduce_sum[axes=(0,)] pbt
    pbv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pbw:f32[] = div -2.0 pbv
    pbx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pbw
    pby:f32[200] = mul pbx pbo
    pbz:f32[] = reduce_sum[axes=(0,)] pby
    pca:f32[] = mul 0.0010000000474974513 pbu
    pcb:f32[] = sub pbj pca
    pcc:f32[] = mul 0.0010000000474974513 pbz
    pcd:f32[] = sub pbl pcc
    pce:f32[200] = mul pcb a
    pcf:f32[200] = add pce pcd
    pcg:f32[200] = sub b pcf
    pch:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pci:f32[] = div -2.0 pch
    pcj:f32[200] = mul a pcg
    pck:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pci
    pcl:f32[200] = mul pck pcj
    pcm:f32[] = reduce_sum[axes=(0,)] pcl
    pcn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pco:f32[] = div -2.0 pcn
    pcp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pco
    pcq:f32[200] = mul pcp pcg
    pcr:f32[] = reduce_sum[axes=(0,)] pcq
    pcs:f32[] = mul 0.0010000000474974513 pcm
    pct:f32[] = sub pcb pcs
    pcu:f32[] = mul 0.0010000000474974513 pcr
    pcv:f32[] = sub pcd pcu
    pcw:f32[200] = mul pct a
    pcx:f32[200] = add pcw pcv
    pcy:f32[200] = sub b pcx
    pcz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pda:f32[] = div -2.0 pcz
    pdb:f32[200] = mul a pcy
    pdc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pda
    pdd:f32[200] = mul pdc pdb
    pde:f32[] = reduce_sum[axes=(0,)] pdd
    pdf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pdg:f32[] = div -2.0 pdf
    pdh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pdg
    pdi:f32[200] = mul pdh pcy
    pdj:f32[] = reduce_sum[axes=(0,)] pdi
    pdk:f32[] = mul 0.0010000000474974513 pde
    pdl:f32[] = sub pct pdk
    pdm:f32[] = mul 0.0010000000474974513 pdj
    pdn:f32[] = sub pcv pdm
    pdo:f32[200] = mul pdl a
    pdp:f32[200] = add pdo pdn
    pdq:f32[200] = sub b pdp
    pdr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pds:f32[] = div -2.0 pdr
    pdt:f32[200] = mul a pdq
    pdu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pds
    pdv:f32[200] = mul pdu pdt
    pdw:f32[] = reduce_sum[axes=(0,)] pdv
    pdx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pdy:f32[] = div -2.0 pdx
    pdz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pdy
    pea:f32[200] = mul pdz pdq
    peb:f32[] = reduce_sum[axes=(0,)] pea
    pec:f32[] = mul 0.0010000000474974513 pdw
    ped:f32[] = sub pdl pec
    pee:f32[] = mul 0.0010000000474974513 peb
    pef:f32[] = sub pdn pee
    peg:f32[200] = mul ped a
    peh:f32[200] = add peg pef
    pei:f32[200] = sub b peh
    pej:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pek:f32[] = div -2.0 pej
    pel:f32[200] = mul a pei
    pem:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pek
    pen:f32[200] = mul pem pel
    peo:f32[] = reduce_sum[axes=(0,)] pen
    pep:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    peq:f32[] = div -2.0 pep
    per:f32[] = convert_element_type[new_dtype=float32 weak_type=False] peq
    pes:f32[200] = mul per pei
    pet:f32[] = reduce_sum[axes=(0,)] pes
    peu:f32[] = mul 0.0010000000474974513 peo
    pev:f32[] = sub ped peu
    pew:f32[] = mul 0.0010000000474974513 pet
    pex:f32[] = sub pef pew
    pey:f32[200] = mul pev a
    pez:f32[200] = add pey pex
    pfa:f32[200] = sub b pez
    pfb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pfc:f32[] = div -2.0 pfb
    pfd:f32[200] = mul a pfa
    pfe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pfc
    pff:f32[200] = mul pfe pfd
    pfg:f32[] = reduce_sum[axes=(0,)] pff
    pfh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pfi:f32[] = div -2.0 pfh
    pfj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pfi
    pfk:f32[200] = mul pfj pfa
    pfl:f32[] = reduce_sum[axes=(0,)] pfk
    pfm:f32[] = mul 0.0010000000474974513 pfg
    pfn:f32[] = sub pev pfm
    pfo:f32[] = mul 0.0010000000474974513 pfl
    pfp:f32[] = sub pex pfo
    pfq:f32[200] = mul pfn a
    pfr:f32[200] = add pfq pfp
    pfs:f32[200] = sub b pfr
    pft:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pfu:f32[] = div -2.0 pft
    pfv:f32[200] = mul a pfs
    pfw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pfu
    pfx:f32[200] = mul pfw pfv
    pfy:f32[] = reduce_sum[axes=(0,)] pfx
    pfz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pga:f32[] = div -2.0 pfz
    pgb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pga
    pgc:f32[200] = mul pgb pfs
    pgd:f32[] = reduce_sum[axes=(0,)] pgc
    pge:f32[] = mul 0.0010000000474974513 pfy
    pgf:f32[] = sub pfn pge
    pgg:f32[] = mul 0.0010000000474974513 pgd
    pgh:f32[] = sub pfp pgg
    pgi:f32[200] = mul pgf a
    pgj:f32[200] = add pgi pgh
    pgk:f32[200] = sub b pgj
    pgl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pgm:f32[] = div -2.0 pgl
    pgn:f32[200] = mul a pgk
    pgo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pgm
    pgp:f32[200] = mul pgo pgn
    pgq:f32[] = reduce_sum[axes=(0,)] pgp
    pgr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pgs:f32[] = div -2.0 pgr
    pgt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pgs
    pgu:f32[200] = mul pgt pgk
    pgv:f32[] = reduce_sum[axes=(0,)] pgu
    pgw:f32[] = mul 0.0010000000474974513 pgq
    pgx:f32[] = sub pgf pgw
    pgy:f32[] = mul 0.0010000000474974513 pgv
    pgz:f32[] = sub pgh pgy
    pha:f32[200] = mul pgx a
    phb:f32[200] = add pha pgz
    phc:f32[200] = sub b phb
    phd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    phe:f32[] = div -2.0 phd
    phf:f32[200] = mul a phc
    phg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] phe
    phh:f32[200] = mul phg phf
    phi:f32[] = reduce_sum[axes=(0,)] phh
    phj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    phk:f32[] = div -2.0 phj
    phl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] phk
    phm:f32[200] = mul phl phc
    phn:f32[] = reduce_sum[axes=(0,)] phm
    pho:f32[] = mul 0.0010000000474974513 phi
    php:f32[] = sub pgx pho
    phq:f32[] = mul 0.0010000000474974513 phn
    phr:f32[] = sub pgz phq
    phs:f32[200] = mul php a
    pht:f32[200] = add phs phr
    phu:f32[200] = sub b pht
    phv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    phw:f32[] = div -2.0 phv
    phx:f32[200] = mul a phu
    phy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] phw
    phz:f32[200] = mul phy phx
    pia:f32[] = reduce_sum[axes=(0,)] phz
    pib:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pic:f32[] = div -2.0 pib
    pid:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pic
    pie:f32[200] = mul pid phu
    pif:f32[] = reduce_sum[axes=(0,)] pie
    pig:f32[] = mul 0.0010000000474974513 pia
    pih:f32[] = sub php pig
    pii:f32[] = mul 0.0010000000474974513 pif
    pij:f32[] = sub phr pii
    pik:f32[200] = mul pih a
    pil:f32[200] = add pik pij
    pim:f32[200] = sub b pil
    pin:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pio:f32[] = div -2.0 pin
    pip:f32[200] = mul a pim
    piq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pio
    pir:f32[200] = mul piq pip
    pis:f32[] = reduce_sum[axes=(0,)] pir
    pit:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    piu:f32[] = div -2.0 pit
    piv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] piu
    piw:f32[200] = mul piv pim
    pix:f32[] = reduce_sum[axes=(0,)] piw
    piy:f32[] = mul 0.0010000000474974513 pis
    piz:f32[] = sub pih piy
    pja:f32[] = mul 0.0010000000474974513 pix
    pjb:f32[] = sub pij pja
    pjc:f32[200] = mul piz a
    pjd:f32[200] = add pjc pjb
    pje:f32[200] = sub b pjd
    pjf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pjg:f32[] = div -2.0 pjf
    pjh:f32[200] = mul a pje
    pji:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pjg
    pjj:f32[200] = mul pji pjh
    pjk:f32[] = reduce_sum[axes=(0,)] pjj
    pjl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pjm:f32[] = div -2.0 pjl
    pjn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pjm
    pjo:f32[200] = mul pjn pje
    pjp:f32[] = reduce_sum[axes=(0,)] pjo
    pjq:f32[] = mul 0.0010000000474974513 pjk
    pjr:f32[] = sub piz pjq
    pjs:f32[] = mul 0.0010000000474974513 pjp
    pjt:f32[] = sub pjb pjs
    pju:f32[200] = mul pjr a
    pjv:f32[200] = add pju pjt
    pjw:f32[200] = sub b pjv
    pjx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pjy:f32[] = div -2.0 pjx
    pjz:f32[200] = mul a pjw
    pka:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pjy
    pkb:f32[200] = mul pka pjz
    pkc:f32[] = reduce_sum[axes=(0,)] pkb
    pkd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pke:f32[] = div -2.0 pkd
    pkf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pke
    pkg:f32[200] = mul pkf pjw
    pkh:f32[] = reduce_sum[axes=(0,)] pkg
    pki:f32[] = mul 0.0010000000474974513 pkc
    pkj:f32[] = sub pjr pki
    pkk:f32[] = mul 0.0010000000474974513 pkh
    pkl:f32[] = sub pjt pkk
    pkm:f32[200] = mul pkj a
    pkn:f32[200] = add pkm pkl
    pko:f32[200] = sub b pkn
    pkp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pkq:f32[] = div -2.0 pkp
    pkr:f32[200] = mul a pko
    pks:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pkq
    pkt:f32[200] = mul pks pkr
    pku:f32[] = reduce_sum[axes=(0,)] pkt
    pkv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pkw:f32[] = div -2.0 pkv
    pkx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pkw
    pky:f32[200] = mul pkx pko
    pkz:f32[] = reduce_sum[axes=(0,)] pky
    pla:f32[] = mul 0.0010000000474974513 pku
    plb:f32[] = sub pkj pla
    plc:f32[] = mul 0.0010000000474974513 pkz
    pld:f32[] = sub pkl plc
    ple:f32[200] = mul plb a
    plf:f32[200] = add ple pld
    plg:f32[200] = sub b plf
    plh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pli:f32[] = div -2.0 plh
    plj:f32[200] = mul a plg
    plk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pli
    pll:f32[200] = mul plk plj
    plm:f32[] = reduce_sum[axes=(0,)] pll
    pln:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    plo:f32[] = div -2.0 pln
    plp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] plo
    plq:f32[200] = mul plp plg
    plr:f32[] = reduce_sum[axes=(0,)] plq
    pls:f32[] = mul 0.0010000000474974513 plm
    plt:f32[] = sub plb pls
    plu:f32[] = mul 0.0010000000474974513 plr
    plv:f32[] = sub pld plu
    plw:f32[200] = mul plt a
    plx:f32[200] = add plw plv
    ply:f32[200] = sub b plx
    plz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pma:f32[] = div -2.0 plz
    pmb:f32[200] = mul a ply
    pmc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pma
    pmd:f32[200] = mul pmc pmb
    pme:f32[] = reduce_sum[axes=(0,)] pmd
    pmf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pmg:f32[] = div -2.0 pmf
    pmh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pmg
    pmi:f32[200] = mul pmh ply
    pmj:f32[] = reduce_sum[axes=(0,)] pmi
    pmk:f32[] = mul 0.0010000000474974513 pme
    pml:f32[] = sub plt pmk
    pmm:f32[] = mul 0.0010000000474974513 pmj
    pmn:f32[] = sub plv pmm
    pmo:f32[200] = mul pml a
    pmp:f32[200] = add pmo pmn
    pmq:f32[200] = sub b pmp
    pmr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pms:f32[] = div -2.0 pmr
    pmt:f32[200] = mul a pmq
    pmu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pms
    pmv:f32[200] = mul pmu pmt
    pmw:f32[] = reduce_sum[axes=(0,)] pmv
    pmx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pmy:f32[] = div -2.0 pmx
    pmz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pmy
    pna:f32[200] = mul pmz pmq
    pnb:f32[] = reduce_sum[axes=(0,)] pna
    pnc:f32[] = mul 0.0010000000474974513 pmw
    pnd:f32[] = sub pml pnc
    pne:f32[] = mul 0.0010000000474974513 pnb
    pnf:f32[] = sub pmn pne
    png:f32[200] = mul pnd a
    pnh:f32[200] = add png pnf
    pni:f32[200] = sub b pnh
    pnj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pnk:f32[] = div -2.0 pnj
    pnl:f32[200] = mul a pni
    pnm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pnk
    pnn:f32[200] = mul pnm pnl
    pno:f32[] = reduce_sum[axes=(0,)] pnn
    pnp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pnq:f32[] = div -2.0 pnp
    pnr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pnq
    pns:f32[200] = mul pnr pni
    pnt:f32[] = reduce_sum[axes=(0,)] pns
    pnu:f32[] = mul 0.0010000000474974513 pno
    pnv:f32[] = sub pnd pnu
    pnw:f32[] = mul 0.0010000000474974513 pnt
    pnx:f32[] = sub pnf pnw
    pny:f32[200] = mul pnv a
    pnz:f32[200] = add pny pnx
    poa:f32[200] = sub b pnz
    pob:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    poc:f32[] = div -2.0 pob
    pod:f32[200] = mul a poa
    poe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] poc
    pof:f32[200] = mul poe pod
    pog:f32[] = reduce_sum[axes=(0,)] pof
    poh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    poi:f32[] = div -2.0 poh
    poj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] poi
    pok:f32[200] = mul poj poa
    pol:f32[] = reduce_sum[axes=(0,)] pok
    pom:f32[] = mul 0.0010000000474974513 pog
    pon:f32[] = sub pnv pom
    poo:f32[] = mul 0.0010000000474974513 pol
    pop:f32[] = sub pnx poo
    poq:f32[200] = mul pon a
    por:f32[200] = add poq pop
    pos:f32[200] = sub b por
    pot:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pou:f32[] = div -2.0 pot
    pov:f32[200] = mul a pos
    pow:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pou
    pox:f32[200] = mul pow pov
    poy:f32[] = reduce_sum[axes=(0,)] pox
    poz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ppa:f32[] = div -2.0 poz
    ppb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ppa
    ppc:f32[200] = mul ppb pos
    ppd:f32[] = reduce_sum[axes=(0,)] ppc
    ppe:f32[] = mul 0.0010000000474974513 poy
    ppf:f32[] = sub pon ppe
    ppg:f32[] = mul 0.0010000000474974513 ppd
    pph:f32[] = sub pop ppg
    ppi:f32[200] = mul ppf a
    ppj:f32[200] = add ppi pph
    ppk:f32[200] = sub b ppj
    ppl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ppm:f32[] = div -2.0 ppl
    ppn:f32[200] = mul a ppk
    ppo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ppm
    ppp:f32[200] = mul ppo ppn
    ppq:f32[] = reduce_sum[axes=(0,)] ppp
    ppr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pps:f32[] = div -2.0 ppr
    ppt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pps
    ppu:f32[200] = mul ppt ppk
    ppv:f32[] = reduce_sum[axes=(0,)] ppu
    ppw:f32[] = mul 0.0010000000474974513 ppq
    ppx:f32[] = sub ppf ppw
    ppy:f32[] = mul 0.0010000000474974513 ppv
    ppz:f32[] = sub pph ppy
    pqa:f32[200] = mul ppx a
    pqb:f32[200] = add pqa ppz
    pqc:f32[200] = sub b pqb
    pqd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pqe:f32[] = div -2.0 pqd
    pqf:f32[200] = mul a pqc
    pqg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pqe
    pqh:f32[200] = mul pqg pqf
    pqi:f32[] = reduce_sum[axes=(0,)] pqh
    pqj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pqk:f32[] = div -2.0 pqj
    pql:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pqk
    pqm:f32[200] = mul pql pqc
    pqn:f32[] = reduce_sum[axes=(0,)] pqm
    pqo:f32[] = mul 0.0010000000474974513 pqi
    pqp:f32[] = sub ppx pqo
    pqq:f32[] = mul 0.0010000000474974513 pqn
    pqr:f32[] = sub ppz pqq
    pqs:f32[200] = mul pqp a
    pqt:f32[200] = add pqs pqr
    pqu:f32[200] = sub b pqt
    pqv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pqw:f32[] = div -2.0 pqv
    pqx:f32[200] = mul a pqu
    pqy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pqw
    pqz:f32[200] = mul pqy pqx
    pra:f32[] = reduce_sum[axes=(0,)] pqz
    prb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    prc:f32[] = div -2.0 prb
    prd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] prc
    pre:f32[200] = mul prd pqu
    prf:f32[] = reduce_sum[axes=(0,)] pre
    prg:f32[] = mul 0.0010000000474974513 pra
    prh:f32[] = sub pqp prg
    pri:f32[] = mul 0.0010000000474974513 prf
    prj:f32[] = sub pqr pri
    prk:f32[200] = mul prh a
    prl:f32[200] = add prk prj
    prm:f32[200] = sub b prl
    prn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pro:f32[] = div -2.0 prn
    prp:f32[200] = mul a prm
    prq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pro
    prr:f32[200] = mul prq prp
    prs:f32[] = reduce_sum[axes=(0,)] prr
    prt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pru:f32[] = div -2.0 prt
    prv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pru
    prw:f32[200] = mul prv prm
    prx:f32[] = reduce_sum[axes=(0,)] prw
    pry:f32[] = mul 0.0010000000474974513 prs
    prz:f32[] = sub prh pry
    psa:f32[] = mul 0.0010000000474974513 prx
    psb:f32[] = sub prj psa
    psc:f32[200] = mul prz a
    psd:f32[200] = add psc psb
    pse:f32[200] = sub b psd
    psf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    psg:f32[] = div -2.0 psf
    psh:f32[200] = mul a pse
    psi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] psg
    psj:f32[200] = mul psi psh
    psk:f32[] = reduce_sum[axes=(0,)] psj
    psl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    psm:f32[] = div -2.0 psl
    psn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] psm
    pso:f32[200] = mul psn pse
    psp:f32[] = reduce_sum[axes=(0,)] pso
    psq:f32[] = mul 0.0010000000474974513 psk
    psr:f32[] = sub prz psq
    pss:f32[] = mul 0.0010000000474974513 psp
    pst:f32[] = sub psb pss
    psu:f32[200] = mul psr a
    psv:f32[200] = add psu pst
    psw:f32[200] = sub b psv
    psx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    psy:f32[] = div -2.0 psx
    psz:f32[200] = mul a psw
    pta:f32[] = convert_element_type[new_dtype=float32 weak_type=False] psy
    ptb:f32[200] = mul pta psz
    ptc:f32[] = reduce_sum[axes=(0,)] ptb
    ptd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pte:f32[] = div -2.0 ptd
    ptf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pte
    ptg:f32[200] = mul ptf psw
    pth:f32[] = reduce_sum[axes=(0,)] ptg
    pti:f32[] = mul 0.0010000000474974513 ptc
    ptj:f32[] = sub psr pti
    ptk:f32[] = mul 0.0010000000474974513 pth
    ptl:f32[] = sub pst ptk
    ptm:f32[200] = mul ptj a
    ptn:f32[200] = add ptm ptl
    pto:f32[200] = sub b ptn
    ptp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ptq:f32[] = div -2.0 ptp
    ptr:f32[200] = mul a pto
    pts:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ptq
    ptt:f32[200] = mul pts ptr
    ptu:f32[] = reduce_sum[axes=(0,)] ptt
    ptv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ptw:f32[] = div -2.0 ptv
    ptx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ptw
    pty:f32[200] = mul ptx pto
    ptz:f32[] = reduce_sum[axes=(0,)] pty
    pua:f32[] = mul 0.0010000000474974513 ptu
    pub:f32[] = sub ptj pua
    puc:f32[] = mul 0.0010000000474974513 ptz
    pud:f32[] = sub ptl puc
    pue:f32[200] = mul pub a
    puf:f32[200] = add pue pud
    pug:f32[200] = sub b puf
    puh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pui:f32[] = div -2.0 puh
    puj:f32[200] = mul a pug
    puk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pui
    pul:f32[200] = mul puk puj
    pum:f32[] = reduce_sum[axes=(0,)] pul
    pun:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    puo:f32[] = div -2.0 pun
    pup:f32[] = convert_element_type[new_dtype=float32 weak_type=False] puo
    puq:f32[200] = mul pup pug
    pur:f32[] = reduce_sum[axes=(0,)] puq
    pus:f32[] = mul 0.0010000000474974513 pum
    put:f32[] = sub pub pus
    puu:f32[] = mul 0.0010000000474974513 pur
    puv:f32[] = sub pud puu
    puw:f32[200] = mul put a
    pux:f32[200] = add puw puv
    puy:f32[200] = sub b pux
    puz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pva:f32[] = div -2.0 puz
    pvb:f32[200] = mul a puy
    pvc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pva
    pvd:f32[200] = mul pvc pvb
    pve:f32[] = reduce_sum[axes=(0,)] pvd
    pvf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pvg:f32[] = div -2.0 pvf
    pvh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pvg
    pvi:f32[200] = mul pvh puy
    pvj:f32[] = reduce_sum[axes=(0,)] pvi
    pvk:f32[] = mul 0.0010000000474974513 pve
    pvl:f32[] = sub put pvk
    pvm:f32[] = mul 0.0010000000474974513 pvj
    pvn:f32[] = sub puv pvm
    pvo:f32[200] = mul pvl a
    pvp:f32[200] = add pvo pvn
    pvq:f32[200] = sub b pvp
    pvr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pvs:f32[] = div -2.0 pvr
    pvt:f32[200] = mul a pvq
    pvu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pvs
    pvv:f32[200] = mul pvu pvt
    pvw:f32[] = reduce_sum[axes=(0,)] pvv
    pvx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pvy:f32[] = div -2.0 pvx
    pvz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pvy
    pwa:f32[200] = mul pvz pvq
    pwb:f32[] = reduce_sum[axes=(0,)] pwa
    pwc:f32[] = mul 0.0010000000474974513 pvw
    pwd:f32[] = sub pvl pwc
    pwe:f32[] = mul 0.0010000000474974513 pwb
    pwf:f32[] = sub pvn pwe
    pwg:f32[200] = mul pwd a
    pwh:f32[200] = add pwg pwf
    pwi:f32[200] = sub b pwh
    pwj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pwk:f32[] = div -2.0 pwj
    pwl:f32[200] = mul a pwi
    pwm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pwk
    pwn:f32[200] = mul pwm pwl
    pwo:f32[] = reduce_sum[axes=(0,)] pwn
    pwp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pwq:f32[] = div -2.0 pwp
    pwr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pwq
    pws:f32[200] = mul pwr pwi
    pwt:f32[] = reduce_sum[axes=(0,)] pws
    pwu:f32[] = mul 0.0010000000474974513 pwo
    pwv:f32[] = sub pwd pwu
    pww:f32[] = mul 0.0010000000474974513 pwt
    pwx:f32[] = sub pwf pww
    pwy:f32[200] = mul pwv a
    pwz:f32[200] = add pwy pwx
    pxa:f32[200] = sub b pwz
    pxb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pxc:f32[] = div -2.0 pxb
    pxd:f32[200] = mul a pxa
    pxe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pxc
    pxf:f32[200] = mul pxe pxd
    pxg:f32[] = reduce_sum[axes=(0,)] pxf
    pxh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pxi:f32[] = div -2.0 pxh
    pxj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pxi
    pxk:f32[200] = mul pxj pxa
    pxl:f32[] = reduce_sum[axes=(0,)] pxk
    pxm:f32[] = mul 0.0010000000474974513 pxg
    pxn:f32[] = sub pwv pxm
    pxo:f32[] = mul 0.0010000000474974513 pxl
    pxp:f32[] = sub pwx pxo
    pxq:f32[200] = mul pxn a
    pxr:f32[200] = add pxq pxp
    pxs:f32[200] = sub b pxr
    pxt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pxu:f32[] = div -2.0 pxt
    pxv:f32[200] = mul a pxs
    pxw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pxu
    pxx:f32[200] = mul pxw pxv
    pxy:f32[] = reduce_sum[axes=(0,)] pxx
    pxz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pya:f32[] = div -2.0 pxz
    pyb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pya
    pyc:f32[200] = mul pyb pxs
    pyd:f32[] = reduce_sum[axes=(0,)] pyc
    pye:f32[] = mul 0.0010000000474974513 pxy
    pyf:f32[] = sub pxn pye
    pyg:f32[] = mul 0.0010000000474974513 pyd
    pyh:f32[] = sub pxp pyg
    pyi:f32[200] = mul pyf a
    pyj:f32[200] = add pyi pyh
    pyk:f32[200] = sub b pyj
    pyl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pym:f32[] = div -2.0 pyl
    pyn:f32[200] = mul a pyk
    pyo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pym
    pyp:f32[200] = mul pyo pyn
    pyq:f32[] = reduce_sum[axes=(0,)] pyp
    pyr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pys:f32[] = div -2.0 pyr
    pyt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pys
    pyu:f32[200] = mul pyt pyk
    pyv:f32[] = reduce_sum[axes=(0,)] pyu
    pyw:f32[] = mul 0.0010000000474974513 pyq
    pyx:f32[] = sub pyf pyw
    pyy:f32[] = mul 0.0010000000474974513 pyv
    pyz:f32[] = sub pyh pyy
    pza:f32[200] = mul pyx a
    pzb:f32[200] = add pza pyz
    pzc:f32[200] = sub b pzb
    pzd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pze:f32[] = div -2.0 pzd
    pzf:f32[200] = mul a pzc
    pzg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pze
    pzh:f32[200] = mul pzg pzf
    pzi:f32[] = reduce_sum[axes=(0,)] pzh
    pzj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pzk:f32[] = div -2.0 pzj
    pzl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pzk
    pzm:f32[200] = mul pzl pzc
    pzn:f32[] = reduce_sum[axes=(0,)] pzm
    pzo:f32[] = mul 0.0010000000474974513 pzi
    pzp:f32[] = sub pyx pzo
    pzq:f32[] = mul 0.0010000000474974513 pzn
    pzr:f32[] = sub pyz pzq
    pzs:f32[200] = mul pzp a
    pzt:f32[200] = add pzs pzr
    pzu:f32[200] = sub b pzt
    pzv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    pzw:f32[] = div -2.0 pzv
    pzx:f32[200] = mul a pzu
    pzy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] pzw
    pzz:f32[200] = mul pzy pzx
    qaa:f32[] = reduce_sum[axes=(0,)] pzz
    qab:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qac:f32[] = div -2.0 qab
    qad:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qac
    qae:f32[200] = mul qad pzu
    qaf:f32[] = reduce_sum[axes=(0,)] qae
    qag:f32[] = mul 0.0010000000474974513 qaa
    qah:f32[] = sub pzp qag
    qai:f32[] = mul 0.0010000000474974513 qaf
    qaj:f32[] = sub pzr qai
    qak:f32[200] = mul qah a
    qal:f32[200] = add qak qaj
    qam:f32[200] = sub b qal
    qan:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qao:f32[] = div -2.0 qan
    qap:f32[200] = mul a qam
    qaq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qao
    qar:f32[200] = mul qaq qap
    qas:f32[] = reduce_sum[axes=(0,)] qar
    qat:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qau:f32[] = div -2.0 qat
    qav:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qau
    qaw:f32[200] = mul qav qam
    qax:f32[] = reduce_sum[axes=(0,)] qaw
    qay:f32[] = mul 0.0010000000474974513 qas
    qaz:f32[] = sub qah qay
    qba:f32[] = mul 0.0010000000474974513 qax
    qbb:f32[] = sub qaj qba
    qbc:f32[200] = mul qaz a
    qbd:f32[200] = add qbc qbb
    qbe:f32[200] = sub b qbd
    qbf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qbg:f32[] = div -2.0 qbf
    qbh:f32[200] = mul a qbe
    qbi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qbg
    qbj:f32[200] = mul qbi qbh
    qbk:f32[] = reduce_sum[axes=(0,)] qbj
    qbl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qbm:f32[] = div -2.0 qbl
    qbn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qbm
    qbo:f32[200] = mul qbn qbe
    qbp:f32[] = reduce_sum[axes=(0,)] qbo
    qbq:f32[] = mul 0.0010000000474974513 qbk
    qbr:f32[] = sub qaz qbq
    qbs:f32[] = mul 0.0010000000474974513 qbp
    qbt:f32[] = sub qbb qbs
    qbu:f32[200] = mul qbr a
    qbv:f32[200] = add qbu qbt
    qbw:f32[200] = sub b qbv
    qbx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qby:f32[] = div -2.0 qbx
    qbz:f32[200] = mul a qbw
    qca:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qby
    qcb:f32[200] = mul qca qbz
    qcc:f32[] = reduce_sum[axes=(0,)] qcb
    qcd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qce:f32[] = div -2.0 qcd
    qcf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qce
    qcg:f32[200] = mul qcf qbw
    qch:f32[] = reduce_sum[axes=(0,)] qcg
    qci:f32[] = mul 0.0010000000474974513 qcc
    qcj:f32[] = sub qbr qci
    qck:f32[] = mul 0.0010000000474974513 qch
    qcl:f32[] = sub qbt qck
    qcm:f32[200] = mul qcj a
    qcn:f32[200] = add qcm qcl
    qco:f32[200] = sub b qcn
    qcp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qcq:f32[] = div -2.0 qcp
    qcr:f32[200] = mul a qco
    qcs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qcq
    qct:f32[200] = mul qcs qcr
    qcu:f32[] = reduce_sum[axes=(0,)] qct
    qcv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qcw:f32[] = div -2.0 qcv
    qcx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qcw
    qcy:f32[200] = mul qcx qco
    qcz:f32[] = reduce_sum[axes=(0,)] qcy
    qda:f32[] = mul 0.0010000000474974513 qcu
    qdb:f32[] = sub qcj qda
    qdc:f32[] = mul 0.0010000000474974513 qcz
    qdd:f32[] = sub qcl qdc
    qde:f32[200] = mul qdb a
    qdf:f32[200] = add qde qdd
    qdg:f32[200] = sub b qdf
    qdh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qdi:f32[] = div -2.0 qdh
    qdj:f32[200] = mul a qdg
    qdk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qdi
    qdl:f32[200] = mul qdk qdj
    qdm:f32[] = reduce_sum[axes=(0,)] qdl
    qdn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qdo:f32[] = div -2.0 qdn
    qdp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qdo
    qdq:f32[200] = mul qdp qdg
    qdr:f32[] = reduce_sum[axes=(0,)] qdq
    qds:f32[] = mul 0.0010000000474974513 qdm
    qdt:f32[] = sub qdb qds
    qdu:f32[] = mul 0.0010000000474974513 qdr
    qdv:f32[] = sub qdd qdu
    qdw:f32[200] = mul qdt a
    qdx:f32[200] = add qdw qdv
    qdy:f32[200] = sub b qdx
    qdz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qea:f32[] = div -2.0 qdz
    qeb:f32[200] = mul a qdy
    qec:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qea
    qed:f32[200] = mul qec qeb
    qee:f32[] = reduce_sum[axes=(0,)] qed
    qef:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qeg:f32[] = div -2.0 qef
    qeh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qeg
    qei:f32[200] = mul qeh qdy
    qej:f32[] = reduce_sum[axes=(0,)] qei
    qek:f32[] = mul 0.0010000000474974513 qee
    qel:f32[] = sub qdt qek
    qem:f32[] = mul 0.0010000000474974513 qej
    qen:f32[] = sub qdv qem
    qeo:f32[200] = mul qel a
    qep:f32[200] = add qeo qen
    qeq:f32[200] = sub b qep
    qer:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qes:f32[] = div -2.0 qer
    qet:f32[200] = mul a qeq
    qeu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qes
    qev:f32[200] = mul qeu qet
    qew:f32[] = reduce_sum[axes=(0,)] qev
    qex:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qey:f32[] = div -2.0 qex
    qez:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qey
    qfa:f32[200] = mul qez qeq
    qfb:f32[] = reduce_sum[axes=(0,)] qfa
    qfc:f32[] = mul 0.0010000000474974513 qew
    qfd:f32[] = sub qel qfc
    qfe:f32[] = mul 0.0010000000474974513 qfb
    qff:f32[] = sub qen qfe
    qfg:f32[200] = mul qfd a
    qfh:f32[200] = add qfg qff
    qfi:f32[200] = sub b qfh
    qfj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qfk:f32[] = div -2.0 qfj
    qfl:f32[200] = mul a qfi
    qfm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qfk
    qfn:f32[200] = mul qfm qfl
    qfo:f32[] = reduce_sum[axes=(0,)] qfn
    qfp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qfq:f32[] = div -2.0 qfp
    qfr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qfq
    qfs:f32[200] = mul qfr qfi
    qft:f32[] = reduce_sum[axes=(0,)] qfs
    qfu:f32[] = mul 0.0010000000474974513 qfo
    qfv:f32[] = sub qfd qfu
    qfw:f32[] = mul 0.0010000000474974513 qft
    qfx:f32[] = sub qff qfw
    qfy:f32[200] = mul qfv a
    qfz:f32[200] = add qfy qfx
    qga:f32[200] = sub b qfz
    qgb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qgc:f32[] = div -2.0 qgb
    qgd:f32[200] = mul a qga
    qge:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qgc
    qgf:f32[200] = mul qge qgd
    qgg:f32[] = reduce_sum[axes=(0,)] qgf
    qgh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qgi:f32[] = div -2.0 qgh
    qgj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qgi
    qgk:f32[200] = mul qgj qga
    qgl:f32[] = reduce_sum[axes=(0,)] qgk
    qgm:f32[] = mul 0.0010000000474974513 qgg
    qgn:f32[] = sub qfv qgm
    qgo:f32[] = mul 0.0010000000474974513 qgl
    qgp:f32[] = sub qfx qgo
    qgq:f32[200] = mul qgn a
    qgr:f32[200] = add qgq qgp
    qgs:f32[200] = sub b qgr
    qgt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qgu:f32[] = div -2.0 qgt
    qgv:f32[200] = mul a qgs
    qgw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qgu
    qgx:f32[200] = mul qgw qgv
    qgy:f32[] = reduce_sum[axes=(0,)] qgx
    qgz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qha:f32[] = div -2.0 qgz
    qhb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qha
    qhc:f32[200] = mul qhb qgs
    qhd:f32[] = reduce_sum[axes=(0,)] qhc
    qhe:f32[] = mul 0.0010000000474974513 qgy
    qhf:f32[] = sub qgn qhe
    qhg:f32[] = mul 0.0010000000474974513 qhd
    qhh:f32[] = sub qgp qhg
    qhi:f32[200] = mul qhf a
    qhj:f32[200] = add qhi qhh
    qhk:f32[200] = sub b qhj
    qhl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qhm:f32[] = div -2.0 qhl
    qhn:f32[200] = mul a qhk
    qho:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qhm
    qhp:f32[200] = mul qho qhn
    qhq:f32[] = reduce_sum[axes=(0,)] qhp
    qhr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qhs:f32[] = div -2.0 qhr
    qht:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qhs
    qhu:f32[200] = mul qht qhk
    qhv:f32[] = reduce_sum[axes=(0,)] qhu
    qhw:f32[] = mul 0.0010000000474974513 qhq
    qhx:f32[] = sub qhf qhw
    qhy:f32[] = mul 0.0010000000474974513 qhv
    qhz:f32[] = sub qhh qhy
    qia:f32[200] = mul qhx a
    qib:f32[200] = add qia qhz
    qic:f32[200] = sub b qib
    qid:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qie:f32[] = div -2.0 qid
    qif:f32[200] = mul a qic
    qig:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qie
    qih:f32[200] = mul qig qif
    qii:f32[] = reduce_sum[axes=(0,)] qih
    qij:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qik:f32[] = div -2.0 qij
    qil:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qik
    qim:f32[200] = mul qil qic
    qin:f32[] = reduce_sum[axes=(0,)] qim
    qio:f32[] = mul 0.0010000000474974513 qii
    qip:f32[] = sub qhx qio
    qiq:f32[] = mul 0.0010000000474974513 qin
    qir:f32[] = sub qhz qiq
    qis:f32[200] = mul qip a
    qit:f32[200] = add qis qir
    qiu:f32[200] = sub b qit
    qiv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qiw:f32[] = div -2.0 qiv
    qix:f32[200] = mul a qiu
    qiy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qiw
    qiz:f32[200] = mul qiy qix
    qja:f32[] = reduce_sum[axes=(0,)] qiz
    qjb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qjc:f32[] = div -2.0 qjb
    qjd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qjc
    qje:f32[200] = mul qjd qiu
    qjf:f32[] = reduce_sum[axes=(0,)] qje
    qjg:f32[] = mul 0.0010000000474974513 qja
    qjh:f32[] = sub qip qjg
    qji:f32[] = mul 0.0010000000474974513 qjf
    qjj:f32[] = sub qir qji
    qjk:f32[200] = mul qjh a
    qjl:f32[200] = add qjk qjj
    qjm:f32[200] = sub b qjl
    qjn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qjo:f32[] = div -2.0 qjn
    qjp:f32[200] = mul a qjm
    qjq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qjo
    qjr:f32[200] = mul qjq qjp
    qjs:f32[] = reduce_sum[axes=(0,)] qjr
    qjt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qju:f32[] = div -2.0 qjt
    qjv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qju
    qjw:f32[200] = mul qjv qjm
    qjx:f32[] = reduce_sum[axes=(0,)] qjw
    qjy:f32[] = mul 0.0010000000474974513 qjs
    qjz:f32[] = sub qjh qjy
    qka:f32[] = mul 0.0010000000474974513 qjx
    qkb:f32[] = sub qjj qka
    qkc:f32[200] = mul qjz a
    qkd:f32[200] = add qkc qkb
    qke:f32[200] = sub b qkd
    qkf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qkg:f32[] = div -2.0 qkf
    qkh:f32[200] = mul a qke
    qki:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qkg
    qkj:f32[200] = mul qki qkh
    qkk:f32[] = reduce_sum[axes=(0,)] qkj
    qkl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qkm:f32[] = div -2.0 qkl
    qkn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qkm
    qko:f32[200] = mul qkn qke
    qkp:f32[] = reduce_sum[axes=(0,)] qko
    qkq:f32[] = mul 0.0010000000474974513 qkk
    qkr:f32[] = sub qjz qkq
    qks:f32[] = mul 0.0010000000474974513 qkp
    qkt:f32[] = sub qkb qks
    qku:f32[200] = mul qkr a
    qkv:f32[200] = add qku qkt
    qkw:f32[200] = sub b qkv
    qkx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qky:f32[] = div -2.0 qkx
    qkz:f32[200] = mul a qkw
    qla:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qky
    qlb:f32[200] = mul qla qkz
    qlc:f32[] = reduce_sum[axes=(0,)] qlb
    qld:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qle:f32[] = div -2.0 qld
    qlf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qle
    qlg:f32[200] = mul qlf qkw
    qlh:f32[] = reduce_sum[axes=(0,)] qlg
    qli:f32[] = mul 0.0010000000474974513 qlc
    qlj:f32[] = sub qkr qli
    qlk:f32[] = mul 0.0010000000474974513 qlh
    qll:f32[] = sub qkt qlk
    qlm:f32[200] = mul qlj a
    qln:f32[200] = add qlm qll
    qlo:f32[200] = sub b qln
    qlp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qlq:f32[] = div -2.0 qlp
    qlr:f32[200] = mul a qlo
    qls:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qlq
    qlt:f32[200] = mul qls qlr
    qlu:f32[] = reduce_sum[axes=(0,)] qlt
    qlv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qlw:f32[] = div -2.0 qlv
    qlx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qlw
    qly:f32[200] = mul qlx qlo
    qlz:f32[] = reduce_sum[axes=(0,)] qly
    qma:f32[] = mul 0.0010000000474974513 qlu
    qmb:f32[] = sub qlj qma
    qmc:f32[] = mul 0.0010000000474974513 qlz
    qmd:f32[] = sub qll qmc
    qme:f32[200] = mul qmb a
    qmf:f32[200] = add qme qmd
    qmg:f32[200] = sub b qmf
    qmh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qmi:f32[] = div -2.0 qmh
    qmj:f32[200] = mul a qmg
    qmk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qmi
    qml:f32[200] = mul qmk qmj
    qmm:f32[] = reduce_sum[axes=(0,)] qml
    qmn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qmo:f32[] = div -2.0 qmn
    qmp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qmo
    qmq:f32[200] = mul qmp qmg
    qmr:f32[] = reduce_sum[axes=(0,)] qmq
    qms:f32[] = mul 0.0010000000474974513 qmm
    qmt:f32[] = sub qmb qms
    qmu:f32[] = mul 0.0010000000474974513 qmr
    qmv:f32[] = sub qmd qmu
    qmw:f32[200] = mul qmt a
    qmx:f32[200] = add qmw qmv
    qmy:f32[200] = sub b qmx
    qmz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qna:f32[] = div -2.0 qmz
    qnb:f32[200] = mul a qmy
    qnc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qna
    qnd:f32[200] = mul qnc qnb
    qne:f32[] = reduce_sum[axes=(0,)] qnd
    qnf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qng:f32[] = div -2.0 qnf
    qnh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qng
    qni:f32[200] = mul qnh qmy
    qnj:f32[] = reduce_sum[axes=(0,)] qni
    qnk:f32[] = mul 0.0010000000474974513 qne
    qnl:f32[] = sub qmt qnk
    qnm:f32[] = mul 0.0010000000474974513 qnj
    qnn:f32[] = sub qmv qnm
    qno:f32[200] = mul qnl a
    qnp:f32[200] = add qno qnn
    qnq:f32[200] = sub b qnp
    qnr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qns:f32[] = div -2.0 qnr
    qnt:f32[200] = mul a qnq
    qnu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qns
    qnv:f32[200] = mul qnu qnt
    qnw:f32[] = reduce_sum[axes=(0,)] qnv
    qnx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qny:f32[] = div -2.0 qnx
    qnz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qny
    qoa:f32[200] = mul qnz qnq
    qob:f32[] = reduce_sum[axes=(0,)] qoa
    qoc:f32[] = mul 0.0010000000474974513 qnw
    qod:f32[] = sub qnl qoc
    qoe:f32[] = mul 0.0010000000474974513 qob
    qof:f32[] = sub qnn qoe
    qog:f32[200] = mul qod a
    qoh:f32[200] = add qog qof
    qoi:f32[200] = sub b qoh
    qoj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qok:f32[] = div -2.0 qoj
    qol:f32[200] = mul a qoi
    qom:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qok
    qon:f32[200] = mul qom qol
    qoo:f32[] = reduce_sum[axes=(0,)] qon
    qop:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qoq:f32[] = div -2.0 qop
    qor:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qoq
    qos:f32[200] = mul qor qoi
    qot:f32[] = reduce_sum[axes=(0,)] qos
    qou:f32[] = mul 0.0010000000474974513 qoo
    qov:f32[] = sub qod qou
    qow:f32[] = mul 0.0010000000474974513 qot
    qox:f32[] = sub qof qow
    qoy:f32[200] = mul qov a
    qoz:f32[200] = add qoy qox
    qpa:f32[200] = sub b qoz
    qpb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qpc:f32[] = div -2.0 qpb
    qpd:f32[200] = mul a qpa
    qpe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qpc
    qpf:f32[200] = mul qpe qpd
    qpg:f32[] = reduce_sum[axes=(0,)] qpf
    qph:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qpi:f32[] = div -2.0 qph
    qpj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qpi
    qpk:f32[200] = mul qpj qpa
    qpl:f32[] = reduce_sum[axes=(0,)] qpk
    qpm:f32[] = mul 0.0010000000474974513 qpg
    qpn:f32[] = sub qov qpm
    qpo:f32[] = mul 0.0010000000474974513 qpl
    qpp:f32[] = sub qox qpo
    qpq:f32[200] = mul qpn a
    qpr:f32[200] = add qpq qpp
    qps:f32[200] = sub b qpr
    qpt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qpu:f32[] = div -2.0 qpt
    qpv:f32[200] = mul a qps
    qpw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qpu
    qpx:f32[200] = mul qpw qpv
    qpy:f32[] = reduce_sum[axes=(0,)] qpx
    qpz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qqa:f32[] = div -2.0 qpz
    qqb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qqa
    qqc:f32[200] = mul qqb qps
    qqd:f32[] = reduce_sum[axes=(0,)] qqc
    qqe:f32[] = mul 0.0010000000474974513 qpy
    qqf:f32[] = sub qpn qqe
    qqg:f32[] = mul 0.0010000000474974513 qqd
    qqh:f32[] = sub qpp qqg
    qqi:f32[200] = mul qqf a
    qqj:f32[200] = add qqi qqh
    qqk:f32[200] = sub b qqj
    qql:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qqm:f32[] = div -2.0 qql
    qqn:f32[200] = mul a qqk
    qqo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qqm
    qqp:f32[200] = mul qqo qqn
    qqq:f32[] = reduce_sum[axes=(0,)] qqp
    qqr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qqs:f32[] = div -2.0 qqr
    qqt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qqs
    qqu:f32[200] = mul qqt qqk
    qqv:f32[] = reduce_sum[axes=(0,)] qqu
    qqw:f32[] = mul 0.0010000000474974513 qqq
    qqx:f32[] = sub qqf qqw
    qqy:f32[] = mul 0.0010000000474974513 qqv
    qqz:f32[] = sub qqh qqy
    qra:f32[200] = mul qqx a
    qrb:f32[200] = add qra qqz
    qrc:f32[200] = sub b qrb
    qrd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qre:f32[] = div -2.0 qrd
    qrf:f32[200] = mul a qrc
    qrg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qre
    qrh:f32[200] = mul qrg qrf
    qri:f32[] = reduce_sum[axes=(0,)] qrh
    qrj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qrk:f32[] = div -2.0 qrj
    qrl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qrk
    qrm:f32[200] = mul qrl qrc
    qrn:f32[] = reduce_sum[axes=(0,)] qrm
    qro:f32[] = mul 0.0010000000474974513 qri
    qrp:f32[] = sub qqx qro
    qrq:f32[] = mul 0.0010000000474974513 qrn
    qrr:f32[] = sub qqz qrq
    qrs:f32[200] = mul qrp a
    qrt:f32[200] = add qrs qrr
    qru:f32[200] = sub b qrt
    qrv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qrw:f32[] = div -2.0 qrv
    qrx:f32[200] = mul a qru
    qry:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qrw
    qrz:f32[200] = mul qry qrx
    qsa:f32[] = reduce_sum[axes=(0,)] qrz
    qsb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qsc:f32[] = div -2.0 qsb
    qsd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qsc
    qse:f32[200] = mul qsd qru
    qsf:f32[] = reduce_sum[axes=(0,)] qse
    qsg:f32[] = mul 0.0010000000474974513 qsa
    qsh:f32[] = sub qrp qsg
    qsi:f32[] = mul 0.0010000000474974513 qsf
    qsj:f32[] = sub qrr qsi
    qsk:f32[200] = mul qsh a
    qsl:f32[200] = add qsk qsj
    qsm:f32[200] = sub b qsl
    qsn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qso:f32[] = div -2.0 qsn
    qsp:f32[200] = mul a qsm
    qsq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qso
    qsr:f32[200] = mul qsq qsp
    qss:f32[] = reduce_sum[axes=(0,)] qsr
    qst:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qsu:f32[] = div -2.0 qst
    qsv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qsu
    qsw:f32[200] = mul qsv qsm
    qsx:f32[] = reduce_sum[axes=(0,)] qsw
    qsy:f32[] = mul 0.0010000000474974513 qss
    qsz:f32[] = sub qsh qsy
    qta:f32[] = mul 0.0010000000474974513 qsx
    qtb:f32[] = sub qsj qta
    qtc:f32[200] = mul qsz a
    qtd:f32[200] = add qtc qtb
    qte:f32[200] = sub b qtd
    qtf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qtg:f32[] = div -2.0 qtf
    qth:f32[200] = mul a qte
    qti:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qtg
    qtj:f32[200] = mul qti qth
    qtk:f32[] = reduce_sum[axes=(0,)] qtj
    qtl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qtm:f32[] = div -2.0 qtl
    qtn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qtm
    qto:f32[200] = mul qtn qte
    qtp:f32[] = reduce_sum[axes=(0,)] qto
    qtq:f32[] = mul 0.0010000000474974513 qtk
    qtr:f32[] = sub qsz qtq
    qts:f32[] = mul 0.0010000000474974513 qtp
    qtt:f32[] = sub qtb qts
    qtu:f32[200] = mul qtr a
    qtv:f32[200] = add qtu qtt
    qtw:f32[200] = sub b qtv
    qtx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qty:f32[] = div -2.0 qtx
    qtz:f32[200] = mul a qtw
    qua:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qty
    qub:f32[200] = mul qua qtz
    quc:f32[] = reduce_sum[axes=(0,)] qub
    qud:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    que:f32[] = div -2.0 qud
    quf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] que
    qug:f32[200] = mul quf qtw
    quh:f32[] = reduce_sum[axes=(0,)] qug
    qui:f32[] = mul 0.0010000000474974513 quc
    quj:f32[] = sub qtr qui
    quk:f32[] = mul 0.0010000000474974513 quh
    qul:f32[] = sub qtt quk
    qum:f32[200] = mul quj a
    qun:f32[200] = add qum qul
    quo:f32[200] = sub b qun
    qup:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    quq:f32[] = div -2.0 qup
    qur:f32[200] = mul a quo
    qus:f32[] = convert_element_type[new_dtype=float32 weak_type=False] quq
    qut:f32[200] = mul qus qur
    quu:f32[] = reduce_sum[axes=(0,)] qut
    quv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    quw:f32[] = div -2.0 quv
    qux:f32[] = convert_element_type[new_dtype=float32 weak_type=False] quw
    quy:f32[200] = mul qux quo
    quz:f32[] = reduce_sum[axes=(0,)] quy
    qva:f32[] = mul 0.0010000000474974513 quu
    qvb:f32[] = sub quj qva
    qvc:f32[] = mul 0.0010000000474974513 quz
    qvd:f32[] = sub qul qvc
    qve:f32[200] = mul qvb a
    qvf:f32[200] = add qve qvd
    qvg:f32[200] = sub b qvf
    qvh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qvi:f32[] = div -2.0 qvh
    qvj:f32[200] = mul a qvg
    qvk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qvi
    qvl:f32[200] = mul qvk qvj
    qvm:f32[] = reduce_sum[axes=(0,)] qvl
    qvn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qvo:f32[] = div -2.0 qvn
    qvp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qvo
    qvq:f32[200] = mul qvp qvg
    qvr:f32[] = reduce_sum[axes=(0,)] qvq
    qvs:f32[] = mul 0.0010000000474974513 qvm
    qvt:f32[] = sub qvb qvs
    qvu:f32[] = mul 0.0010000000474974513 qvr
    qvv:f32[] = sub qvd qvu
    qvw:f32[200] = mul qvt a
    qvx:f32[200] = add qvw qvv
    qvy:f32[200] = sub b qvx
    qvz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qwa:f32[] = div -2.0 qvz
    qwb:f32[200] = mul a qvy
    qwc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qwa
    qwd:f32[200] = mul qwc qwb
    qwe:f32[] = reduce_sum[axes=(0,)] qwd
    qwf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qwg:f32[] = div -2.0 qwf
    qwh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qwg
    qwi:f32[200] = mul qwh qvy
    qwj:f32[] = reduce_sum[axes=(0,)] qwi
    qwk:f32[] = mul 0.0010000000474974513 qwe
    qwl:f32[] = sub qvt qwk
    qwm:f32[] = mul 0.0010000000474974513 qwj
    qwn:f32[] = sub qvv qwm
    qwo:f32[200] = mul qwl a
    qwp:f32[200] = add qwo qwn
    qwq:f32[200] = sub b qwp
    qwr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qws:f32[] = div -2.0 qwr
    qwt:f32[200] = mul a qwq
    qwu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qws
    qwv:f32[200] = mul qwu qwt
    qww:f32[] = reduce_sum[axes=(0,)] qwv
    qwx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qwy:f32[] = div -2.0 qwx
    qwz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qwy
    qxa:f32[200] = mul qwz qwq
    qxb:f32[] = reduce_sum[axes=(0,)] qxa
    qxc:f32[] = mul 0.0010000000474974513 qww
    qxd:f32[] = sub qwl qxc
    qxe:f32[] = mul 0.0010000000474974513 qxb
    qxf:f32[] = sub qwn qxe
    qxg:f32[200] = mul qxd a
    qxh:f32[200] = add qxg qxf
    qxi:f32[200] = sub b qxh
    qxj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qxk:f32[] = div -2.0 qxj
    qxl:f32[200] = mul a qxi
    qxm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qxk
    qxn:f32[200] = mul qxm qxl
    qxo:f32[] = reduce_sum[axes=(0,)] qxn
    qxp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qxq:f32[] = div -2.0 qxp
    qxr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qxq
    qxs:f32[200] = mul qxr qxi
    qxt:f32[] = reduce_sum[axes=(0,)] qxs
    qxu:f32[] = mul 0.0010000000474974513 qxo
    qxv:f32[] = sub qxd qxu
    qxw:f32[] = mul 0.0010000000474974513 qxt
    qxx:f32[] = sub qxf qxw
    qxy:f32[200] = mul qxv a
    qxz:f32[200] = add qxy qxx
    qya:f32[200] = sub b qxz
    qyb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qyc:f32[] = div -2.0 qyb
    qyd:f32[200] = mul a qya
    qye:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qyc
    qyf:f32[200] = mul qye qyd
    qyg:f32[] = reduce_sum[axes=(0,)] qyf
    qyh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qyi:f32[] = div -2.0 qyh
    qyj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qyi
    qyk:f32[200] = mul qyj qya
    qyl:f32[] = reduce_sum[axes=(0,)] qyk
    qym:f32[] = mul 0.0010000000474974513 qyg
    qyn:f32[] = sub qxv qym
    qyo:f32[] = mul 0.0010000000474974513 qyl
    qyp:f32[] = sub qxx qyo
    qyq:f32[200] = mul qyn a
    qyr:f32[200] = add qyq qyp
    qys:f32[200] = sub b qyr
    qyt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qyu:f32[] = div -2.0 qyt
    qyv:f32[200] = mul a qys
    qyw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qyu
    qyx:f32[200] = mul qyw qyv
    qyy:f32[] = reduce_sum[axes=(0,)] qyx
    qyz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qza:f32[] = div -2.0 qyz
    qzb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qza
    qzc:f32[200] = mul qzb qys
    qzd:f32[] = reduce_sum[axes=(0,)] qzc
    qze:f32[] = mul 0.0010000000474974513 qyy
    qzf:f32[] = sub qyn qze
    qzg:f32[] = mul 0.0010000000474974513 qzd
    qzh:f32[] = sub qyp qzg
    qzi:f32[200] = mul qzf a
    qzj:f32[200] = add qzi qzh
    qzk:f32[200] = sub b qzj
    qzl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qzm:f32[] = div -2.0 qzl
    qzn:f32[200] = mul a qzk
    qzo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qzm
    qzp:f32[200] = mul qzo qzn
    qzq:f32[] = reduce_sum[axes=(0,)] qzp
    qzr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    qzs:f32[] = div -2.0 qzr
    qzt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] qzs
    qzu:f32[200] = mul qzt qzk
    qzv:f32[] = reduce_sum[axes=(0,)] qzu
    qzw:f32[] = mul 0.0010000000474974513 qzq
    qzx:f32[] = sub qzf qzw
    qzy:f32[] = mul 0.0010000000474974513 qzv
    qzz:f32[] = sub qzh qzy
    raa:f32[200] = mul qzx a
    rab:f32[200] = add raa qzz
    rac:f32[200] = sub b rab
    rad:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rae:f32[] = div -2.0 rad
    raf:f32[200] = mul a rac
    rag:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rae
    rah:f32[200] = mul rag raf
    rai:f32[] = reduce_sum[axes=(0,)] rah
    raj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rak:f32[] = div -2.0 raj
    ral:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rak
    ram:f32[200] = mul ral rac
    ran:f32[] = reduce_sum[axes=(0,)] ram
    rao:f32[] = mul 0.0010000000474974513 rai
    rap:f32[] = sub qzx rao
    raq:f32[] = mul 0.0010000000474974513 ran
    rar:f32[] = sub qzz raq
    ras:f32[200] = mul rap a
    rat:f32[200] = add ras rar
    rau:f32[200] = sub b rat
    rav:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    raw:f32[] = div -2.0 rav
    rax:f32[200] = mul a rau
    ray:f32[] = convert_element_type[new_dtype=float32 weak_type=False] raw
    raz:f32[200] = mul ray rax
    rba:f32[] = reduce_sum[axes=(0,)] raz
    rbb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rbc:f32[] = div -2.0 rbb
    rbd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rbc
    rbe:f32[200] = mul rbd rau
    rbf:f32[] = reduce_sum[axes=(0,)] rbe
    rbg:f32[] = mul 0.0010000000474974513 rba
    rbh:f32[] = sub rap rbg
    rbi:f32[] = mul 0.0010000000474974513 rbf
    rbj:f32[] = sub rar rbi
    rbk:f32[200] = mul rbh a
    rbl:f32[200] = add rbk rbj
    rbm:f32[200] = sub b rbl
    rbn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rbo:f32[] = div -2.0 rbn
    rbp:f32[200] = mul a rbm
    rbq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rbo
    rbr:f32[200] = mul rbq rbp
    rbs:f32[] = reduce_sum[axes=(0,)] rbr
    rbt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rbu:f32[] = div -2.0 rbt
    rbv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rbu
    rbw:f32[200] = mul rbv rbm
    rbx:f32[] = reduce_sum[axes=(0,)] rbw
    rby:f32[] = mul 0.0010000000474974513 rbs
    rbz:f32[] = sub rbh rby
    rca:f32[] = mul 0.0010000000474974513 rbx
    rcb:f32[] = sub rbj rca
    rcc:f32[200] = mul rbz a
    rcd:f32[200] = add rcc rcb
    rce:f32[200] = sub b rcd
    rcf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rcg:f32[] = div -2.0 rcf
    rch:f32[200] = mul a rce
    rci:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rcg
    rcj:f32[200] = mul rci rch
    rck:f32[] = reduce_sum[axes=(0,)] rcj
    rcl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rcm:f32[] = div -2.0 rcl
    rcn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rcm
    rco:f32[200] = mul rcn rce
    rcp:f32[] = reduce_sum[axes=(0,)] rco
    rcq:f32[] = mul 0.0010000000474974513 rck
    rcr:f32[] = sub rbz rcq
    rcs:f32[] = mul 0.0010000000474974513 rcp
    rct:f32[] = sub rcb rcs
    rcu:f32[200] = mul rcr a
    rcv:f32[200] = add rcu rct
    rcw:f32[200] = sub b rcv
    rcx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rcy:f32[] = div -2.0 rcx
    rcz:f32[200] = mul a rcw
    rda:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rcy
    rdb:f32[200] = mul rda rcz
    rdc:f32[] = reduce_sum[axes=(0,)] rdb
    rdd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rde:f32[] = div -2.0 rdd
    rdf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rde
    rdg:f32[200] = mul rdf rcw
    rdh:f32[] = reduce_sum[axes=(0,)] rdg
    rdi:f32[] = mul 0.0010000000474974513 rdc
    rdj:f32[] = sub rcr rdi
    rdk:f32[] = mul 0.0010000000474974513 rdh
    rdl:f32[] = sub rct rdk
    rdm:f32[200] = mul rdj a
    rdn:f32[200] = add rdm rdl
    rdo:f32[200] = sub b rdn
    rdp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rdq:f32[] = div -2.0 rdp
    rdr:f32[200] = mul a rdo
    rds:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rdq
    rdt:f32[200] = mul rds rdr
    rdu:f32[] = reduce_sum[axes=(0,)] rdt
    rdv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rdw:f32[] = div -2.0 rdv
    rdx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rdw
    rdy:f32[200] = mul rdx rdo
    rdz:f32[] = reduce_sum[axes=(0,)] rdy
    rea:f32[] = mul 0.0010000000474974513 rdu
    reb:f32[] = sub rdj rea
    rec:f32[] = mul 0.0010000000474974513 rdz
    red:f32[] = sub rdl rec
    ree:f32[200] = mul reb a
    ref:f32[200] = add ree red
    reg:f32[200] = sub b ref
    reh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rei:f32[] = div -2.0 reh
    rej:f32[200] = mul a reg
    rek:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rei
    rel:f32[200] = mul rek rej
    rem:f32[] = reduce_sum[axes=(0,)] rel
    ren:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    reo:f32[] = div -2.0 ren
    rep:f32[] = convert_element_type[new_dtype=float32 weak_type=False] reo
    req:f32[200] = mul rep reg
    rer:f32[] = reduce_sum[axes=(0,)] req
    res:f32[] = mul 0.0010000000474974513 rem
    ret:f32[] = sub reb res
    reu:f32[] = mul 0.0010000000474974513 rer
    rev:f32[] = sub red reu
    rew:f32[200] = mul ret a
    rex:f32[200] = add rew rev
    rey:f32[200] = sub b rex
    rez:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rfa:f32[] = div -2.0 rez
    rfb:f32[200] = mul a rey
    rfc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rfa
    rfd:f32[200] = mul rfc rfb
    rfe:f32[] = reduce_sum[axes=(0,)] rfd
    rff:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rfg:f32[] = div -2.0 rff
    rfh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rfg
    rfi:f32[200] = mul rfh rey
    rfj:f32[] = reduce_sum[axes=(0,)] rfi
    rfk:f32[] = mul 0.0010000000474974513 rfe
    rfl:f32[] = sub ret rfk
    rfm:f32[] = mul 0.0010000000474974513 rfj
    rfn:f32[] = sub rev rfm
    rfo:f32[200] = mul rfl a
    rfp:f32[200] = add rfo rfn
    rfq:f32[200] = sub b rfp
    rfr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rfs:f32[] = div -2.0 rfr
    rft:f32[200] = mul a rfq
    rfu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rfs
    rfv:f32[200] = mul rfu rft
    rfw:f32[] = reduce_sum[axes=(0,)] rfv
    rfx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rfy:f32[] = div -2.0 rfx
    rfz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rfy
    rga:f32[200] = mul rfz rfq
    rgb:f32[] = reduce_sum[axes=(0,)] rga
    rgc:f32[] = mul 0.0010000000474974513 rfw
    rgd:f32[] = sub rfl rgc
    rge:f32[] = mul 0.0010000000474974513 rgb
    rgf:f32[] = sub rfn rge
    rgg:f32[200] = mul rgd a
    rgh:f32[200] = add rgg rgf
    rgi:f32[200] = sub b rgh
    rgj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rgk:f32[] = div -2.0 rgj
    rgl:f32[200] = mul a rgi
    rgm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rgk
    rgn:f32[200] = mul rgm rgl
    rgo:f32[] = reduce_sum[axes=(0,)] rgn
    rgp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rgq:f32[] = div -2.0 rgp
    rgr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rgq
    rgs:f32[200] = mul rgr rgi
    rgt:f32[] = reduce_sum[axes=(0,)] rgs
    rgu:f32[] = mul 0.0010000000474974513 rgo
    rgv:f32[] = sub rgd rgu
    rgw:f32[] = mul 0.0010000000474974513 rgt
    rgx:f32[] = sub rgf rgw
    rgy:f32[200] = mul rgv a
    rgz:f32[200] = add rgy rgx
    rha:f32[200] = sub b rgz
    rhb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rhc:f32[] = div -2.0 rhb
    rhd:f32[200] = mul a rha
    rhe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rhc
    rhf:f32[200] = mul rhe rhd
    rhg:f32[] = reduce_sum[axes=(0,)] rhf
    rhh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rhi:f32[] = div -2.0 rhh
    rhj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rhi
    rhk:f32[200] = mul rhj rha
    rhl:f32[] = reduce_sum[axes=(0,)] rhk
    rhm:f32[] = mul 0.0010000000474974513 rhg
    rhn:f32[] = sub rgv rhm
    rho:f32[] = mul 0.0010000000474974513 rhl
    rhp:f32[] = sub rgx rho
    rhq:f32[200] = mul rhn a
    rhr:f32[200] = add rhq rhp
    rhs:f32[200] = sub b rhr
    rht:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rhu:f32[] = div -2.0 rht
    rhv:f32[200] = mul a rhs
    rhw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rhu
    rhx:f32[200] = mul rhw rhv
    rhy:f32[] = reduce_sum[axes=(0,)] rhx
    rhz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ria:f32[] = div -2.0 rhz
    rib:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ria
    ric:f32[200] = mul rib rhs
    rid:f32[] = reduce_sum[axes=(0,)] ric
    rie:f32[] = mul 0.0010000000474974513 rhy
    rif:f32[] = sub rhn rie
    rig:f32[] = mul 0.0010000000474974513 rid
    rih:f32[] = sub rhp rig
    rii:f32[200] = mul rif a
    rij:f32[200] = add rii rih
    rik:f32[200] = sub b rij
    ril:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rim:f32[] = div -2.0 ril
    rin:f32[200] = mul a rik
    rio:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rim
    rip:f32[200] = mul rio rin
    riq:f32[] = reduce_sum[axes=(0,)] rip
    rir:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ris:f32[] = div -2.0 rir
    rit:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ris
    riu:f32[200] = mul rit rik
    riv:f32[] = reduce_sum[axes=(0,)] riu
    riw:f32[] = mul 0.0010000000474974513 riq
    rix:f32[] = sub rif riw
    riy:f32[] = mul 0.0010000000474974513 riv
    riz:f32[] = sub rih riy
    rja:f32[200] = mul rix a
    rjb:f32[200] = add rja riz
    rjc:f32[200] = sub b rjb
    rjd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rje:f32[] = div -2.0 rjd
    rjf:f32[200] = mul a rjc
    rjg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rje
    rjh:f32[200] = mul rjg rjf
    rji:f32[] = reduce_sum[axes=(0,)] rjh
    rjj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rjk:f32[] = div -2.0 rjj
    rjl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rjk
    rjm:f32[200] = mul rjl rjc
    rjn:f32[] = reduce_sum[axes=(0,)] rjm
    rjo:f32[] = mul 0.0010000000474974513 rji
    rjp:f32[] = sub rix rjo
    rjq:f32[] = mul 0.0010000000474974513 rjn
    rjr:f32[] = sub riz rjq
    rjs:f32[200] = mul rjp a
    rjt:f32[200] = add rjs rjr
    rju:f32[200] = sub b rjt
    rjv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rjw:f32[] = div -2.0 rjv
    rjx:f32[200] = mul a rju
    rjy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rjw
    rjz:f32[200] = mul rjy rjx
    rka:f32[] = reduce_sum[axes=(0,)] rjz
    rkb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rkc:f32[] = div -2.0 rkb
    rkd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rkc
    rke:f32[200] = mul rkd rju
    rkf:f32[] = reduce_sum[axes=(0,)] rke
    rkg:f32[] = mul 0.0010000000474974513 rka
    rkh:f32[] = sub rjp rkg
    rki:f32[] = mul 0.0010000000474974513 rkf
    rkj:f32[] = sub rjr rki
    rkk:f32[200] = mul rkh a
    rkl:f32[200] = add rkk rkj
    rkm:f32[200] = sub b rkl
    rkn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rko:f32[] = div -2.0 rkn
    rkp:f32[200] = mul a rkm
    rkq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rko
    rkr:f32[200] = mul rkq rkp
    rks:f32[] = reduce_sum[axes=(0,)] rkr
    rkt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rku:f32[] = div -2.0 rkt
    rkv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rku
    rkw:f32[200] = mul rkv rkm
    rkx:f32[] = reduce_sum[axes=(0,)] rkw
    rky:f32[] = mul 0.0010000000474974513 rks
    rkz:f32[] = sub rkh rky
    rla:f32[] = mul 0.0010000000474974513 rkx
    rlb:f32[] = sub rkj rla
    rlc:f32[200] = mul rkz a
    rld:f32[200] = add rlc rlb
    rle:f32[200] = sub b rld
    rlf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rlg:f32[] = div -2.0 rlf
    rlh:f32[200] = mul a rle
    rli:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rlg
    rlj:f32[200] = mul rli rlh
    rlk:f32[] = reduce_sum[axes=(0,)] rlj
    rll:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rlm:f32[] = div -2.0 rll
    rln:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rlm
    rlo:f32[200] = mul rln rle
    rlp:f32[] = reduce_sum[axes=(0,)] rlo
    rlq:f32[] = mul 0.0010000000474974513 rlk
    rlr:f32[] = sub rkz rlq
    rls:f32[] = mul 0.0010000000474974513 rlp
    rlt:f32[] = sub rlb rls
    rlu:f32[200] = mul rlr a
    rlv:f32[200] = add rlu rlt
    rlw:f32[200] = sub b rlv
    rlx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rly:f32[] = div -2.0 rlx
    rlz:f32[200] = mul a rlw
    rma:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rly
    rmb:f32[200] = mul rma rlz
    rmc:f32[] = reduce_sum[axes=(0,)] rmb
    rmd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rme:f32[] = div -2.0 rmd
    rmf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rme
    rmg:f32[200] = mul rmf rlw
    rmh:f32[] = reduce_sum[axes=(0,)] rmg
    rmi:f32[] = mul 0.0010000000474974513 rmc
    rmj:f32[] = sub rlr rmi
    rmk:f32[] = mul 0.0010000000474974513 rmh
    rml:f32[] = sub rlt rmk
    rmm:f32[200] = mul rmj a
    rmn:f32[200] = add rmm rml
    rmo:f32[200] = sub b rmn
    rmp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rmq:f32[] = div -2.0 rmp
    rmr:f32[200] = mul a rmo
    rms:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rmq
    rmt:f32[200] = mul rms rmr
    rmu:f32[] = reduce_sum[axes=(0,)] rmt
    rmv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rmw:f32[] = div -2.0 rmv
    rmx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rmw
    rmy:f32[200] = mul rmx rmo
    rmz:f32[] = reduce_sum[axes=(0,)] rmy
    rna:f32[] = mul 0.0010000000474974513 rmu
    rnb:f32[] = sub rmj rna
    rnc:f32[] = mul 0.0010000000474974513 rmz
    rnd:f32[] = sub rml rnc
    rne:f32[200] = mul rnb a
    rnf:f32[200] = add rne rnd
    rng:f32[200] = sub b rnf
    rnh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rni:f32[] = div -2.0 rnh
    rnj:f32[200] = mul a rng
    rnk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rni
    rnl:f32[200] = mul rnk rnj
    rnm:f32[] = reduce_sum[axes=(0,)] rnl
    rnn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rno:f32[] = div -2.0 rnn
    rnp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rno
    rnq:f32[200] = mul rnp rng
    rnr:f32[] = reduce_sum[axes=(0,)] rnq
    rns:f32[] = mul 0.0010000000474974513 rnm
    rnt:f32[] = sub rnb rns
    rnu:f32[] = mul 0.0010000000474974513 rnr
    rnv:f32[] = sub rnd rnu
    rnw:f32[200] = mul rnt a
    rnx:f32[200] = add rnw rnv
    rny:f32[200] = sub b rnx
    rnz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    roa:f32[] = div -2.0 rnz
    rob:f32[200] = mul a rny
    roc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] roa
    rod:f32[200] = mul roc rob
    roe:f32[] = reduce_sum[axes=(0,)] rod
    rof:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rog:f32[] = div -2.0 rof
    roh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rog
    roi:f32[200] = mul roh rny
    roj:f32[] = reduce_sum[axes=(0,)] roi
    rok:f32[] = mul 0.0010000000474974513 roe
    rol:f32[] = sub rnt rok
    rom:f32[] = mul 0.0010000000474974513 roj
    ron:f32[] = sub rnv rom
    roo:f32[200] = mul rol a
    rop:f32[200] = add roo ron
    roq:f32[200] = sub b rop
    ror:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ros:f32[] = div -2.0 ror
    rot:f32[200] = mul a roq
    rou:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ros
    rov:f32[200] = mul rou rot
    row:f32[] = reduce_sum[axes=(0,)] rov
    rox:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    roy:f32[] = div -2.0 rox
    roz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] roy
    rpa:f32[200] = mul roz roq
    rpb:f32[] = reduce_sum[axes=(0,)] rpa
    rpc:f32[] = mul 0.0010000000474974513 row
    rpd:f32[] = sub rol rpc
    rpe:f32[] = mul 0.0010000000474974513 rpb
    rpf:f32[] = sub ron rpe
    rpg:f32[200] = mul rpd a
    rph:f32[200] = add rpg rpf
    rpi:f32[200] = sub b rph
    rpj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rpk:f32[] = div -2.0 rpj
    rpl:f32[200] = mul a rpi
    rpm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rpk
    rpn:f32[200] = mul rpm rpl
    rpo:f32[] = reduce_sum[axes=(0,)] rpn
    rpp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rpq:f32[] = div -2.0 rpp
    rpr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rpq
    rps:f32[200] = mul rpr rpi
    rpt:f32[] = reduce_sum[axes=(0,)] rps
    rpu:f32[] = mul 0.0010000000474974513 rpo
    rpv:f32[] = sub rpd rpu
    rpw:f32[] = mul 0.0010000000474974513 rpt
    rpx:f32[] = sub rpf rpw
    rpy:f32[200] = mul rpv a
    rpz:f32[200] = add rpy rpx
    rqa:f32[200] = sub b rpz
    rqb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rqc:f32[] = div -2.0 rqb
    rqd:f32[200] = mul a rqa
    rqe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rqc
    rqf:f32[200] = mul rqe rqd
    rqg:f32[] = reduce_sum[axes=(0,)] rqf
    rqh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rqi:f32[] = div -2.0 rqh
    rqj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rqi
    rqk:f32[200] = mul rqj rqa
    rql:f32[] = reduce_sum[axes=(0,)] rqk
    rqm:f32[] = mul 0.0010000000474974513 rqg
    rqn:f32[] = sub rpv rqm
    rqo:f32[] = mul 0.0010000000474974513 rql
    rqp:f32[] = sub rpx rqo
    rqq:f32[200] = mul rqn a
    rqr:f32[200] = add rqq rqp
    rqs:f32[200] = sub b rqr
    rqt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rqu:f32[] = div -2.0 rqt
    rqv:f32[200] = mul a rqs
    rqw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rqu
    rqx:f32[200] = mul rqw rqv
    rqy:f32[] = reduce_sum[axes=(0,)] rqx
    rqz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rra:f32[] = div -2.0 rqz
    rrb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rra
    rrc:f32[200] = mul rrb rqs
    rrd:f32[] = reduce_sum[axes=(0,)] rrc
    rre:f32[] = mul 0.0010000000474974513 rqy
    rrf:f32[] = sub rqn rre
    rrg:f32[] = mul 0.0010000000474974513 rrd
    rrh:f32[] = sub rqp rrg
    rri:f32[200] = mul rrf a
    rrj:f32[200] = add rri rrh
    rrk:f32[200] = sub b rrj
    rrl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rrm:f32[] = div -2.0 rrl
    rrn:f32[200] = mul a rrk
    rro:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rrm
    rrp:f32[200] = mul rro rrn
    rrq:f32[] = reduce_sum[axes=(0,)] rrp
    rrr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rrs:f32[] = div -2.0 rrr
    rrt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rrs
    rru:f32[200] = mul rrt rrk
    rrv:f32[] = reduce_sum[axes=(0,)] rru
    rrw:f32[] = mul 0.0010000000474974513 rrq
    rrx:f32[] = sub rrf rrw
    rry:f32[] = mul 0.0010000000474974513 rrv
    rrz:f32[] = sub rrh rry
    rsa:f32[200] = mul rrx a
    rsb:f32[200] = add rsa rrz
    rsc:f32[200] = sub b rsb
    rsd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rse:f32[] = div -2.0 rsd
    rsf:f32[200] = mul a rsc
    rsg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rse
    rsh:f32[200] = mul rsg rsf
    rsi:f32[] = reduce_sum[axes=(0,)] rsh
    rsj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rsk:f32[] = div -2.0 rsj
    rsl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rsk
    rsm:f32[200] = mul rsl rsc
    rsn:f32[] = reduce_sum[axes=(0,)] rsm
    rso:f32[] = mul 0.0010000000474974513 rsi
    rsp:f32[] = sub rrx rso
    rsq:f32[] = mul 0.0010000000474974513 rsn
    rsr:f32[] = sub rrz rsq
    rss:f32[200] = mul rsp a
    rst:f32[200] = add rss rsr
    rsu:f32[200] = sub b rst
    rsv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rsw:f32[] = div -2.0 rsv
    rsx:f32[200] = mul a rsu
    rsy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rsw
    rsz:f32[200] = mul rsy rsx
    rta:f32[] = reduce_sum[axes=(0,)] rsz
    rtb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rtc:f32[] = div -2.0 rtb
    rtd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rtc
    rte:f32[200] = mul rtd rsu
    rtf:f32[] = reduce_sum[axes=(0,)] rte
    rtg:f32[] = mul 0.0010000000474974513 rta
    rth:f32[] = sub rsp rtg
    rti:f32[] = mul 0.0010000000474974513 rtf
    rtj:f32[] = sub rsr rti
    rtk:f32[200] = mul rth a
    rtl:f32[200] = add rtk rtj
    rtm:f32[200] = sub b rtl
    rtn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rto:f32[] = div -2.0 rtn
    rtp:f32[200] = mul a rtm
    rtq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rto
    rtr:f32[200] = mul rtq rtp
    rts:f32[] = reduce_sum[axes=(0,)] rtr
    rtt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rtu:f32[] = div -2.0 rtt
    rtv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rtu
    rtw:f32[200] = mul rtv rtm
    rtx:f32[] = reduce_sum[axes=(0,)] rtw
    rty:f32[] = mul 0.0010000000474974513 rts
    rtz:f32[] = sub rth rty
    rua:f32[] = mul 0.0010000000474974513 rtx
    rub:f32[] = sub rtj rua
    ruc:f32[200] = mul rtz a
    rud:f32[200] = add ruc rub
    rue:f32[200] = sub b rud
    ruf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rug:f32[] = div -2.0 ruf
    ruh:f32[200] = mul a rue
    rui:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rug
    ruj:f32[200] = mul rui ruh
    ruk:f32[] = reduce_sum[axes=(0,)] ruj
    rul:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rum:f32[] = div -2.0 rul
    run:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rum
    ruo:f32[200] = mul run rue
    rup:f32[] = reduce_sum[axes=(0,)] ruo
    ruq:f32[] = mul 0.0010000000474974513 ruk
    rur:f32[] = sub rtz ruq
    rus:f32[] = mul 0.0010000000474974513 rup
    rut:f32[] = sub rub rus
    ruu:f32[200] = mul rur a
    ruv:f32[200] = add ruu rut
    ruw:f32[200] = sub b ruv
    rux:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ruy:f32[] = div -2.0 rux
    ruz:f32[200] = mul a ruw
    rva:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ruy
    rvb:f32[200] = mul rva ruz
    rvc:f32[] = reduce_sum[axes=(0,)] rvb
    rvd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rve:f32[] = div -2.0 rvd
    rvf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rve
    rvg:f32[200] = mul rvf ruw
    rvh:f32[] = reduce_sum[axes=(0,)] rvg
    rvi:f32[] = mul 0.0010000000474974513 rvc
    rvj:f32[] = sub rur rvi
    rvk:f32[] = mul 0.0010000000474974513 rvh
    rvl:f32[] = sub rut rvk
    rvm:f32[200] = mul rvj a
    rvn:f32[200] = add rvm rvl
    rvo:f32[200] = sub b rvn
    rvp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rvq:f32[] = div -2.0 rvp
    rvr:f32[200] = mul a rvo
    rvs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rvq
    rvt:f32[200] = mul rvs rvr
    rvu:f32[] = reduce_sum[axes=(0,)] rvt
    rvv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rvw:f32[] = div -2.0 rvv
    rvx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rvw
    rvy:f32[200] = mul rvx rvo
    rvz:f32[] = reduce_sum[axes=(0,)] rvy
    rwa:f32[] = mul 0.0010000000474974513 rvu
    rwb:f32[] = sub rvj rwa
    rwc:f32[] = mul 0.0010000000474974513 rvz
    rwd:f32[] = sub rvl rwc
    rwe:f32[200] = mul rwb a
    rwf:f32[200] = add rwe rwd
    rwg:f32[200] = sub b rwf
    rwh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rwi:f32[] = div -2.0 rwh
    rwj:f32[200] = mul a rwg
    rwk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rwi
    rwl:f32[200] = mul rwk rwj
    rwm:f32[] = reduce_sum[axes=(0,)] rwl
    rwn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rwo:f32[] = div -2.0 rwn
    rwp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rwo
    rwq:f32[200] = mul rwp rwg
    rwr:f32[] = reduce_sum[axes=(0,)] rwq
    rws:f32[] = mul 0.0010000000474974513 rwm
    rwt:f32[] = sub rwb rws
    rwu:f32[] = mul 0.0010000000474974513 rwr
    rwv:f32[] = sub rwd rwu
    rww:f32[200] = mul rwt a
    rwx:f32[200] = add rww rwv
    rwy:f32[200] = sub b rwx
    rwz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rxa:f32[] = div -2.0 rwz
    rxb:f32[200] = mul a rwy
    rxc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rxa
    rxd:f32[200] = mul rxc rxb
    rxe:f32[] = reduce_sum[axes=(0,)] rxd
    rxf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rxg:f32[] = div -2.0 rxf
    rxh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rxg
    rxi:f32[200] = mul rxh rwy
    rxj:f32[] = reduce_sum[axes=(0,)] rxi
    rxk:f32[] = mul 0.0010000000474974513 rxe
    rxl:f32[] = sub rwt rxk
    rxm:f32[] = mul 0.0010000000474974513 rxj
    rxn:f32[] = sub rwv rxm
    rxo:f32[200] = mul rxl a
    rxp:f32[200] = add rxo rxn
    rxq:f32[200] = sub b rxp
    rxr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rxs:f32[] = div -2.0 rxr
    rxt:f32[200] = mul a rxq
    rxu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rxs
    rxv:f32[200] = mul rxu rxt
    rxw:f32[] = reduce_sum[axes=(0,)] rxv
    rxx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rxy:f32[] = div -2.0 rxx
    rxz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rxy
    rya:f32[200] = mul rxz rxq
    ryb:f32[] = reduce_sum[axes=(0,)] rya
    ryc:f32[] = mul 0.0010000000474974513 rxw
    ryd:f32[] = sub rxl ryc
    rye:f32[] = mul 0.0010000000474974513 ryb
    ryf:f32[] = sub rxn rye
    ryg:f32[200] = mul ryd a
    ryh:f32[200] = add ryg ryf
    ryi:f32[200] = sub b ryh
    ryj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ryk:f32[] = div -2.0 ryj
    ryl:f32[200] = mul a ryi
    rym:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ryk
    ryn:f32[200] = mul rym ryl
    ryo:f32[] = reduce_sum[axes=(0,)] ryn
    ryp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ryq:f32[] = div -2.0 ryp
    ryr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ryq
    rys:f32[200] = mul ryr ryi
    ryt:f32[] = reduce_sum[axes=(0,)] rys
    ryu:f32[] = mul 0.0010000000474974513 ryo
    ryv:f32[] = sub ryd ryu
    ryw:f32[] = mul 0.0010000000474974513 ryt
    ryx:f32[] = sub ryf ryw
    ryy:f32[200] = mul ryv a
    ryz:f32[200] = add ryy ryx
    rza:f32[200] = sub b ryz
    rzb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rzc:f32[] = div -2.0 rzb
    rzd:f32[200] = mul a rza
    rze:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rzc
    rzf:f32[200] = mul rze rzd
    rzg:f32[] = reduce_sum[axes=(0,)] rzf
    rzh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rzi:f32[] = div -2.0 rzh
    rzj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rzi
    rzk:f32[200] = mul rzj rza
    rzl:f32[] = reduce_sum[axes=(0,)] rzk
    rzm:f32[] = mul 0.0010000000474974513 rzg
    rzn:f32[] = sub ryv rzm
    rzo:f32[] = mul 0.0010000000474974513 rzl
    rzp:f32[] = sub ryx rzo
    rzq:f32[200] = mul rzn a
    rzr:f32[200] = add rzq rzp
    rzs:f32[200] = sub b rzr
    rzt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    rzu:f32[] = div -2.0 rzt
    rzv:f32[200] = mul a rzs
    rzw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] rzu
    rzx:f32[200] = mul rzw rzv
    rzy:f32[] = reduce_sum[axes=(0,)] rzx
    rzz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    saa:f32[] = div -2.0 rzz
    sab:f32[] = convert_element_type[new_dtype=float32 weak_type=False] saa
    sac:f32[200] = mul sab rzs
    sad:f32[] = reduce_sum[axes=(0,)] sac
    sae:f32[] = mul 0.0010000000474974513 rzy
    saf:f32[] = sub rzn sae
    sag:f32[] = mul 0.0010000000474974513 sad
    sah:f32[] = sub rzp sag
    sai:f32[200] = mul saf a
    saj:f32[200] = add sai sah
    sak:f32[200] = sub b saj
    sal:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sam:f32[] = div -2.0 sal
    san:f32[200] = mul a sak
    sao:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sam
    sap:f32[200] = mul sao san
    saq:f32[] = reduce_sum[axes=(0,)] sap
    sar:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sas:f32[] = div -2.0 sar
    sat:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sas
    sau:f32[200] = mul sat sak
    sav:f32[] = reduce_sum[axes=(0,)] sau
    saw:f32[] = mul 0.0010000000474974513 saq
    sax:f32[] = sub saf saw
    say:f32[] = mul 0.0010000000474974513 sav
    saz:f32[] = sub sah say
    sba:f32[200] = mul sax a
    sbb:f32[200] = add sba saz
    sbc:f32[200] = sub b sbb
    sbd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sbe:f32[] = div -2.0 sbd
    sbf:f32[200] = mul a sbc
    sbg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sbe
    sbh:f32[200] = mul sbg sbf
    sbi:f32[] = reduce_sum[axes=(0,)] sbh
    sbj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sbk:f32[] = div -2.0 sbj
    sbl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sbk
    sbm:f32[200] = mul sbl sbc
    sbn:f32[] = reduce_sum[axes=(0,)] sbm
    sbo:f32[] = mul 0.0010000000474974513 sbi
    sbp:f32[] = sub sax sbo
    sbq:f32[] = mul 0.0010000000474974513 sbn
    sbr:f32[] = sub saz sbq
    sbs:f32[200] = mul sbp a
    sbt:f32[200] = add sbs sbr
    sbu:f32[200] = sub b sbt
    sbv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sbw:f32[] = div -2.0 sbv
    sbx:f32[200] = mul a sbu
    sby:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sbw
    sbz:f32[200] = mul sby sbx
    sca:f32[] = reduce_sum[axes=(0,)] sbz
    scb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    scc:f32[] = div -2.0 scb
    scd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] scc
    sce:f32[200] = mul scd sbu
    scf:f32[] = reduce_sum[axes=(0,)] sce
    scg:f32[] = mul 0.0010000000474974513 sca
    sch:f32[] = sub sbp scg
    sci:f32[] = mul 0.0010000000474974513 scf
    scj:f32[] = sub sbr sci
    sck:f32[200] = mul sch a
    scl:f32[200] = add sck scj
    scm:f32[200] = sub b scl
    scn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sco:f32[] = div -2.0 scn
    scp:f32[200] = mul a scm
    scq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sco
    scr:f32[200] = mul scq scp
    scs:f32[] = reduce_sum[axes=(0,)] scr
    sct:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    scu:f32[] = div -2.0 sct
    scv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] scu
    scw:f32[200] = mul scv scm
    scx:f32[] = reduce_sum[axes=(0,)] scw
    scy:f32[] = mul 0.0010000000474974513 scs
    scz:f32[] = sub sch scy
    sda:f32[] = mul 0.0010000000474974513 scx
    sdb:f32[] = sub scj sda
    sdc:f32[200] = mul scz a
    sdd:f32[200] = add sdc sdb
    sde:f32[200] = sub b sdd
    sdf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sdg:f32[] = div -2.0 sdf
    sdh:f32[200] = mul a sde
    sdi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sdg
    sdj:f32[200] = mul sdi sdh
    sdk:f32[] = reduce_sum[axes=(0,)] sdj
    sdl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sdm:f32[] = div -2.0 sdl
    sdn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sdm
    sdo:f32[200] = mul sdn sde
    sdp:f32[] = reduce_sum[axes=(0,)] sdo
    sdq:f32[] = mul 0.0010000000474974513 sdk
    sdr:f32[] = sub scz sdq
    sds:f32[] = mul 0.0010000000474974513 sdp
    sdt:f32[] = sub sdb sds
    sdu:f32[200] = mul sdr a
    sdv:f32[200] = add sdu sdt
    sdw:f32[200] = sub b sdv
    sdx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sdy:f32[] = div -2.0 sdx
    sdz:f32[200] = mul a sdw
    sea:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sdy
    seb:f32[200] = mul sea sdz
    sec:f32[] = reduce_sum[axes=(0,)] seb
    sed:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    see:f32[] = div -2.0 sed
    sef:f32[] = convert_element_type[new_dtype=float32 weak_type=False] see
    seg:f32[200] = mul sef sdw
    seh:f32[] = reduce_sum[axes=(0,)] seg
    sei:f32[] = mul 0.0010000000474974513 sec
    sej:f32[] = sub sdr sei
    sek:f32[] = mul 0.0010000000474974513 seh
    sel:f32[] = sub sdt sek
    sem:f32[200] = mul sej a
    sen:f32[200] = add sem sel
    seo:f32[200] = sub b sen
    sep:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    seq:f32[] = div -2.0 sep
    ser:f32[200] = mul a seo
    ses:f32[] = convert_element_type[new_dtype=float32 weak_type=False] seq
    set:f32[200] = mul ses ser
    seu:f32[] = reduce_sum[axes=(0,)] set
    sev:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sew:f32[] = div -2.0 sev
    sex:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sew
    sey:f32[200] = mul sex seo
    sez:f32[] = reduce_sum[axes=(0,)] sey
    sfa:f32[] = mul 0.0010000000474974513 seu
    sfb:f32[] = sub sej sfa
    sfc:f32[] = mul 0.0010000000474974513 sez
    sfd:f32[] = sub sel sfc
    sfe:f32[200] = mul sfb a
    sff:f32[200] = add sfe sfd
    sfg:f32[200] = sub b sff
    sfh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sfi:f32[] = div -2.0 sfh
    sfj:f32[200] = mul a sfg
    sfk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sfi
    sfl:f32[200] = mul sfk sfj
    sfm:f32[] = reduce_sum[axes=(0,)] sfl
    sfn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sfo:f32[] = div -2.0 sfn
    sfp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sfo
    sfq:f32[200] = mul sfp sfg
    sfr:f32[] = reduce_sum[axes=(0,)] sfq
    sfs:f32[] = mul 0.0010000000474974513 sfm
    sft:f32[] = sub sfb sfs
    sfu:f32[] = mul 0.0010000000474974513 sfr
    sfv:f32[] = sub sfd sfu
    sfw:f32[200] = mul sft a
    sfx:f32[200] = add sfw sfv
    sfy:f32[200] = sub b sfx
    sfz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sga:f32[] = div -2.0 sfz
    sgb:f32[200] = mul a sfy
    sgc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sga
    sgd:f32[200] = mul sgc sgb
    sge:f32[] = reduce_sum[axes=(0,)] sgd
    sgf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sgg:f32[] = div -2.0 sgf
    sgh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sgg
    sgi:f32[200] = mul sgh sfy
    sgj:f32[] = reduce_sum[axes=(0,)] sgi
    sgk:f32[] = mul 0.0010000000474974513 sge
    sgl:f32[] = sub sft sgk
    sgm:f32[] = mul 0.0010000000474974513 sgj
    sgn:f32[] = sub sfv sgm
    sgo:f32[200] = mul sgl a
    sgp:f32[200] = add sgo sgn
    sgq:f32[200] = sub b sgp
    sgr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sgs:f32[] = div -2.0 sgr
    sgt:f32[200] = mul a sgq
    sgu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sgs
    sgv:f32[200] = mul sgu sgt
    sgw:f32[] = reduce_sum[axes=(0,)] sgv
    sgx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sgy:f32[] = div -2.0 sgx
    sgz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sgy
    sha:f32[200] = mul sgz sgq
    shb:f32[] = reduce_sum[axes=(0,)] sha
    shc:f32[] = mul 0.0010000000474974513 sgw
    shd:f32[] = sub sgl shc
    she:f32[] = mul 0.0010000000474974513 shb
    shf:f32[] = sub sgn she
    shg:f32[200] = mul shd a
    shh:f32[200] = add shg shf
    shi:f32[200] = sub b shh
    shj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    shk:f32[] = div -2.0 shj
    shl:f32[200] = mul a shi
    shm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] shk
    shn:f32[200] = mul shm shl
    sho:f32[] = reduce_sum[axes=(0,)] shn
    shp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    shq:f32[] = div -2.0 shp
    shr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] shq
    shs:f32[200] = mul shr shi
    sht:f32[] = reduce_sum[axes=(0,)] shs
    shu:f32[] = mul 0.0010000000474974513 sho
    shv:f32[] = sub shd shu
    shw:f32[] = mul 0.0010000000474974513 sht
    shx:f32[] = sub shf shw
    shy:f32[200] = mul shv a
    shz:f32[200] = add shy shx
    sia:f32[200] = sub b shz
    sib:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sic:f32[] = div -2.0 sib
    sid:f32[200] = mul a sia
    sie:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sic
    sif:f32[200] = mul sie sid
    sig:f32[] = reduce_sum[axes=(0,)] sif
    sih:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sii:f32[] = div -2.0 sih
    sij:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sii
    sik:f32[200] = mul sij sia
    sil:f32[] = reduce_sum[axes=(0,)] sik
    sim:f32[] = mul 0.0010000000474974513 sig
    sin:f32[] = sub shv sim
    sio:f32[] = mul 0.0010000000474974513 sil
    sip:f32[] = sub shx sio
    siq:f32[200] = mul sin a
    sir:f32[200] = add siq sip
    sis:f32[200] = sub b sir
    sit:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    siu:f32[] = div -2.0 sit
    siv:f32[200] = mul a sis
    siw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] siu
    six:f32[200] = mul siw siv
    siy:f32[] = reduce_sum[axes=(0,)] six
    siz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sja:f32[] = div -2.0 siz
    sjb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sja
    sjc:f32[200] = mul sjb sis
    sjd:f32[] = reduce_sum[axes=(0,)] sjc
    sje:f32[] = mul 0.0010000000474974513 siy
    sjf:f32[] = sub sin sje
    sjg:f32[] = mul 0.0010000000474974513 sjd
    sjh:f32[] = sub sip sjg
    sji:f32[200] = mul sjf a
    sjj:f32[200] = add sji sjh
    sjk:f32[200] = sub b sjj
    sjl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sjm:f32[] = div -2.0 sjl
    sjn:f32[200] = mul a sjk
    sjo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sjm
    sjp:f32[200] = mul sjo sjn
    sjq:f32[] = reduce_sum[axes=(0,)] sjp
    sjr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sjs:f32[] = div -2.0 sjr
    sjt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sjs
    sju:f32[200] = mul sjt sjk
    sjv:f32[] = reduce_sum[axes=(0,)] sju
    sjw:f32[] = mul 0.0010000000474974513 sjq
    sjx:f32[] = sub sjf sjw
    sjy:f32[] = mul 0.0010000000474974513 sjv
    sjz:f32[] = sub sjh sjy
    ska:f32[200] = mul sjx a
    skb:f32[200] = add ska sjz
    skc:f32[200] = sub b skb
    skd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ske:f32[] = div -2.0 skd
    skf:f32[200] = mul a skc
    skg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ske
    skh:f32[200] = mul skg skf
    ski:f32[] = reduce_sum[axes=(0,)] skh
    skj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    skk:f32[] = div -2.0 skj
    skl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] skk
    skm:f32[200] = mul skl skc
    skn:f32[] = reduce_sum[axes=(0,)] skm
    sko:f32[] = mul 0.0010000000474974513 ski
    skp:f32[] = sub sjx sko
    skq:f32[] = mul 0.0010000000474974513 skn
    skr:f32[] = sub sjz skq
    sks:f32[200] = mul skp a
    skt:f32[200] = add sks skr
    sku:f32[200] = sub b skt
    skv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    skw:f32[] = div -2.0 skv
    skx:f32[200] = mul a sku
    sky:f32[] = convert_element_type[new_dtype=float32 weak_type=False] skw
    skz:f32[200] = mul sky skx
    sla:f32[] = reduce_sum[axes=(0,)] skz
    slb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    slc:f32[] = div -2.0 slb
    sld:f32[] = convert_element_type[new_dtype=float32 weak_type=False] slc
    sle:f32[200] = mul sld sku
    slf:f32[] = reduce_sum[axes=(0,)] sle
    slg:f32[] = mul 0.0010000000474974513 sla
    slh:f32[] = sub skp slg
    sli:f32[] = mul 0.0010000000474974513 slf
    slj:f32[] = sub skr sli
    slk:f32[200] = mul slh a
    sll:f32[200] = add slk slj
    slm:f32[200] = sub b sll
    sln:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    slo:f32[] = div -2.0 sln
    slp:f32[200] = mul a slm
    slq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] slo
    slr:f32[200] = mul slq slp
    sls:f32[] = reduce_sum[axes=(0,)] slr
    slt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    slu:f32[] = div -2.0 slt
    slv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] slu
    slw:f32[200] = mul slv slm
    slx:f32[] = reduce_sum[axes=(0,)] slw
    sly:f32[] = mul 0.0010000000474974513 sls
    slz:f32[] = sub slh sly
    sma:f32[] = mul 0.0010000000474974513 slx
    smb:f32[] = sub slj sma
    smc:f32[200] = mul slz a
    smd:f32[200] = add smc smb
    sme:f32[200] = sub b smd
    smf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    smg:f32[] = div -2.0 smf
    smh:f32[200] = mul a sme
    smi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] smg
    smj:f32[200] = mul smi smh
    smk:f32[] = reduce_sum[axes=(0,)] smj
    sml:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    smm:f32[] = div -2.0 sml
    smn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] smm
    smo:f32[200] = mul smn sme
    smp:f32[] = reduce_sum[axes=(0,)] smo
    smq:f32[] = mul 0.0010000000474974513 smk
    smr:f32[] = sub slz smq
    sms:f32[] = mul 0.0010000000474974513 smp
    smt:f32[] = sub smb sms
    smu:f32[200] = mul smr a
    smv:f32[200] = add smu smt
    smw:f32[200] = sub b smv
    smx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    smy:f32[] = div -2.0 smx
    smz:f32[200] = mul a smw
    sna:f32[] = convert_element_type[new_dtype=float32 weak_type=False] smy
    snb:f32[200] = mul sna smz
    snc:f32[] = reduce_sum[axes=(0,)] snb
    snd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sne:f32[] = div -2.0 snd
    snf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sne
    sng:f32[200] = mul snf smw
    snh:f32[] = reduce_sum[axes=(0,)] sng
    sni:f32[] = mul 0.0010000000474974513 snc
    snj:f32[] = sub smr sni
    snk:f32[] = mul 0.0010000000474974513 snh
    snl:f32[] = sub smt snk
    snm:f32[200] = mul snj a
    snn:f32[200] = add snm snl
    sno:f32[200] = sub b snn
    snp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    snq:f32[] = div -2.0 snp
    snr:f32[200] = mul a sno
    sns:f32[] = convert_element_type[new_dtype=float32 weak_type=False] snq
    snt:f32[200] = mul sns snr
    snu:f32[] = reduce_sum[axes=(0,)] snt
    snv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    snw:f32[] = div -2.0 snv
    snx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] snw
    sny:f32[200] = mul snx sno
    snz:f32[] = reduce_sum[axes=(0,)] sny
    soa:f32[] = mul 0.0010000000474974513 snu
    sob:f32[] = sub snj soa
    soc:f32[] = mul 0.0010000000474974513 snz
    sod:f32[] = sub snl soc
    soe:f32[200] = mul sob a
    sof:f32[200] = add soe sod
    sog:f32[200] = sub b sof
    soh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    soi:f32[] = div -2.0 soh
    soj:f32[200] = mul a sog
    sok:f32[] = convert_element_type[new_dtype=float32 weak_type=False] soi
    sol:f32[200] = mul sok soj
    som:f32[] = reduce_sum[axes=(0,)] sol
    son:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    soo:f32[] = div -2.0 son
    sop:f32[] = convert_element_type[new_dtype=float32 weak_type=False] soo
    soq:f32[200] = mul sop sog
    sor:f32[] = reduce_sum[axes=(0,)] soq
    sos:f32[] = mul 0.0010000000474974513 som
    sot:f32[] = sub sob sos
    sou:f32[] = mul 0.0010000000474974513 sor
    sov:f32[] = sub sod sou
    sow:f32[200] = mul sot a
    sox:f32[200] = add sow sov
    soy:f32[200] = sub b sox
    soz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    spa:f32[] = div -2.0 soz
    spb:f32[200] = mul a soy
    spc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] spa
    spd:f32[200] = mul spc spb
    spe:f32[] = reduce_sum[axes=(0,)] spd
    spf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    spg:f32[] = div -2.0 spf
    sph:f32[] = convert_element_type[new_dtype=float32 weak_type=False] spg
    spi:f32[200] = mul sph soy
    spj:f32[] = reduce_sum[axes=(0,)] spi
    spk:f32[] = mul 0.0010000000474974513 spe
    spl:f32[] = sub sot spk
    spm:f32[] = mul 0.0010000000474974513 spj
    spn:f32[] = sub sov spm
    spo:f32[200] = mul spl a
    spp:f32[200] = add spo spn
    spq:f32[200] = sub b spp
    spr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sps:f32[] = div -2.0 spr
    spt:f32[200] = mul a spq
    spu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sps
    spv:f32[200] = mul spu spt
    spw:f32[] = reduce_sum[axes=(0,)] spv
    spx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    spy:f32[] = div -2.0 spx
    spz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] spy
    sqa:f32[200] = mul spz spq
    sqb:f32[] = reduce_sum[axes=(0,)] sqa
    sqc:f32[] = mul 0.0010000000474974513 spw
    sqd:f32[] = sub spl sqc
    sqe:f32[] = mul 0.0010000000474974513 sqb
    sqf:f32[] = sub spn sqe
    sqg:f32[200] = mul sqd a
    sqh:f32[200] = add sqg sqf
    sqi:f32[200] = sub b sqh
    sqj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sqk:f32[] = div -2.0 sqj
    sql:f32[200] = mul a sqi
    sqm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sqk
    sqn:f32[200] = mul sqm sql
    sqo:f32[] = reduce_sum[axes=(0,)] sqn
    sqp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sqq:f32[] = div -2.0 sqp
    sqr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sqq
    sqs:f32[200] = mul sqr sqi
    sqt:f32[] = reduce_sum[axes=(0,)] sqs
    squ:f32[] = mul 0.0010000000474974513 sqo
    sqv:f32[] = sub sqd squ
    sqw:f32[] = mul 0.0010000000474974513 sqt
    sqx:f32[] = sub sqf sqw
    sqy:f32[200] = mul sqv a
    sqz:f32[200] = add sqy sqx
    sra:f32[200] = sub b sqz
    srb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    src:f32[] = div -2.0 srb
    srd:f32[200] = mul a sra
    sre:f32[] = convert_element_type[new_dtype=float32 weak_type=False] src
    srf:f32[200] = mul sre srd
    srg:f32[] = reduce_sum[axes=(0,)] srf
    srh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sri:f32[] = div -2.0 srh
    srj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sri
    srk:f32[200] = mul srj sra
    srl:f32[] = reduce_sum[axes=(0,)] srk
    srm:f32[] = mul 0.0010000000474974513 srg
    srn:f32[] = sub sqv srm
    sro:f32[] = mul 0.0010000000474974513 srl
    srp:f32[] = sub sqx sro
    srq:f32[200] = mul srn a
    srr:f32[200] = add srq srp
    srs:f32[200] = sub b srr
    srt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sru:f32[] = div -2.0 srt
    srv:f32[200] = mul a srs
    srw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sru
    srx:f32[200] = mul srw srv
    sry:f32[] = reduce_sum[axes=(0,)] srx
    srz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ssa:f32[] = div -2.0 srz
    ssb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ssa
    ssc:f32[200] = mul ssb srs
    ssd:f32[] = reduce_sum[axes=(0,)] ssc
    sse:f32[] = mul 0.0010000000474974513 sry
    ssf:f32[] = sub srn sse
    ssg:f32[] = mul 0.0010000000474974513 ssd
    ssh:f32[] = sub srp ssg
    ssi:f32[200] = mul ssf a
    ssj:f32[200] = add ssi ssh
    ssk:f32[200] = sub b ssj
    ssl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ssm:f32[] = div -2.0 ssl
    ssn:f32[200] = mul a ssk
    sso:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ssm
    ssp:f32[200] = mul sso ssn
    ssq:f32[] = reduce_sum[axes=(0,)] ssp
    ssr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sss:f32[] = div -2.0 ssr
    sst:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sss
    ssu:f32[200] = mul sst ssk
    ssv:f32[] = reduce_sum[axes=(0,)] ssu
    ssw:f32[] = mul 0.0010000000474974513 ssq
    ssx:f32[] = sub ssf ssw
    ssy:f32[] = mul 0.0010000000474974513 ssv
    ssz:f32[] = sub ssh ssy
    sta:f32[200] = mul ssx a
    stb:f32[200] = add sta ssz
    stc:f32[200] = sub b stb
    std:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ste:f32[] = div -2.0 std
    stf:f32[200] = mul a stc
    stg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ste
    sth:f32[200] = mul stg stf
    sti:f32[] = reduce_sum[axes=(0,)] sth
    stj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    stk:f32[] = div -2.0 stj
    stl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] stk
    stm:f32[200] = mul stl stc
    stn:f32[] = reduce_sum[axes=(0,)] stm
    sto:f32[] = mul 0.0010000000474974513 sti
    stp:f32[] = sub ssx sto
    stq:f32[] = mul 0.0010000000474974513 stn
    str:f32[] = sub ssz stq
    sts:f32[200] = mul stp a
    stt:f32[200] = add sts str
    stu:f32[200] = sub b stt
    stv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    stw:f32[] = div -2.0 stv
    stx:f32[200] = mul a stu
    sty:f32[] = convert_element_type[new_dtype=float32 weak_type=False] stw
    stz:f32[200] = mul sty stx
    sua:f32[] = reduce_sum[axes=(0,)] stz
    sub:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    suc:f32[] = div -2.0 sub
    sud:f32[] = convert_element_type[new_dtype=float32 weak_type=False] suc
    sue:f32[200] = mul sud stu
    suf:f32[] = reduce_sum[axes=(0,)] sue
    sug:f32[] = mul 0.0010000000474974513 sua
    suh:f32[] = sub stp sug
    sui:f32[] = mul 0.0010000000474974513 suf
    suj:f32[] = sub str sui
    suk:f32[200] = mul suh a
    sul:f32[200] = add suk suj
    sum:f32[200] = sub b sul
    sun:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    suo:f32[] = div -2.0 sun
    sup:f32[200] = mul a sum
    suq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] suo
    sur:f32[200] = mul suq sup
    sus:f32[] = reduce_sum[axes=(0,)] sur
    sut:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    suu:f32[] = div -2.0 sut
    suv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] suu
    suw:f32[200] = mul suv sum
    sux:f32[] = reduce_sum[axes=(0,)] suw
    suy:f32[] = mul 0.0010000000474974513 sus
    suz:f32[] = sub suh suy
    sva:f32[] = mul 0.0010000000474974513 sux
    svb:f32[] = sub suj sva
    svc:f32[200] = mul suz a
    svd:f32[200] = add svc svb
    sve:f32[200] = sub b svd
    svf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    svg:f32[] = div -2.0 svf
    svh:f32[200] = mul a sve
    svi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] svg
    svj:f32[200] = mul svi svh
    svk:f32[] = reduce_sum[axes=(0,)] svj
    svl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    svm:f32[] = div -2.0 svl
    svn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] svm
    svo:f32[200] = mul svn sve
    svp:f32[] = reduce_sum[axes=(0,)] svo
    svq:f32[] = mul 0.0010000000474974513 svk
    svr:f32[] = sub suz svq
    svs:f32[] = mul 0.0010000000474974513 svp
    svt:f32[] = sub svb svs
    svu:f32[200] = mul svr a
    svv:f32[200] = add svu svt
    svw:f32[200] = sub b svv
    svx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    svy:f32[] = div -2.0 svx
    svz:f32[200] = mul a svw
    swa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] svy
    swb:f32[200] = mul swa svz
    swc:f32[] = reduce_sum[axes=(0,)] swb
    swd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    swe:f32[] = div -2.0 swd
    swf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] swe
    swg:f32[200] = mul swf svw
    swh:f32[] = reduce_sum[axes=(0,)] swg
    swi:f32[] = mul 0.0010000000474974513 swc
    swj:f32[] = sub svr swi
    swk:f32[] = mul 0.0010000000474974513 swh
    swl:f32[] = sub svt swk
    swm:f32[200] = mul swj a
    swn:f32[200] = add swm swl
    swo:f32[200] = sub b swn
    swp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    swq:f32[] = div -2.0 swp
    swr:f32[200] = mul a swo
    sws:f32[] = convert_element_type[new_dtype=float32 weak_type=False] swq
    swt:f32[200] = mul sws swr
    swu:f32[] = reduce_sum[axes=(0,)] swt
    swv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sww:f32[] = div -2.0 swv
    swx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sww
    swy:f32[200] = mul swx swo
    swz:f32[] = reduce_sum[axes=(0,)] swy
    sxa:f32[] = mul 0.0010000000474974513 swu
    sxb:f32[] = sub swj sxa
    sxc:f32[] = mul 0.0010000000474974513 swz
    sxd:f32[] = sub swl sxc
    sxe:f32[200] = mul sxb a
    sxf:f32[200] = add sxe sxd
    sxg:f32[200] = sub b sxf
    sxh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sxi:f32[] = div -2.0 sxh
    sxj:f32[200] = mul a sxg
    sxk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sxi
    sxl:f32[200] = mul sxk sxj
    sxm:f32[] = reduce_sum[axes=(0,)] sxl
    sxn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sxo:f32[] = div -2.0 sxn
    sxp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sxo
    sxq:f32[200] = mul sxp sxg
    sxr:f32[] = reduce_sum[axes=(0,)] sxq
    sxs:f32[] = mul 0.0010000000474974513 sxm
    sxt:f32[] = sub sxb sxs
    sxu:f32[] = mul 0.0010000000474974513 sxr
    sxv:f32[] = sub sxd sxu
    sxw:f32[200] = mul sxt a
    sxx:f32[200] = add sxw sxv
    sxy:f32[200] = sub b sxx
    sxz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sya:f32[] = div -2.0 sxz
    syb:f32[200] = mul a sxy
    syc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sya
    syd:f32[200] = mul syc syb
    sye:f32[] = reduce_sum[axes=(0,)] syd
    syf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    syg:f32[] = div -2.0 syf
    syh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] syg
    syi:f32[200] = mul syh sxy
    syj:f32[] = reduce_sum[axes=(0,)] syi
    syk:f32[] = mul 0.0010000000474974513 sye
    syl:f32[] = sub sxt syk
    sym:f32[] = mul 0.0010000000474974513 syj
    syn:f32[] = sub sxv sym
    syo:f32[200] = mul syl a
    syp:f32[200] = add syo syn
    syq:f32[200] = sub b syp
    syr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    sys:f32[] = div -2.0 syr
    syt:f32[200] = mul a syq
    syu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] sys
    syv:f32[200] = mul syu syt
    syw:f32[] = reduce_sum[axes=(0,)] syv
    syx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    syy:f32[] = div -2.0 syx
    syz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] syy
    sza:f32[200] = mul syz syq
    szb:f32[] = reduce_sum[axes=(0,)] sza
    szc:f32[] = mul 0.0010000000474974513 syw
    szd:f32[] = sub syl szc
    sze:f32[] = mul 0.0010000000474974513 szb
    szf:f32[] = sub syn sze
    szg:f32[200] = mul szd a
    szh:f32[200] = add szg szf
    szi:f32[200] = sub b szh
    szj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    szk:f32[] = div -2.0 szj
    szl:f32[200] = mul a szi
    szm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] szk
    szn:f32[200] = mul szm szl
    szo:f32[] = reduce_sum[axes=(0,)] szn
    szp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    szq:f32[] = div -2.0 szp
    szr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] szq
    szs:f32[200] = mul szr szi
    szt:f32[] = reduce_sum[axes=(0,)] szs
    szu:f32[] = mul 0.0010000000474974513 szo
    szv:f32[] = sub szd szu
    szw:f32[] = mul 0.0010000000474974513 szt
    szx:f32[] = sub szf szw
    szy:f32[200] = mul szv a
    szz:f32[200] = add szy szx
    taa:f32[200] = sub b szz
    tab:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tac:f32[] = div -2.0 tab
    tad:f32[200] = mul a taa
    tae:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tac
    taf:f32[200] = mul tae tad
    tag:f32[] = reduce_sum[axes=(0,)] taf
    tah:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tai:f32[] = div -2.0 tah
    taj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tai
    tak:f32[200] = mul taj taa
    tal:f32[] = reduce_sum[axes=(0,)] tak
    tam:f32[] = mul 0.0010000000474974513 tag
    tan:f32[] = sub szv tam
    tao:f32[] = mul 0.0010000000474974513 tal
    tap:f32[] = sub szx tao
    taq:f32[200] = mul tan a
    tar:f32[200] = add taq tap
    tas:f32[200] = sub b tar
    tat:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tau:f32[] = div -2.0 tat
    tav:f32[200] = mul a tas
    taw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tau
    tax:f32[200] = mul taw tav
    tay:f32[] = reduce_sum[axes=(0,)] tax
    taz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tba:f32[] = div -2.0 taz
    tbb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tba
    tbc:f32[200] = mul tbb tas
    tbd:f32[] = reduce_sum[axes=(0,)] tbc
    tbe:f32[] = mul 0.0010000000474974513 tay
    tbf:f32[] = sub tan tbe
    tbg:f32[] = mul 0.0010000000474974513 tbd
    tbh:f32[] = sub tap tbg
    tbi:f32[200] = mul tbf a
    tbj:f32[200] = add tbi tbh
    tbk:f32[200] = sub b tbj
    tbl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tbm:f32[] = div -2.0 tbl
    tbn:f32[200] = mul a tbk
    tbo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tbm
    tbp:f32[200] = mul tbo tbn
    tbq:f32[] = reduce_sum[axes=(0,)] tbp
    tbr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tbs:f32[] = div -2.0 tbr
    tbt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tbs
    tbu:f32[200] = mul tbt tbk
    tbv:f32[] = reduce_sum[axes=(0,)] tbu
    tbw:f32[] = mul 0.0010000000474974513 tbq
    tbx:f32[] = sub tbf tbw
    tby:f32[] = mul 0.0010000000474974513 tbv
    tbz:f32[] = sub tbh tby
    tca:f32[200] = mul tbx a
    tcb:f32[200] = add tca tbz
    tcc:f32[200] = sub b tcb
    tcd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tce:f32[] = div -2.0 tcd
    tcf:f32[200] = mul a tcc
    tcg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tce
    tch:f32[200] = mul tcg tcf
    tci:f32[] = reduce_sum[axes=(0,)] tch
    tcj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tck:f32[] = div -2.0 tcj
    tcl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tck
    tcm:f32[200] = mul tcl tcc
    tcn:f32[] = reduce_sum[axes=(0,)] tcm
    tco:f32[] = mul 0.0010000000474974513 tci
    tcp:f32[] = sub tbx tco
    tcq:f32[] = mul 0.0010000000474974513 tcn
    tcr:f32[] = sub tbz tcq
    tcs:f32[200] = mul tcp a
    tct:f32[200] = add tcs tcr
    tcu:f32[200] = sub b tct
    tcv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tcw:f32[] = div -2.0 tcv
    tcx:f32[200] = mul a tcu
    tcy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tcw
    tcz:f32[200] = mul tcy tcx
    tda:f32[] = reduce_sum[axes=(0,)] tcz
    tdb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tdc:f32[] = div -2.0 tdb
    tdd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tdc
    tde:f32[200] = mul tdd tcu
    tdf:f32[] = reduce_sum[axes=(0,)] tde
    tdg:f32[] = mul 0.0010000000474974513 tda
    tdh:f32[] = sub tcp tdg
    tdi:f32[] = mul 0.0010000000474974513 tdf
    tdj:f32[] = sub tcr tdi
    tdk:f32[200] = mul tdh a
    tdl:f32[200] = add tdk tdj
    tdm:f32[200] = sub b tdl
    tdn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tdo:f32[] = div -2.0 tdn
    tdp:f32[200] = mul a tdm
    tdq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tdo
    tdr:f32[200] = mul tdq tdp
    tds:f32[] = reduce_sum[axes=(0,)] tdr
    tdt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tdu:f32[] = div -2.0 tdt
    tdv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tdu
    tdw:f32[200] = mul tdv tdm
    tdx:f32[] = reduce_sum[axes=(0,)] tdw
    tdy:f32[] = mul 0.0010000000474974513 tds
    tdz:f32[] = sub tdh tdy
    tea:f32[] = mul 0.0010000000474974513 tdx
    teb:f32[] = sub tdj tea
    tec:f32[200] = mul tdz a
    ted:f32[200] = add tec teb
    tee:f32[200] = sub b ted
    tef:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    teg:f32[] = div -2.0 tef
    teh:f32[200] = mul a tee
    tei:f32[] = convert_element_type[new_dtype=float32 weak_type=False] teg
    tej:f32[200] = mul tei teh
    tek:f32[] = reduce_sum[axes=(0,)] tej
    tel:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tem:f32[] = div -2.0 tel
    ten:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tem
    teo:f32[200] = mul ten tee
    tep:f32[] = reduce_sum[axes=(0,)] teo
    teq:f32[] = mul 0.0010000000474974513 tek
    ter:f32[] = sub tdz teq
    tes:f32[] = mul 0.0010000000474974513 tep
    tet:f32[] = sub teb tes
    teu:f32[200] = mul ter a
    tev:f32[200] = add teu tet
    tew:f32[200] = sub b tev
    tex:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tey:f32[] = div -2.0 tex
    tez:f32[200] = mul a tew
    tfa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tey
    tfb:f32[200] = mul tfa tez
    tfc:f32[] = reduce_sum[axes=(0,)] tfb
    tfd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tfe:f32[] = div -2.0 tfd
    tff:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tfe
    tfg:f32[200] = mul tff tew
    tfh:f32[] = reduce_sum[axes=(0,)] tfg
    tfi:f32[] = mul 0.0010000000474974513 tfc
    tfj:f32[] = sub ter tfi
    tfk:f32[] = mul 0.0010000000474974513 tfh
    tfl:f32[] = sub tet tfk
    tfm:f32[200] = mul tfj a
    tfn:f32[200] = add tfm tfl
    tfo:f32[200] = sub b tfn
    tfp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tfq:f32[] = div -2.0 tfp
    tfr:f32[200] = mul a tfo
    tfs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tfq
    tft:f32[200] = mul tfs tfr
    tfu:f32[] = reduce_sum[axes=(0,)] tft
    tfv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tfw:f32[] = div -2.0 tfv
    tfx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tfw
    tfy:f32[200] = mul tfx tfo
    tfz:f32[] = reduce_sum[axes=(0,)] tfy
    tga:f32[] = mul 0.0010000000474974513 tfu
    tgb:f32[] = sub tfj tga
    tgc:f32[] = mul 0.0010000000474974513 tfz
    tgd:f32[] = sub tfl tgc
    tge:f32[200] = mul tgb a
    tgf:f32[200] = add tge tgd
    tgg:f32[200] = sub b tgf
    tgh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tgi:f32[] = div -2.0 tgh
    tgj:f32[200] = mul a tgg
    tgk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tgi
    tgl:f32[200] = mul tgk tgj
    tgm:f32[] = reduce_sum[axes=(0,)] tgl
    tgn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tgo:f32[] = div -2.0 tgn
    tgp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tgo
    tgq:f32[200] = mul tgp tgg
    tgr:f32[] = reduce_sum[axes=(0,)] tgq
    tgs:f32[] = mul 0.0010000000474974513 tgm
    tgt:f32[] = sub tgb tgs
    tgu:f32[] = mul 0.0010000000474974513 tgr
    tgv:f32[] = sub tgd tgu
    tgw:f32[200] = mul tgt a
    tgx:f32[200] = add tgw tgv
    tgy:f32[200] = sub b tgx
    tgz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tha:f32[] = div -2.0 tgz
    thb:f32[200] = mul a tgy
    thc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tha
    thd:f32[200] = mul thc thb
    the:f32[] = reduce_sum[axes=(0,)] thd
    thf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    thg:f32[] = div -2.0 thf
    thh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] thg
    thi:f32[200] = mul thh tgy
    thj:f32[] = reduce_sum[axes=(0,)] thi
    thk:f32[] = mul 0.0010000000474974513 the
    thl:f32[] = sub tgt thk
    thm:f32[] = mul 0.0010000000474974513 thj
    thn:f32[] = sub tgv thm
    tho:f32[200] = mul thl a
    thp:f32[200] = add tho thn
    thq:f32[200] = sub b thp
    thr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ths:f32[] = div -2.0 thr
    tht:f32[200] = mul a thq
    thu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ths
    thv:f32[200] = mul thu tht
    thw:f32[] = reduce_sum[axes=(0,)] thv
    thx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    thy:f32[] = div -2.0 thx
    thz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] thy
    tia:f32[200] = mul thz thq
    tib:f32[] = reduce_sum[axes=(0,)] tia
    tic:f32[] = mul 0.0010000000474974513 thw
    tid:f32[] = sub thl tic
    tie:f32[] = mul 0.0010000000474974513 tib
    tif:f32[] = sub thn tie
    tig:f32[200] = mul tid a
    tih:f32[200] = add tig tif
    tii:f32[200] = sub b tih
    tij:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tik:f32[] = div -2.0 tij
    til:f32[200] = mul a tii
    tim:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tik
    tin:f32[200] = mul tim til
    tio:f32[] = reduce_sum[axes=(0,)] tin
    tip:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tiq:f32[] = div -2.0 tip
    tir:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tiq
    tis:f32[200] = mul tir tii
    tit:f32[] = reduce_sum[axes=(0,)] tis
    tiu:f32[] = mul 0.0010000000474974513 tio
    tiv:f32[] = sub tid tiu
    tiw:f32[] = mul 0.0010000000474974513 tit
    tix:f32[] = sub tif tiw
    tiy:f32[200] = mul tiv a
    tiz:f32[200] = add tiy tix
    tja:f32[200] = sub b tiz
    tjb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tjc:f32[] = div -2.0 tjb
    tjd:f32[200] = mul a tja
    tje:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tjc
    tjf:f32[200] = mul tje tjd
    tjg:f32[] = reduce_sum[axes=(0,)] tjf
    tjh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tji:f32[] = div -2.0 tjh
    tjj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tji
    tjk:f32[200] = mul tjj tja
    tjl:f32[] = reduce_sum[axes=(0,)] tjk
    tjm:f32[] = mul 0.0010000000474974513 tjg
    tjn:f32[] = sub tiv tjm
    tjo:f32[] = mul 0.0010000000474974513 tjl
    tjp:f32[] = sub tix tjo
    tjq:f32[200] = mul tjn a
    tjr:f32[200] = add tjq tjp
    tjs:f32[200] = sub b tjr
    tjt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tju:f32[] = div -2.0 tjt
    tjv:f32[200] = mul a tjs
    tjw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tju
    tjx:f32[200] = mul tjw tjv
    tjy:f32[] = reduce_sum[axes=(0,)] tjx
    tjz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tka:f32[] = div -2.0 tjz
    tkb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tka
    tkc:f32[200] = mul tkb tjs
    tkd:f32[] = reduce_sum[axes=(0,)] tkc
    tke:f32[] = mul 0.0010000000474974513 tjy
    tkf:f32[] = sub tjn tke
    tkg:f32[] = mul 0.0010000000474974513 tkd
    tkh:f32[] = sub tjp tkg
    tki:f32[200] = mul tkf a
    tkj:f32[200] = add tki tkh
    tkk:f32[200] = sub b tkj
    tkl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tkm:f32[] = div -2.0 tkl
    tkn:f32[200] = mul a tkk
    tko:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tkm
    tkp:f32[200] = mul tko tkn
    tkq:f32[] = reduce_sum[axes=(0,)] tkp
    tkr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tks:f32[] = div -2.0 tkr
    tkt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tks
    tku:f32[200] = mul tkt tkk
    tkv:f32[] = reduce_sum[axes=(0,)] tku
    tkw:f32[] = mul 0.0010000000474974513 tkq
    tkx:f32[] = sub tkf tkw
    tky:f32[] = mul 0.0010000000474974513 tkv
    tkz:f32[] = sub tkh tky
    tla:f32[200] = mul tkx a
    tlb:f32[200] = add tla tkz
    tlc:f32[200] = sub b tlb
    tld:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tle:f32[] = div -2.0 tld
    tlf:f32[200] = mul a tlc
    tlg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tle
    tlh:f32[200] = mul tlg tlf
    tli:f32[] = reduce_sum[axes=(0,)] tlh
    tlj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tlk:f32[] = div -2.0 tlj
    tll:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tlk
    tlm:f32[200] = mul tll tlc
    tln:f32[] = reduce_sum[axes=(0,)] tlm
    tlo:f32[] = mul 0.0010000000474974513 tli
    tlp:f32[] = sub tkx tlo
    tlq:f32[] = mul 0.0010000000474974513 tln
    tlr:f32[] = sub tkz tlq
    tls:f32[200] = mul tlp a
    tlt:f32[200] = add tls tlr
    tlu:f32[200] = sub b tlt
    tlv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tlw:f32[] = div -2.0 tlv
    tlx:f32[200] = mul a tlu
    tly:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tlw
    tlz:f32[200] = mul tly tlx
    tma:f32[] = reduce_sum[axes=(0,)] tlz
    tmb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tmc:f32[] = div -2.0 tmb
    tmd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tmc
    tme:f32[200] = mul tmd tlu
    tmf:f32[] = reduce_sum[axes=(0,)] tme
    tmg:f32[] = mul 0.0010000000474974513 tma
    tmh:f32[] = sub tlp tmg
    tmi:f32[] = mul 0.0010000000474974513 tmf
    tmj:f32[] = sub tlr tmi
    tmk:f32[200] = mul tmh a
    tml:f32[200] = add tmk tmj
    tmm:f32[200] = sub b tml
    tmn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tmo:f32[] = div -2.0 tmn
    tmp:f32[200] = mul a tmm
    tmq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tmo
    tmr:f32[200] = mul tmq tmp
    tms:f32[] = reduce_sum[axes=(0,)] tmr
    tmt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tmu:f32[] = div -2.0 tmt
    tmv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tmu
    tmw:f32[200] = mul tmv tmm
    tmx:f32[] = reduce_sum[axes=(0,)] tmw
    tmy:f32[] = mul 0.0010000000474974513 tms
    tmz:f32[] = sub tmh tmy
    tna:f32[] = mul 0.0010000000474974513 tmx
    tnb:f32[] = sub tmj tna
    tnc:f32[200] = mul tmz a
    tnd:f32[200] = add tnc tnb
    tne:f32[200] = sub b tnd
    tnf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tng:f32[] = div -2.0 tnf
    tnh:f32[200] = mul a tne
    tni:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tng
    tnj:f32[200] = mul tni tnh
    tnk:f32[] = reduce_sum[axes=(0,)] tnj
    tnl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tnm:f32[] = div -2.0 tnl
    tnn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tnm
    tno:f32[200] = mul tnn tne
    tnp:f32[] = reduce_sum[axes=(0,)] tno
    tnq:f32[] = mul 0.0010000000474974513 tnk
    tnr:f32[] = sub tmz tnq
    tns:f32[] = mul 0.0010000000474974513 tnp
    tnt:f32[] = sub tnb tns
    tnu:f32[200] = mul tnr a
    tnv:f32[200] = add tnu tnt
    tnw:f32[200] = sub b tnv
    tnx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tny:f32[] = div -2.0 tnx
    tnz:f32[200] = mul a tnw
    toa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tny
    tob:f32[200] = mul toa tnz
    toc:f32[] = reduce_sum[axes=(0,)] tob
    tod:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    toe:f32[] = div -2.0 tod
    tof:f32[] = convert_element_type[new_dtype=float32 weak_type=False] toe
    tog:f32[200] = mul tof tnw
    toh:f32[] = reduce_sum[axes=(0,)] tog
    toi:f32[] = mul 0.0010000000474974513 toc
    toj:f32[] = sub tnr toi
    tok:f32[] = mul 0.0010000000474974513 toh
    tol:f32[] = sub tnt tok
    tom:f32[200] = mul toj a
    ton:f32[200] = add tom tol
    too:f32[200] = sub b ton
    top:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    toq:f32[] = div -2.0 top
    tor:f32[200] = mul a too
    tos:f32[] = convert_element_type[new_dtype=float32 weak_type=False] toq
    tot:f32[200] = mul tos tor
    tou:f32[] = reduce_sum[axes=(0,)] tot
    tov:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tow:f32[] = div -2.0 tov
    tox:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tow
    toy:f32[200] = mul tox too
    toz:f32[] = reduce_sum[axes=(0,)] toy
    tpa:f32[] = mul 0.0010000000474974513 tou
    tpb:f32[] = sub toj tpa
    tpc:f32[] = mul 0.0010000000474974513 toz
    tpd:f32[] = sub tol tpc
    tpe:f32[200] = mul tpb a
    tpf:f32[200] = add tpe tpd
    tpg:f32[200] = sub b tpf
    tph:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tpi:f32[] = div -2.0 tph
    tpj:f32[200] = mul a tpg
    tpk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tpi
    tpl:f32[200] = mul tpk tpj
    tpm:f32[] = reduce_sum[axes=(0,)] tpl
    tpn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tpo:f32[] = div -2.0 tpn
    tpp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tpo
    tpq:f32[200] = mul tpp tpg
    tpr:f32[] = reduce_sum[axes=(0,)] tpq
    tps:f32[] = mul 0.0010000000474974513 tpm
    tpt:f32[] = sub tpb tps
    tpu:f32[] = mul 0.0010000000474974513 tpr
    tpv:f32[] = sub tpd tpu
    tpw:f32[200] = mul tpt a
    tpx:f32[200] = add tpw tpv
    tpy:f32[200] = sub b tpx
    tpz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tqa:f32[] = div -2.0 tpz
    tqb:f32[200] = mul a tpy
    tqc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tqa
    tqd:f32[200] = mul tqc tqb
    tqe:f32[] = reduce_sum[axes=(0,)] tqd
    tqf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tqg:f32[] = div -2.0 tqf
    tqh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tqg
    tqi:f32[200] = mul tqh tpy
    tqj:f32[] = reduce_sum[axes=(0,)] tqi
    tqk:f32[] = mul 0.0010000000474974513 tqe
    tql:f32[] = sub tpt tqk
    tqm:f32[] = mul 0.0010000000474974513 tqj
    tqn:f32[] = sub tpv tqm
    tqo:f32[200] = mul tql a
    tqp:f32[200] = add tqo tqn
    tqq:f32[200] = sub b tqp
    tqr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tqs:f32[] = div -2.0 tqr
    tqt:f32[200] = mul a tqq
    tqu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tqs
    tqv:f32[200] = mul tqu tqt
    tqw:f32[] = reduce_sum[axes=(0,)] tqv
    tqx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tqy:f32[] = div -2.0 tqx
    tqz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tqy
    tra:f32[200] = mul tqz tqq
    trb:f32[] = reduce_sum[axes=(0,)] tra
    trc:f32[] = mul 0.0010000000474974513 tqw
    trd:f32[] = sub tql trc
    tre:f32[] = mul 0.0010000000474974513 trb
    trf:f32[] = sub tqn tre
    trg:f32[200] = mul trd a
    trh:f32[200] = add trg trf
    tri:f32[200] = sub b trh
    trj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    trk:f32[] = div -2.0 trj
    trl:f32[200] = mul a tri
    trm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] trk
    trn:f32[200] = mul trm trl
    tro:f32[] = reduce_sum[axes=(0,)] trn
    trp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    trq:f32[] = div -2.0 trp
    trr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] trq
    trs:f32[200] = mul trr tri
    trt:f32[] = reduce_sum[axes=(0,)] trs
    tru:f32[] = mul 0.0010000000474974513 tro
    trv:f32[] = sub trd tru
    trw:f32[] = mul 0.0010000000474974513 trt
    trx:f32[] = sub trf trw
    try:f32[200] = mul trv a
    trz:f32[200] = add try trx
    tsa:f32[200] = sub b trz
    tsb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tsc:f32[] = div -2.0 tsb
    tsd:f32[200] = mul a tsa
    tse:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tsc
    tsf:f32[200] = mul tse tsd
    tsg:f32[] = reduce_sum[axes=(0,)] tsf
    tsh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tsi:f32[] = div -2.0 tsh
    tsj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tsi
    tsk:f32[200] = mul tsj tsa
    tsl:f32[] = reduce_sum[axes=(0,)] tsk
    tsm:f32[] = mul 0.0010000000474974513 tsg
    tsn:f32[] = sub trv tsm
    tso:f32[] = mul 0.0010000000474974513 tsl
    tsp:f32[] = sub trx tso
    tsq:f32[200] = mul tsn a
    tsr:f32[200] = add tsq tsp
    tss:f32[200] = sub b tsr
    tst:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tsu:f32[] = div -2.0 tst
    tsv:f32[200] = mul a tss
    tsw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tsu
    tsx:f32[200] = mul tsw tsv
    tsy:f32[] = reduce_sum[axes=(0,)] tsx
    tsz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tta:f32[] = div -2.0 tsz
    ttb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tta
    ttc:f32[200] = mul ttb tss
    ttd:f32[] = reduce_sum[axes=(0,)] ttc
    tte:f32[] = mul 0.0010000000474974513 tsy
    ttf:f32[] = sub tsn tte
    ttg:f32[] = mul 0.0010000000474974513 ttd
    tth:f32[] = sub tsp ttg
    tti:f32[200] = mul ttf a
    ttj:f32[200] = add tti tth
    ttk:f32[200] = sub b ttj
    ttl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ttm:f32[] = div -2.0 ttl
    ttn:f32[200] = mul a ttk
    tto:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ttm
    ttp:f32[200] = mul tto ttn
    ttq:f32[] = reduce_sum[axes=(0,)] ttp
    ttr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tts:f32[] = div -2.0 ttr
    ttt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tts
    ttu:f32[200] = mul ttt ttk
    ttv:f32[] = reduce_sum[axes=(0,)] ttu
    ttw:f32[] = mul 0.0010000000474974513 ttq
    ttx:f32[] = sub ttf ttw
    tty:f32[] = mul 0.0010000000474974513 ttv
    ttz:f32[] = sub tth tty
    tua:f32[200] = mul ttx a
    tub:f32[200] = add tua ttz
    tuc:f32[200] = sub b tub
    tud:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tue:f32[] = div -2.0 tud
    tuf:f32[200] = mul a tuc
    tug:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tue
    tuh:f32[200] = mul tug tuf
    tui:f32[] = reduce_sum[axes=(0,)] tuh
    tuj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tuk:f32[] = div -2.0 tuj
    tul:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tuk
    tum:f32[200] = mul tul tuc
    tun:f32[] = reduce_sum[axes=(0,)] tum
    tuo:f32[] = mul 0.0010000000474974513 tui
    tup:f32[] = sub ttx tuo
    tuq:f32[] = mul 0.0010000000474974513 tun
    tur:f32[] = sub ttz tuq
    tus:f32[200] = mul tup a
    tut:f32[200] = add tus tur
    tuu:f32[200] = sub b tut
    tuv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tuw:f32[] = div -2.0 tuv
    tux:f32[200] = mul a tuu
    tuy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tuw
    tuz:f32[200] = mul tuy tux
    tva:f32[] = reduce_sum[axes=(0,)] tuz
    tvb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tvc:f32[] = div -2.0 tvb
    tvd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tvc
    tve:f32[200] = mul tvd tuu
    tvf:f32[] = reduce_sum[axes=(0,)] tve
    tvg:f32[] = mul 0.0010000000474974513 tva
    tvh:f32[] = sub tup tvg
    tvi:f32[] = mul 0.0010000000474974513 tvf
    tvj:f32[] = sub tur tvi
    tvk:f32[200] = mul tvh a
    tvl:f32[200] = add tvk tvj
    tvm:f32[200] = sub b tvl
    tvn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tvo:f32[] = div -2.0 tvn
    tvp:f32[200] = mul a tvm
    tvq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tvo
    tvr:f32[200] = mul tvq tvp
    tvs:f32[] = reduce_sum[axes=(0,)] tvr
    tvt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tvu:f32[] = div -2.0 tvt
    tvv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tvu
    tvw:f32[200] = mul tvv tvm
    tvx:f32[] = reduce_sum[axes=(0,)] tvw
    tvy:f32[] = mul 0.0010000000474974513 tvs
    tvz:f32[] = sub tvh tvy
    twa:f32[] = mul 0.0010000000474974513 tvx
    twb:f32[] = sub tvj twa
    twc:f32[200] = mul tvz a
    twd:f32[200] = add twc twb
    twe:f32[200] = sub b twd
    twf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    twg:f32[] = div -2.0 twf
    twh:f32[200] = mul a twe
    twi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] twg
    twj:f32[200] = mul twi twh
    twk:f32[] = reduce_sum[axes=(0,)] twj
    twl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    twm:f32[] = div -2.0 twl
    twn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] twm
    two:f32[200] = mul twn twe
    twp:f32[] = reduce_sum[axes=(0,)] two
    twq:f32[] = mul 0.0010000000474974513 twk
    twr:f32[] = sub tvz twq
    tws:f32[] = mul 0.0010000000474974513 twp
    twt:f32[] = sub twb tws
    twu:f32[200] = mul twr a
    twv:f32[200] = add twu twt
    tww:f32[200] = sub b twv
    twx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    twy:f32[] = div -2.0 twx
    twz:f32[200] = mul a tww
    txa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] twy
    txb:f32[200] = mul txa twz
    txc:f32[] = reduce_sum[axes=(0,)] txb
    txd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    txe:f32[] = div -2.0 txd
    txf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] txe
    txg:f32[200] = mul txf tww
    txh:f32[] = reduce_sum[axes=(0,)] txg
    txi:f32[] = mul 0.0010000000474974513 txc
    txj:f32[] = sub twr txi
    txk:f32[] = mul 0.0010000000474974513 txh
    txl:f32[] = sub twt txk
    txm:f32[200] = mul txj a
    txn:f32[200] = add txm txl
    txo:f32[200] = sub b txn
    txp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    txq:f32[] = div -2.0 txp
    txr:f32[200] = mul a txo
    txs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] txq
    txt:f32[200] = mul txs txr
    txu:f32[] = reduce_sum[axes=(0,)] txt
    txv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    txw:f32[] = div -2.0 txv
    txx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] txw
    txy:f32[200] = mul txx txo
    txz:f32[] = reduce_sum[axes=(0,)] txy
    tya:f32[] = mul 0.0010000000474974513 txu
    tyb:f32[] = sub txj tya
    tyc:f32[] = mul 0.0010000000474974513 txz
    tyd:f32[] = sub txl tyc
    tye:f32[200] = mul tyb a
    tyf:f32[200] = add tye tyd
    tyg:f32[200] = sub b tyf
    tyh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tyi:f32[] = div -2.0 tyh
    tyj:f32[200] = mul a tyg
    tyk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tyi
    tyl:f32[200] = mul tyk tyj
    tym:f32[] = reduce_sum[axes=(0,)] tyl
    tyn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tyo:f32[] = div -2.0 tyn
    typ:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tyo
    tyq:f32[200] = mul typ tyg
    tyr:f32[] = reduce_sum[axes=(0,)] tyq
    tys:f32[] = mul 0.0010000000474974513 tym
    tyt:f32[] = sub tyb tys
    tyu:f32[] = mul 0.0010000000474974513 tyr
    tyv:f32[] = sub tyd tyu
    tyw:f32[200] = mul tyt a
    tyx:f32[200] = add tyw tyv
    tyy:f32[200] = sub b tyx
    tyz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tza:f32[] = div -2.0 tyz
    tzb:f32[200] = mul a tyy
    tzc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tza
    tzd:f32[200] = mul tzc tzb
    tze:f32[] = reduce_sum[axes=(0,)] tzd
    tzf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tzg:f32[] = div -2.0 tzf
    tzh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tzg
    tzi:f32[200] = mul tzh tyy
    tzj:f32[] = reduce_sum[axes=(0,)] tzi
    tzk:f32[] = mul 0.0010000000474974513 tze
    tzl:f32[] = sub tyt tzk
    tzm:f32[] = mul 0.0010000000474974513 tzj
    tzn:f32[] = sub tyv tzm
    tzo:f32[200] = mul tzl a
    tzp:f32[200] = add tzo tzn
    tzq:f32[200] = sub b tzp
    tzr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tzs:f32[] = div -2.0 tzr
    tzt:f32[200] = mul a tzq
    tzu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tzs
    tzv:f32[200] = mul tzu tzt
    tzw:f32[] = reduce_sum[axes=(0,)] tzv
    tzx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    tzy:f32[] = div -2.0 tzx
    tzz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] tzy
    uaa:f32[200] = mul tzz tzq
    uab:f32[] = reduce_sum[axes=(0,)] uaa
    uac:f32[] = mul 0.0010000000474974513 tzw
    uad:f32[] = sub tzl uac
    uae:f32[] = mul 0.0010000000474974513 uab
    uaf:f32[] = sub tzn uae
    uag:f32[200] = mul uad a
    uah:f32[200] = add uag uaf
    uai:f32[200] = sub b uah
    uaj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uak:f32[] = div -2.0 uaj
    ual:f32[200] = mul a uai
    uam:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uak
    uan:f32[200] = mul uam ual
    uao:f32[] = reduce_sum[axes=(0,)] uan
    uap:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uaq:f32[] = div -2.0 uap
    uar:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uaq
    uas:f32[200] = mul uar uai
    uat:f32[] = reduce_sum[axes=(0,)] uas
    uau:f32[] = mul 0.0010000000474974513 uao
    uav:f32[] = sub uad uau
    uaw:f32[] = mul 0.0010000000474974513 uat
    uax:f32[] = sub uaf uaw
    uay:f32[200] = mul uav a
    uaz:f32[200] = add uay uax
    uba:f32[200] = sub b uaz
    ubb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ubc:f32[] = div -2.0 ubb
    ubd:f32[200] = mul a uba
    ube:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ubc
    ubf:f32[200] = mul ube ubd
    ubg:f32[] = reduce_sum[axes=(0,)] ubf
    ubh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ubi:f32[] = div -2.0 ubh
    ubj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ubi
    ubk:f32[200] = mul ubj uba
    ubl:f32[] = reduce_sum[axes=(0,)] ubk
    ubm:f32[] = mul 0.0010000000474974513 ubg
    ubn:f32[] = sub uav ubm
    ubo:f32[] = mul 0.0010000000474974513 ubl
    ubp:f32[] = sub uax ubo
    ubq:f32[200] = mul ubn a
    ubr:f32[200] = add ubq ubp
    ubs:f32[200] = sub b ubr
    ubt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ubu:f32[] = div -2.0 ubt
    ubv:f32[200] = mul a ubs
    ubw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ubu
    ubx:f32[200] = mul ubw ubv
    uby:f32[] = reduce_sum[axes=(0,)] ubx
    ubz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uca:f32[] = div -2.0 ubz
    ucb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uca
    ucc:f32[200] = mul ucb ubs
    ucd:f32[] = reduce_sum[axes=(0,)] ucc
    uce:f32[] = mul 0.0010000000474974513 uby
    ucf:f32[] = sub ubn uce
    ucg:f32[] = mul 0.0010000000474974513 ucd
    uch:f32[] = sub ubp ucg
    uci:f32[200] = mul ucf a
    ucj:f32[200] = add uci uch
    uck:f32[200] = sub b ucj
    ucl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ucm:f32[] = div -2.0 ucl
    ucn:f32[200] = mul a uck
    uco:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ucm
    ucp:f32[200] = mul uco ucn
    ucq:f32[] = reduce_sum[axes=(0,)] ucp
    ucr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ucs:f32[] = div -2.0 ucr
    uct:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ucs
    ucu:f32[200] = mul uct uck
    ucv:f32[] = reduce_sum[axes=(0,)] ucu
    ucw:f32[] = mul 0.0010000000474974513 ucq
    ucx:f32[] = sub ucf ucw
    ucy:f32[] = mul 0.0010000000474974513 ucv
    ucz:f32[] = sub uch ucy
    uda:f32[200] = mul ucx a
    udb:f32[200] = add uda ucz
    udc:f32[200] = sub b udb
    udd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ude:f32[] = div -2.0 udd
    udf:f32[200] = mul a udc
    udg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ude
    udh:f32[200] = mul udg udf
    udi:f32[] = reduce_sum[axes=(0,)] udh
    udj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    udk:f32[] = div -2.0 udj
    udl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] udk
    udm:f32[200] = mul udl udc
    udn:f32[] = reduce_sum[axes=(0,)] udm
    udo:f32[] = mul 0.0010000000474974513 udi
    udp:f32[] = sub ucx udo
    udq:f32[] = mul 0.0010000000474974513 udn
    udr:f32[] = sub ucz udq
    uds:f32[200] = mul udp a
    udt:f32[200] = add uds udr
    udu:f32[200] = sub b udt
    udv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    udw:f32[] = div -2.0 udv
    udx:f32[200] = mul a udu
    udy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] udw
    udz:f32[200] = mul udy udx
    uea:f32[] = reduce_sum[axes=(0,)] udz
    ueb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uec:f32[] = div -2.0 ueb
    ued:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uec
    uee:f32[200] = mul ued udu
    uef:f32[] = reduce_sum[axes=(0,)] uee
    ueg:f32[] = mul 0.0010000000474974513 uea
    ueh:f32[] = sub udp ueg
    uei:f32[] = mul 0.0010000000474974513 uef
    uej:f32[] = sub udr uei
    uek:f32[200] = mul ueh a
    uel:f32[200] = add uek uej
    uem:f32[200] = sub b uel
    uen:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ueo:f32[] = div -2.0 uen
    uep:f32[200] = mul a uem
    ueq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ueo
    uer:f32[200] = mul ueq uep
    ues:f32[] = reduce_sum[axes=(0,)] uer
    uet:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ueu:f32[] = div -2.0 uet
    uev:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ueu
    uew:f32[200] = mul uev uem
    uex:f32[] = reduce_sum[axes=(0,)] uew
    uey:f32[] = mul 0.0010000000474974513 ues
    uez:f32[] = sub ueh uey
    ufa:f32[] = mul 0.0010000000474974513 uex
    ufb:f32[] = sub uej ufa
    ufc:f32[200] = mul uez a
    ufd:f32[200] = add ufc ufb
    ufe:f32[200] = sub b ufd
    uff:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ufg:f32[] = div -2.0 uff
    ufh:f32[200] = mul a ufe
    ufi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ufg
    ufj:f32[200] = mul ufi ufh
    ufk:f32[] = reduce_sum[axes=(0,)] ufj
    ufl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ufm:f32[] = div -2.0 ufl
    ufn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ufm
    ufo:f32[200] = mul ufn ufe
    ufp:f32[] = reduce_sum[axes=(0,)] ufo
    ufq:f32[] = mul 0.0010000000474974513 ufk
    ufr:f32[] = sub uez ufq
    ufs:f32[] = mul 0.0010000000474974513 ufp
    uft:f32[] = sub ufb ufs
    ufu:f32[200] = mul ufr a
    ufv:f32[200] = add ufu uft
    ufw:f32[200] = sub b ufv
    ufx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ufy:f32[] = div -2.0 ufx
    ufz:f32[200] = mul a ufw
    uga:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ufy
    ugb:f32[200] = mul uga ufz
    ugc:f32[] = reduce_sum[axes=(0,)] ugb
    ugd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uge:f32[] = div -2.0 ugd
    ugf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uge
    ugg:f32[200] = mul ugf ufw
    ugh:f32[] = reduce_sum[axes=(0,)] ugg
    ugi:f32[] = mul 0.0010000000474974513 ugc
    ugj:f32[] = sub ufr ugi
    ugk:f32[] = mul 0.0010000000474974513 ugh
    ugl:f32[] = sub uft ugk
    ugm:f32[200] = mul ugj a
    ugn:f32[200] = add ugm ugl
    ugo:f32[200] = sub b ugn
    ugp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ugq:f32[] = div -2.0 ugp
    ugr:f32[200] = mul a ugo
    ugs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ugq
    ugt:f32[200] = mul ugs ugr
    ugu:f32[] = reduce_sum[axes=(0,)] ugt
    ugv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ugw:f32[] = div -2.0 ugv
    ugx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ugw
    ugy:f32[200] = mul ugx ugo
    ugz:f32[] = reduce_sum[axes=(0,)] ugy
    uha:f32[] = mul 0.0010000000474974513 ugu
    uhb:f32[] = sub ugj uha
    uhc:f32[] = mul 0.0010000000474974513 ugz
    uhd:f32[] = sub ugl uhc
    uhe:f32[200] = mul uhb a
    uhf:f32[200] = add uhe uhd
    uhg:f32[200] = sub b uhf
    uhh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uhi:f32[] = div -2.0 uhh
    uhj:f32[200] = mul a uhg
    uhk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uhi
    uhl:f32[200] = mul uhk uhj
    uhm:f32[] = reduce_sum[axes=(0,)] uhl
    uhn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uho:f32[] = div -2.0 uhn
    uhp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uho
    uhq:f32[200] = mul uhp uhg
    uhr:f32[] = reduce_sum[axes=(0,)] uhq
    uhs:f32[] = mul 0.0010000000474974513 uhm
    uht:f32[] = sub uhb uhs
    uhu:f32[] = mul 0.0010000000474974513 uhr
    uhv:f32[] = sub uhd uhu
    uhw:f32[200] = mul uht a
    uhx:f32[200] = add uhw uhv
    uhy:f32[200] = sub b uhx
    uhz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uia:f32[] = div -2.0 uhz
    uib:f32[200] = mul a uhy
    uic:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uia
    uid:f32[200] = mul uic uib
    uie:f32[] = reduce_sum[axes=(0,)] uid
    uif:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uig:f32[] = div -2.0 uif
    uih:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uig
    uii:f32[200] = mul uih uhy
    uij:f32[] = reduce_sum[axes=(0,)] uii
    uik:f32[] = mul 0.0010000000474974513 uie
    uil:f32[] = sub uht uik
    uim:f32[] = mul 0.0010000000474974513 uij
    uin:f32[] = sub uhv uim
    uio:f32[200] = mul uil a
    uip:f32[200] = add uio uin
    uiq:f32[200] = sub b uip
    uir:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uis:f32[] = div -2.0 uir
    uit:f32[200] = mul a uiq
    uiu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uis
    uiv:f32[200] = mul uiu uit
    uiw:f32[] = reduce_sum[axes=(0,)] uiv
    uix:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uiy:f32[] = div -2.0 uix
    uiz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uiy
    uja:f32[200] = mul uiz uiq
    ujb:f32[] = reduce_sum[axes=(0,)] uja
    ujc:f32[] = mul 0.0010000000474974513 uiw
    ujd:f32[] = sub uil ujc
    uje:f32[] = mul 0.0010000000474974513 ujb
    ujf:f32[] = sub uin uje
    ujg:f32[200] = mul ujd a
    ujh:f32[200] = add ujg ujf
    uji:f32[200] = sub b ujh
    ujj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ujk:f32[] = div -2.0 ujj
    ujl:f32[200] = mul a uji
    ujm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ujk
    ujn:f32[200] = mul ujm ujl
    ujo:f32[] = reduce_sum[axes=(0,)] ujn
    ujp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ujq:f32[] = div -2.0 ujp
    ujr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ujq
    ujs:f32[200] = mul ujr uji
    ujt:f32[] = reduce_sum[axes=(0,)] ujs
    uju:f32[] = mul 0.0010000000474974513 ujo
    ujv:f32[] = sub ujd uju
    ujw:f32[] = mul 0.0010000000474974513 ujt
    ujx:f32[] = sub ujf ujw
    ujy:f32[200] = mul ujv a
    ujz:f32[200] = add ujy ujx
    uka:f32[200] = sub b ujz
    ukb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ukc:f32[] = div -2.0 ukb
    ukd:f32[200] = mul a uka
    uke:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ukc
    ukf:f32[200] = mul uke ukd
    ukg:f32[] = reduce_sum[axes=(0,)] ukf
    ukh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uki:f32[] = div -2.0 ukh
    ukj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uki
    ukk:f32[200] = mul ukj uka
    ukl:f32[] = reduce_sum[axes=(0,)] ukk
    ukm:f32[] = mul 0.0010000000474974513 ukg
    ukn:f32[] = sub ujv ukm
    uko:f32[] = mul 0.0010000000474974513 ukl
    ukp:f32[] = sub ujx uko
    ukq:f32[200] = mul ukn a
    ukr:f32[200] = add ukq ukp
    uks:f32[200] = sub b ukr
    ukt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uku:f32[] = div -2.0 ukt
    ukv:f32[200] = mul a uks
    ukw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uku
    ukx:f32[200] = mul ukw ukv
    uky:f32[] = reduce_sum[axes=(0,)] ukx
    ukz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ula:f32[] = div -2.0 ukz
    ulb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ula
    ulc:f32[200] = mul ulb uks
    uld:f32[] = reduce_sum[axes=(0,)] ulc
    ule:f32[] = mul 0.0010000000474974513 uky
    ulf:f32[] = sub ukn ule
    ulg:f32[] = mul 0.0010000000474974513 uld
    ulh:f32[] = sub ukp ulg
    uli:f32[200] = mul ulf a
    ulj:f32[200] = add uli ulh
    ulk:f32[200] = sub b ulj
    ull:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ulm:f32[] = div -2.0 ull
    uln:f32[200] = mul a ulk
    ulo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ulm
    ulp:f32[200] = mul ulo uln
    ulq:f32[] = reduce_sum[axes=(0,)] ulp
    ulr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uls:f32[] = div -2.0 ulr
    ult:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uls
    ulu:f32[200] = mul ult ulk
    ulv:f32[] = reduce_sum[axes=(0,)] ulu
    ulw:f32[] = mul 0.0010000000474974513 ulq
    ulx:f32[] = sub ulf ulw
    uly:f32[] = mul 0.0010000000474974513 ulv
    ulz:f32[] = sub ulh uly
    uma:f32[200] = mul ulx a
    umb:f32[200] = add uma ulz
    umc:f32[200] = sub b umb
    umd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ume:f32[] = div -2.0 umd
    umf:f32[200] = mul a umc
    umg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ume
    umh:f32[200] = mul umg umf
    umi:f32[] = reduce_sum[axes=(0,)] umh
    umj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    umk:f32[] = div -2.0 umj
    uml:f32[] = convert_element_type[new_dtype=float32 weak_type=False] umk
    umm:f32[200] = mul uml umc
    umn:f32[] = reduce_sum[axes=(0,)] umm
    umo:f32[] = mul 0.0010000000474974513 umi
    ump:f32[] = sub ulx umo
    umq:f32[] = mul 0.0010000000474974513 umn
    umr:f32[] = sub ulz umq
    ums:f32[200] = mul ump a
    umt:f32[200] = add ums umr
    umu:f32[200] = sub b umt
    umv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    umw:f32[] = div -2.0 umv
    umx:f32[200] = mul a umu
    umy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] umw
    umz:f32[200] = mul umy umx
    una:f32[] = reduce_sum[axes=(0,)] umz
    unb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    unc:f32[] = div -2.0 unb
    und:f32[] = convert_element_type[new_dtype=float32 weak_type=False] unc
    une:f32[200] = mul und umu
    unf:f32[] = reduce_sum[axes=(0,)] une
    ung:f32[] = mul 0.0010000000474974513 una
    unh:f32[] = sub ump ung
    uni:f32[] = mul 0.0010000000474974513 unf
    unj:f32[] = sub umr uni
    unk:f32[200] = mul unh a
    unl:f32[200] = add unk unj
    unm:f32[200] = sub b unl
    unn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uno:f32[] = div -2.0 unn
    unp:f32[200] = mul a unm
    unq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uno
    unr:f32[200] = mul unq unp
    uns:f32[] = reduce_sum[axes=(0,)] unr
    unt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    unu:f32[] = div -2.0 unt
    unv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] unu
    unw:f32[200] = mul unv unm
    unx:f32[] = reduce_sum[axes=(0,)] unw
    uny:f32[] = mul 0.0010000000474974513 uns
    unz:f32[] = sub unh uny
    uoa:f32[] = mul 0.0010000000474974513 unx
    uob:f32[] = sub unj uoa
    uoc:f32[200] = mul unz a
    uod:f32[200] = add uoc uob
    uoe:f32[200] = sub b uod
    uof:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uog:f32[] = div -2.0 uof
    uoh:f32[200] = mul a uoe
    uoi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uog
    uoj:f32[200] = mul uoi uoh
    uok:f32[] = reduce_sum[axes=(0,)] uoj
    uol:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uom:f32[] = div -2.0 uol
    uon:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uom
    uoo:f32[200] = mul uon uoe
    uop:f32[] = reduce_sum[axes=(0,)] uoo
    uoq:f32[] = mul 0.0010000000474974513 uok
    uor:f32[] = sub unz uoq
    uos:f32[] = mul 0.0010000000474974513 uop
    uot:f32[] = sub uob uos
    uou:f32[200] = mul uor a
    uov:f32[200] = add uou uot
    uow:f32[200] = sub b uov
    uox:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uoy:f32[] = div -2.0 uox
    uoz:f32[200] = mul a uow
    upa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uoy
    upb:f32[200] = mul upa uoz
    upc:f32[] = reduce_sum[axes=(0,)] upb
    upd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    upe:f32[] = div -2.0 upd
    upf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] upe
    upg:f32[200] = mul upf uow
    uph:f32[] = reduce_sum[axes=(0,)] upg
    upi:f32[] = mul 0.0010000000474974513 upc
    upj:f32[] = sub uor upi
    upk:f32[] = mul 0.0010000000474974513 uph
    upl:f32[] = sub uot upk
    upm:f32[200] = mul upj a
    upn:f32[200] = add upm upl
    upo:f32[200] = sub b upn
    upp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    upq:f32[] = div -2.0 upp
    upr:f32[200] = mul a upo
    ups:f32[] = convert_element_type[new_dtype=float32 weak_type=False] upq
    upt:f32[200] = mul ups upr
    upu:f32[] = reduce_sum[axes=(0,)] upt
    upv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    upw:f32[] = div -2.0 upv
    upx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] upw
    upy:f32[200] = mul upx upo
    upz:f32[] = reduce_sum[axes=(0,)] upy
    uqa:f32[] = mul 0.0010000000474974513 upu
    uqb:f32[] = sub upj uqa
    uqc:f32[] = mul 0.0010000000474974513 upz
    uqd:f32[] = sub upl uqc
    uqe:f32[200] = mul uqb a
    uqf:f32[200] = add uqe uqd
    uqg:f32[200] = sub b uqf
    uqh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uqi:f32[] = div -2.0 uqh
    uqj:f32[200] = mul a uqg
    uqk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uqi
    uql:f32[200] = mul uqk uqj
    uqm:f32[] = reduce_sum[axes=(0,)] uql
    uqn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uqo:f32[] = div -2.0 uqn
    uqp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uqo
    uqq:f32[200] = mul uqp uqg
    uqr:f32[] = reduce_sum[axes=(0,)] uqq
    uqs:f32[] = mul 0.0010000000474974513 uqm
    uqt:f32[] = sub uqb uqs
    uqu:f32[] = mul 0.0010000000474974513 uqr
    uqv:f32[] = sub uqd uqu
    uqw:f32[200] = mul uqt a
    uqx:f32[200] = add uqw uqv
    uqy:f32[200] = sub b uqx
    uqz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ura:f32[] = div -2.0 uqz
    urb:f32[200] = mul a uqy
    urc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ura
    urd:f32[200] = mul urc urb
    ure:f32[] = reduce_sum[axes=(0,)] urd
    urf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    urg:f32[] = div -2.0 urf
    urh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] urg
    uri:f32[200] = mul urh uqy
    urj:f32[] = reduce_sum[axes=(0,)] uri
    urk:f32[] = mul 0.0010000000474974513 ure
    url:f32[] = sub uqt urk
    urm:f32[] = mul 0.0010000000474974513 urj
    urn:f32[] = sub uqv urm
    uro:f32[200] = mul url a
    urp:f32[200] = add uro urn
    urq:f32[200] = sub b urp
    urr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    urs:f32[] = div -2.0 urr
    urt:f32[200] = mul a urq
    uru:f32[] = convert_element_type[new_dtype=float32 weak_type=False] urs
    urv:f32[200] = mul uru urt
    urw:f32[] = reduce_sum[axes=(0,)] urv
    urx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ury:f32[] = div -2.0 urx
    urz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ury
    usa:f32[200] = mul urz urq
    usb:f32[] = reduce_sum[axes=(0,)] usa
    usc:f32[] = mul 0.0010000000474974513 urw
    usd:f32[] = sub url usc
    use:f32[] = mul 0.0010000000474974513 usb
    usf:f32[] = sub urn use
    usg:f32[200] = mul usd a
    ush:f32[200] = add usg usf
    usi:f32[200] = sub b ush
    usj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    usk:f32[] = div -2.0 usj
    usl:f32[200] = mul a usi
    usm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] usk
    usn:f32[200] = mul usm usl
    uso:f32[] = reduce_sum[axes=(0,)] usn
    usp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    usq:f32[] = div -2.0 usp
    usr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] usq
    uss:f32[200] = mul usr usi
    ust:f32[] = reduce_sum[axes=(0,)] uss
    usu:f32[] = mul 0.0010000000474974513 uso
    usv:f32[] = sub usd usu
    usw:f32[] = mul 0.0010000000474974513 ust
    usx:f32[] = sub usf usw
    usy:f32[200] = mul usv a
    usz:f32[200] = add usy usx
    uta:f32[200] = sub b usz
    utb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    utc:f32[] = div -2.0 utb
    utd:f32[200] = mul a uta
    ute:f32[] = convert_element_type[new_dtype=float32 weak_type=False] utc
    utf:f32[200] = mul ute utd
    utg:f32[] = reduce_sum[axes=(0,)] utf
    uth:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uti:f32[] = div -2.0 uth
    utj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uti
    utk:f32[200] = mul utj uta
    utl:f32[] = reduce_sum[axes=(0,)] utk
    utm:f32[] = mul 0.0010000000474974513 utg
    utn:f32[] = sub usv utm
    uto:f32[] = mul 0.0010000000474974513 utl
    utp:f32[] = sub usx uto
    utq:f32[200] = mul utn a
    utr:f32[200] = add utq utp
    uts:f32[200] = sub b utr
    utt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    utu:f32[] = div -2.0 utt
    utv:f32[200] = mul a uts
    utw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] utu
    utx:f32[200] = mul utw utv
    uty:f32[] = reduce_sum[axes=(0,)] utx
    utz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uua:f32[] = div -2.0 utz
    uub:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uua
    uuc:f32[200] = mul uub uts
    uud:f32[] = reduce_sum[axes=(0,)] uuc
    uue:f32[] = mul 0.0010000000474974513 uty
    uuf:f32[] = sub utn uue
    uug:f32[] = mul 0.0010000000474974513 uud
    uuh:f32[] = sub utp uug
    uui:f32[200] = mul uuf a
    uuj:f32[200] = add uui uuh
    uuk:f32[200] = sub b uuj
    uul:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uum:f32[] = div -2.0 uul
    uun:f32[200] = mul a uuk
    uuo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uum
    uup:f32[200] = mul uuo uun
    uuq:f32[] = reduce_sum[axes=(0,)] uup
    uur:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uus:f32[] = div -2.0 uur
    uut:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uus
    uuu:f32[200] = mul uut uuk
    uuv:f32[] = reduce_sum[axes=(0,)] uuu
    uuw:f32[] = mul 0.0010000000474974513 uuq
    uux:f32[] = sub uuf uuw
    uuy:f32[] = mul 0.0010000000474974513 uuv
    uuz:f32[] = sub uuh uuy
    uva:f32[200] = mul uux a
    uvb:f32[200] = add uva uuz
    uvc:f32[200] = sub b uvb
    uvd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uve:f32[] = div -2.0 uvd
    uvf:f32[200] = mul a uvc
    uvg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uve
    uvh:f32[200] = mul uvg uvf
    uvi:f32[] = reduce_sum[axes=(0,)] uvh
    uvj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uvk:f32[] = div -2.0 uvj
    uvl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uvk
    uvm:f32[200] = mul uvl uvc
    uvn:f32[] = reduce_sum[axes=(0,)] uvm
    uvo:f32[] = mul 0.0010000000474974513 uvi
    uvp:f32[] = sub uux uvo
    uvq:f32[] = mul 0.0010000000474974513 uvn
    uvr:f32[] = sub uuz uvq
    uvs:f32[200] = mul uvp a
    uvt:f32[200] = add uvs uvr
    uvu:f32[200] = sub b uvt
    uvv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uvw:f32[] = div -2.0 uvv
    uvx:f32[200] = mul a uvu
    uvy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uvw
    uvz:f32[200] = mul uvy uvx
    uwa:f32[] = reduce_sum[axes=(0,)] uvz
    uwb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uwc:f32[] = div -2.0 uwb
    uwd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uwc
    uwe:f32[200] = mul uwd uvu
    uwf:f32[] = reduce_sum[axes=(0,)] uwe
    uwg:f32[] = mul 0.0010000000474974513 uwa
    uwh:f32[] = sub uvp uwg
    uwi:f32[] = mul 0.0010000000474974513 uwf
    uwj:f32[] = sub uvr uwi
    uwk:f32[200] = mul uwh a
    uwl:f32[200] = add uwk uwj
    uwm:f32[200] = sub b uwl
    uwn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uwo:f32[] = div -2.0 uwn
    uwp:f32[200] = mul a uwm
    uwq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uwo
    uwr:f32[200] = mul uwq uwp
    uws:f32[] = reduce_sum[axes=(0,)] uwr
    uwt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uwu:f32[] = div -2.0 uwt
    uwv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uwu
    uww:f32[200] = mul uwv uwm
    uwx:f32[] = reduce_sum[axes=(0,)] uww
    uwy:f32[] = mul 0.0010000000474974513 uws
    uwz:f32[] = sub uwh uwy
    uxa:f32[] = mul 0.0010000000474974513 uwx
    uxb:f32[] = sub uwj uxa
    uxc:f32[200] = mul uwz a
    uxd:f32[200] = add uxc uxb
    uxe:f32[200] = sub b uxd
    uxf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uxg:f32[] = div -2.0 uxf
    uxh:f32[200] = mul a uxe
    uxi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uxg
    uxj:f32[200] = mul uxi uxh
    uxk:f32[] = reduce_sum[axes=(0,)] uxj
    uxl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uxm:f32[] = div -2.0 uxl
    uxn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uxm
    uxo:f32[200] = mul uxn uxe
    uxp:f32[] = reduce_sum[axes=(0,)] uxo
    uxq:f32[] = mul 0.0010000000474974513 uxk
    uxr:f32[] = sub uwz uxq
    uxs:f32[] = mul 0.0010000000474974513 uxp
    uxt:f32[] = sub uxb uxs
    uxu:f32[200] = mul uxr a
    uxv:f32[200] = add uxu uxt
    uxw:f32[200] = sub b uxv
    uxx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uxy:f32[] = div -2.0 uxx
    uxz:f32[200] = mul a uxw
    uya:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uxy
    uyb:f32[200] = mul uya uxz
    uyc:f32[] = reduce_sum[axes=(0,)] uyb
    uyd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uye:f32[] = div -2.0 uyd
    uyf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uye
    uyg:f32[200] = mul uyf uxw
    uyh:f32[] = reduce_sum[axes=(0,)] uyg
    uyi:f32[] = mul 0.0010000000474974513 uyc
    uyj:f32[] = sub uxr uyi
    uyk:f32[] = mul 0.0010000000474974513 uyh
    uyl:f32[] = sub uxt uyk
    uym:f32[200] = mul uyj a
    uyn:f32[200] = add uym uyl
    uyo:f32[200] = sub b uyn
    uyp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uyq:f32[] = div -2.0 uyp
    uyr:f32[200] = mul a uyo
    uys:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uyq
    uyt:f32[200] = mul uys uyr
    uyu:f32[] = reduce_sum[axes=(0,)] uyt
    uyv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uyw:f32[] = div -2.0 uyv
    uyx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uyw
    uyy:f32[200] = mul uyx uyo
    uyz:f32[] = reduce_sum[axes=(0,)] uyy
    uza:f32[] = mul 0.0010000000474974513 uyu
    uzb:f32[] = sub uyj uza
    uzc:f32[] = mul 0.0010000000474974513 uyz
    uzd:f32[] = sub uyl uzc
    uze:f32[200] = mul uzb a
    uzf:f32[200] = add uze uzd
    uzg:f32[200] = sub b uzf
    uzh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uzi:f32[] = div -2.0 uzh
    uzj:f32[200] = mul a uzg
    uzk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uzi
    uzl:f32[200] = mul uzk uzj
    uzm:f32[] = reduce_sum[axes=(0,)] uzl
    uzn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    uzo:f32[] = div -2.0 uzn
    uzp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] uzo
    uzq:f32[200] = mul uzp uzg
    uzr:f32[] = reduce_sum[axes=(0,)] uzq
    uzs:f32[] = mul 0.0010000000474974513 uzm
    uzt:f32[] = sub uzb uzs
    uzu:f32[] = mul 0.0010000000474974513 uzr
    uzv:f32[] = sub uzd uzu
    uzw:f32[200] = mul uzt a
    uzx:f32[200] = add uzw uzv
    uzy:f32[200] = sub b uzx
    uzz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vaa:f32[] = div -2.0 uzz
    vab:f32[200] = mul a uzy
    vac:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vaa
    vad:f32[200] = mul vac vab
    vae:f32[] = reduce_sum[axes=(0,)] vad
    vaf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vag:f32[] = div -2.0 vaf
    vah:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vag
    vai:f32[200] = mul vah uzy
    vaj:f32[] = reduce_sum[axes=(0,)] vai
    vak:f32[] = mul 0.0010000000474974513 vae
    val:f32[] = sub uzt vak
    vam:f32[] = mul 0.0010000000474974513 vaj
    van:f32[] = sub uzv vam
    vao:f32[200] = mul val a
    vap:f32[200] = add vao van
    vaq:f32[200] = sub b vap
    var:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vas:f32[] = div -2.0 var
    vat:f32[200] = mul a vaq
    vau:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vas
    vav:f32[200] = mul vau vat
    vaw:f32[] = reduce_sum[axes=(0,)] vav
    vax:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vay:f32[] = div -2.0 vax
    vaz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vay
    vba:f32[200] = mul vaz vaq
    vbb:f32[] = reduce_sum[axes=(0,)] vba
    vbc:f32[] = mul 0.0010000000474974513 vaw
    vbd:f32[] = sub val vbc
    vbe:f32[] = mul 0.0010000000474974513 vbb
    vbf:f32[] = sub van vbe
    vbg:f32[200] = mul vbd a
    vbh:f32[200] = add vbg vbf
    vbi:f32[200] = sub b vbh
    vbj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vbk:f32[] = div -2.0 vbj
    vbl:f32[200] = mul a vbi
    vbm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vbk
    vbn:f32[200] = mul vbm vbl
    vbo:f32[] = reduce_sum[axes=(0,)] vbn
    vbp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vbq:f32[] = div -2.0 vbp
    vbr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vbq
    vbs:f32[200] = mul vbr vbi
    vbt:f32[] = reduce_sum[axes=(0,)] vbs
    vbu:f32[] = mul 0.0010000000474974513 vbo
    vbv:f32[] = sub vbd vbu
    vbw:f32[] = mul 0.0010000000474974513 vbt
    vbx:f32[] = sub vbf vbw
    vby:f32[200] = mul vbv a
    vbz:f32[200] = add vby vbx
    vca:f32[200] = sub b vbz
    vcb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vcc:f32[] = div -2.0 vcb
    vcd:f32[200] = mul a vca
    vce:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vcc
    vcf:f32[200] = mul vce vcd
    vcg:f32[] = reduce_sum[axes=(0,)] vcf
    vch:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vci:f32[] = div -2.0 vch
    vcj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vci
    vck:f32[200] = mul vcj vca
    vcl:f32[] = reduce_sum[axes=(0,)] vck
    vcm:f32[] = mul 0.0010000000474974513 vcg
    vcn:f32[] = sub vbv vcm
    vco:f32[] = mul 0.0010000000474974513 vcl
    vcp:f32[] = sub vbx vco
    vcq:f32[200] = mul vcn a
    vcr:f32[200] = add vcq vcp
    vcs:f32[200] = sub b vcr
    vct:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vcu:f32[] = div -2.0 vct
    vcv:f32[200] = mul a vcs
    vcw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vcu
    vcx:f32[200] = mul vcw vcv
    vcy:f32[] = reduce_sum[axes=(0,)] vcx
    vcz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vda:f32[] = div -2.0 vcz
    vdb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vda
    vdc:f32[200] = mul vdb vcs
    vdd:f32[] = reduce_sum[axes=(0,)] vdc
    vde:f32[] = mul 0.0010000000474974513 vcy
    vdf:f32[] = sub vcn vde
    vdg:f32[] = mul 0.0010000000474974513 vdd
    vdh:f32[] = sub vcp vdg
    vdi:f32[200] = mul vdf a
    vdj:f32[200] = add vdi vdh
    vdk:f32[200] = sub b vdj
    vdl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vdm:f32[] = div -2.0 vdl
    vdn:f32[200] = mul a vdk
    vdo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vdm
    vdp:f32[200] = mul vdo vdn
    vdq:f32[] = reduce_sum[axes=(0,)] vdp
    vdr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vds:f32[] = div -2.0 vdr
    vdt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vds
    vdu:f32[200] = mul vdt vdk
    vdv:f32[] = reduce_sum[axes=(0,)] vdu
    vdw:f32[] = mul 0.0010000000474974513 vdq
    vdx:f32[] = sub vdf vdw
    vdy:f32[] = mul 0.0010000000474974513 vdv
    vdz:f32[] = sub vdh vdy
    vea:f32[200] = mul vdx a
    veb:f32[200] = add vea vdz
    vec:f32[200] = sub b veb
    ved:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vee:f32[] = div -2.0 ved
    vef:f32[200] = mul a vec
    veg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vee
    veh:f32[200] = mul veg vef
    vei:f32[] = reduce_sum[axes=(0,)] veh
    vej:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vek:f32[] = div -2.0 vej
    vel:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vek
    vem:f32[200] = mul vel vec
    ven:f32[] = reduce_sum[axes=(0,)] vem
    veo:f32[] = mul 0.0010000000474974513 vei
    vep:f32[] = sub vdx veo
    veq:f32[] = mul 0.0010000000474974513 ven
    ver:f32[] = sub vdz veq
    ves:f32[200] = mul vep a
    vet:f32[200] = add ves ver
    veu:f32[200] = sub b vet
    vev:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vew:f32[] = div -2.0 vev
    vex:f32[200] = mul a veu
    vey:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vew
    vez:f32[200] = mul vey vex
    vfa:f32[] = reduce_sum[axes=(0,)] vez
    vfb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vfc:f32[] = div -2.0 vfb
    vfd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vfc
    vfe:f32[200] = mul vfd veu
    vff:f32[] = reduce_sum[axes=(0,)] vfe
    vfg:f32[] = mul 0.0010000000474974513 vfa
    vfh:f32[] = sub vep vfg
    vfi:f32[] = mul 0.0010000000474974513 vff
    vfj:f32[] = sub ver vfi
    vfk:f32[200] = mul vfh a
    vfl:f32[200] = add vfk vfj
    vfm:f32[200] = sub b vfl
    vfn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vfo:f32[] = div -2.0 vfn
    vfp:f32[200] = mul a vfm
    vfq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vfo
    vfr:f32[200] = mul vfq vfp
    vfs:f32[] = reduce_sum[axes=(0,)] vfr
    vft:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vfu:f32[] = div -2.0 vft
    vfv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vfu
    vfw:f32[200] = mul vfv vfm
    vfx:f32[] = reduce_sum[axes=(0,)] vfw
    vfy:f32[] = mul 0.0010000000474974513 vfs
    vfz:f32[] = sub vfh vfy
    vga:f32[] = mul 0.0010000000474974513 vfx
    vgb:f32[] = sub vfj vga
    vgc:f32[200] = mul vfz a
    vgd:f32[200] = add vgc vgb
    vge:f32[200] = sub b vgd
    vgf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vgg:f32[] = div -2.0 vgf
    vgh:f32[200] = mul a vge
    vgi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vgg
    vgj:f32[200] = mul vgi vgh
    vgk:f32[] = reduce_sum[axes=(0,)] vgj
    vgl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vgm:f32[] = div -2.0 vgl
    vgn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vgm
    vgo:f32[200] = mul vgn vge
    vgp:f32[] = reduce_sum[axes=(0,)] vgo
    vgq:f32[] = mul 0.0010000000474974513 vgk
    vgr:f32[] = sub vfz vgq
    vgs:f32[] = mul 0.0010000000474974513 vgp
    vgt:f32[] = sub vgb vgs
    vgu:f32[200] = mul vgr a
    vgv:f32[200] = add vgu vgt
    vgw:f32[200] = sub b vgv
    vgx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vgy:f32[] = div -2.0 vgx
    vgz:f32[200] = mul a vgw
    vha:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vgy
    vhb:f32[200] = mul vha vgz
    vhc:f32[] = reduce_sum[axes=(0,)] vhb
    vhd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vhe:f32[] = div -2.0 vhd
    vhf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vhe
    vhg:f32[200] = mul vhf vgw
    vhh:f32[] = reduce_sum[axes=(0,)] vhg
    vhi:f32[] = mul 0.0010000000474974513 vhc
    vhj:f32[] = sub vgr vhi
    vhk:f32[] = mul 0.0010000000474974513 vhh
    vhl:f32[] = sub vgt vhk
    vhm:f32[200] = mul vhj a
    vhn:f32[200] = add vhm vhl
    vho:f32[200] = sub b vhn
    vhp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vhq:f32[] = div -2.0 vhp
    vhr:f32[200] = mul a vho
    vhs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vhq
    vht:f32[200] = mul vhs vhr
    vhu:f32[] = reduce_sum[axes=(0,)] vht
    vhv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vhw:f32[] = div -2.0 vhv
    vhx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vhw
    vhy:f32[200] = mul vhx vho
    vhz:f32[] = reduce_sum[axes=(0,)] vhy
    via:f32[] = mul 0.0010000000474974513 vhu
    vib:f32[] = sub vhj via
    vic:f32[] = mul 0.0010000000474974513 vhz
    vid:f32[] = sub vhl vic
    vie:f32[200] = mul vib a
    vif:f32[200] = add vie vid
    vig:f32[200] = sub b vif
    vih:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vii:f32[] = div -2.0 vih
    vij:f32[200] = mul a vig
    vik:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vii
    vil:f32[200] = mul vik vij
    vim:f32[] = reduce_sum[axes=(0,)] vil
    vin:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vio:f32[] = div -2.0 vin
    vip:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vio
    viq:f32[200] = mul vip vig
    vir:f32[] = reduce_sum[axes=(0,)] viq
    vis:f32[] = mul 0.0010000000474974513 vim
    vit:f32[] = sub vib vis
    viu:f32[] = mul 0.0010000000474974513 vir
    viv:f32[] = sub vid viu
    viw:f32[200] = mul vit a
    vix:f32[200] = add viw viv
    viy:f32[200] = sub b vix
    viz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vja:f32[] = div -2.0 viz
    vjb:f32[200] = mul a viy
    vjc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vja
    vjd:f32[200] = mul vjc vjb
    vje:f32[] = reduce_sum[axes=(0,)] vjd
    vjf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vjg:f32[] = div -2.0 vjf
    vjh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vjg
    vji:f32[200] = mul vjh viy
    vjj:f32[] = reduce_sum[axes=(0,)] vji
    vjk:f32[] = mul 0.0010000000474974513 vje
    vjl:f32[] = sub vit vjk
    vjm:f32[] = mul 0.0010000000474974513 vjj
    vjn:f32[] = sub viv vjm
    vjo:f32[200] = mul vjl a
    vjp:f32[200] = add vjo vjn
    vjq:f32[200] = sub b vjp
    vjr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vjs:f32[] = div -2.0 vjr
    vjt:f32[200] = mul a vjq
    vju:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vjs
    vjv:f32[200] = mul vju vjt
    vjw:f32[] = reduce_sum[axes=(0,)] vjv
    vjx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vjy:f32[] = div -2.0 vjx
    vjz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vjy
    vka:f32[200] = mul vjz vjq
    vkb:f32[] = reduce_sum[axes=(0,)] vka
    vkc:f32[] = mul 0.0010000000474974513 vjw
    vkd:f32[] = sub vjl vkc
    vke:f32[] = mul 0.0010000000474974513 vkb
    vkf:f32[] = sub vjn vke
    vkg:f32[200] = mul vkd a
    vkh:f32[200] = add vkg vkf
    vki:f32[200] = sub b vkh
    vkj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vkk:f32[] = div -2.0 vkj
    vkl:f32[200] = mul a vki
    vkm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vkk
    vkn:f32[200] = mul vkm vkl
    vko:f32[] = reduce_sum[axes=(0,)] vkn
    vkp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vkq:f32[] = div -2.0 vkp
    vkr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vkq
    vks:f32[200] = mul vkr vki
    vkt:f32[] = reduce_sum[axes=(0,)] vks
    vku:f32[] = mul 0.0010000000474974513 vko
    vkv:f32[] = sub vkd vku
    vkw:f32[] = mul 0.0010000000474974513 vkt
    vkx:f32[] = sub vkf vkw
    vky:f32[200] = mul vkv a
    vkz:f32[200] = add vky vkx
    vla:f32[200] = sub b vkz
    vlb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vlc:f32[] = div -2.0 vlb
    vld:f32[200] = mul a vla
    vle:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vlc
    vlf:f32[200] = mul vle vld
    vlg:f32[] = reduce_sum[axes=(0,)] vlf
    vlh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vli:f32[] = div -2.0 vlh
    vlj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vli
    vlk:f32[200] = mul vlj vla
    vll:f32[] = reduce_sum[axes=(0,)] vlk
    vlm:f32[] = mul 0.0010000000474974513 vlg
    vln:f32[] = sub vkv vlm
    vlo:f32[] = mul 0.0010000000474974513 vll
    vlp:f32[] = sub vkx vlo
    vlq:f32[200] = mul vln a
    vlr:f32[200] = add vlq vlp
    vls:f32[200] = sub b vlr
    vlt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vlu:f32[] = div -2.0 vlt
    vlv:f32[200] = mul a vls
    vlw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vlu
    vlx:f32[200] = mul vlw vlv
    vly:f32[] = reduce_sum[axes=(0,)] vlx
    vlz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vma:f32[] = div -2.0 vlz
    vmb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vma
    vmc:f32[200] = mul vmb vls
    vmd:f32[] = reduce_sum[axes=(0,)] vmc
    vme:f32[] = mul 0.0010000000474974513 vly
    vmf:f32[] = sub vln vme
    vmg:f32[] = mul 0.0010000000474974513 vmd
    vmh:f32[] = sub vlp vmg
    vmi:f32[200] = mul vmf a
    vmj:f32[200] = add vmi vmh
    vmk:f32[200] = sub b vmj
    vml:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vmm:f32[] = div -2.0 vml
    vmn:f32[200] = mul a vmk
    vmo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vmm
    vmp:f32[200] = mul vmo vmn
    vmq:f32[] = reduce_sum[axes=(0,)] vmp
    vmr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vms:f32[] = div -2.0 vmr
    vmt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vms
    vmu:f32[200] = mul vmt vmk
    vmv:f32[] = reduce_sum[axes=(0,)] vmu
    vmw:f32[] = mul 0.0010000000474974513 vmq
    vmx:f32[] = sub vmf vmw
    vmy:f32[] = mul 0.0010000000474974513 vmv
    vmz:f32[] = sub vmh vmy
    vna:f32[200] = mul vmx a
    vnb:f32[200] = add vna vmz
    vnc:f32[200] = sub b vnb
    vnd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vne:f32[] = div -2.0 vnd
    vnf:f32[200] = mul a vnc
    vng:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vne
    vnh:f32[200] = mul vng vnf
    vni:f32[] = reduce_sum[axes=(0,)] vnh
    vnj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vnk:f32[] = div -2.0 vnj
    vnl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vnk
    vnm:f32[200] = mul vnl vnc
    vnn:f32[] = reduce_sum[axes=(0,)] vnm
    vno:f32[] = mul 0.0010000000474974513 vni
    vnp:f32[] = sub vmx vno
    vnq:f32[] = mul 0.0010000000474974513 vnn
    vnr:f32[] = sub vmz vnq
    vns:f32[200] = mul vnp a
    vnt:f32[200] = add vns vnr
    vnu:f32[200] = sub b vnt
    vnv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vnw:f32[] = div -2.0 vnv
    vnx:f32[200] = mul a vnu
    vny:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vnw
    vnz:f32[200] = mul vny vnx
    voa:f32[] = reduce_sum[axes=(0,)] vnz
    vob:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    voc:f32[] = div -2.0 vob
    vod:f32[] = convert_element_type[new_dtype=float32 weak_type=False] voc
    voe:f32[200] = mul vod vnu
    vof:f32[] = reduce_sum[axes=(0,)] voe
    vog:f32[] = mul 0.0010000000474974513 voa
    voh:f32[] = sub vnp vog
    voi:f32[] = mul 0.0010000000474974513 vof
    voj:f32[] = sub vnr voi
    vok:f32[200] = mul voh a
    vol:f32[200] = add vok voj
    vom:f32[200] = sub b vol
    von:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    voo:f32[] = div -2.0 von
    vop:f32[200] = mul a vom
    voq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] voo
    vor:f32[200] = mul voq vop
    vos:f32[] = reduce_sum[axes=(0,)] vor
    vot:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vou:f32[] = div -2.0 vot
    vov:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vou
    vow:f32[200] = mul vov vom
    vox:f32[] = reduce_sum[axes=(0,)] vow
    voy:f32[] = mul 0.0010000000474974513 vos
    voz:f32[] = sub voh voy
    vpa:f32[] = mul 0.0010000000474974513 vox
    vpb:f32[] = sub voj vpa
    vpc:f32[200] = mul voz a
    vpd:f32[200] = add vpc vpb
    vpe:f32[200] = sub b vpd
    vpf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vpg:f32[] = div -2.0 vpf
    vph:f32[200] = mul a vpe
    vpi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vpg
    vpj:f32[200] = mul vpi vph
    vpk:f32[] = reduce_sum[axes=(0,)] vpj
    vpl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vpm:f32[] = div -2.0 vpl
    vpn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vpm
    vpo:f32[200] = mul vpn vpe
    vpp:f32[] = reduce_sum[axes=(0,)] vpo
    vpq:f32[] = mul 0.0010000000474974513 vpk
    vpr:f32[] = sub voz vpq
    vps:f32[] = mul 0.0010000000474974513 vpp
    vpt:f32[] = sub vpb vps
    vpu:f32[200] = mul vpr a
    vpv:f32[200] = add vpu vpt
    vpw:f32[200] = sub b vpv
    vpx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vpy:f32[] = div -2.0 vpx
    vpz:f32[200] = mul a vpw
    vqa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vpy
    vqb:f32[200] = mul vqa vpz
    vqc:f32[] = reduce_sum[axes=(0,)] vqb
    vqd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vqe:f32[] = div -2.0 vqd
    vqf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vqe
    vqg:f32[200] = mul vqf vpw
    vqh:f32[] = reduce_sum[axes=(0,)] vqg
    vqi:f32[] = mul 0.0010000000474974513 vqc
    vqj:f32[] = sub vpr vqi
    vqk:f32[] = mul 0.0010000000474974513 vqh
    vql:f32[] = sub vpt vqk
    vqm:f32[200] = mul vqj a
    vqn:f32[200] = add vqm vql
    vqo:f32[200] = sub b vqn
    vqp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vqq:f32[] = div -2.0 vqp
    vqr:f32[200] = mul a vqo
    vqs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vqq
    vqt:f32[200] = mul vqs vqr
    vqu:f32[] = reduce_sum[axes=(0,)] vqt
    vqv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vqw:f32[] = div -2.0 vqv
    vqx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vqw
    vqy:f32[200] = mul vqx vqo
    vqz:f32[] = reduce_sum[axes=(0,)] vqy
    vra:f32[] = mul 0.0010000000474974513 vqu
    vrb:f32[] = sub vqj vra
    vrc:f32[] = mul 0.0010000000474974513 vqz
    vrd:f32[] = sub vql vrc
    vre:f32[200] = mul vrb a
    vrf:f32[200] = add vre vrd
    vrg:f32[200] = sub b vrf
    vrh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vri:f32[] = div -2.0 vrh
    vrj:f32[200] = mul a vrg
    vrk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vri
    vrl:f32[200] = mul vrk vrj
    vrm:f32[] = reduce_sum[axes=(0,)] vrl
    vrn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vro:f32[] = div -2.0 vrn
    vrp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vro
    vrq:f32[200] = mul vrp vrg
    vrr:f32[] = reduce_sum[axes=(0,)] vrq
    vrs:f32[] = mul 0.0010000000474974513 vrm
    vrt:f32[] = sub vrb vrs
    vru:f32[] = mul 0.0010000000474974513 vrr
    vrv:f32[] = sub vrd vru
    vrw:f32[200] = mul vrt a
    vrx:f32[200] = add vrw vrv
    vry:f32[200] = sub b vrx
    vrz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vsa:f32[] = div -2.0 vrz
    vsb:f32[200] = mul a vry
    vsc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vsa
    vsd:f32[200] = mul vsc vsb
    vse:f32[] = reduce_sum[axes=(0,)] vsd
    vsf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vsg:f32[] = div -2.0 vsf
    vsh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vsg
    vsi:f32[200] = mul vsh vry
    vsj:f32[] = reduce_sum[axes=(0,)] vsi
    vsk:f32[] = mul 0.0010000000474974513 vse
    vsl:f32[] = sub vrt vsk
    vsm:f32[] = mul 0.0010000000474974513 vsj
    vsn:f32[] = sub vrv vsm
    vso:f32[200] = mul vsl a
    vsp:f32[200] = add vso vsn
    vsq:f32[200] = sub b vsp
    vsr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vss:f32[] = div -2.0 vsr
    vst:f32[200] = mul a vsq
    vsu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vss
    vsv:f32[200] = mul vsu vst
    vsw:f32[] = reduce_sum[axes=(0,)] vsv
    vsx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vsy:f32[] = div -2.0 vsx
    vsz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vsy
    vta:f32[200] = mul vsz vsq
    vtb:f32[] = reduce_sum[axes=(0,)] vta
    vtc:f32[] = mul 0.0010000000474974513 vsw
    vtd:f32[] = sub vsl vtc
    vte:f32[] = mul 0.0010000000474974513 vtb
    vtf:f32[] = sub vsn vte
    vtg:f32[200] = mul vtd a
    vth:f32[200] = add vtg vtf
    vti:f32[200] = sub b vth
    vtj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vtk:f32[] = div -2.0 vtj
    vtl:f32[200] = mul a vti
    vtm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vtk
    vtn:f32[200] = mul vtm vtl
    vto:f32[] = reduce_sum[axes=(0,)] vtn
    vtp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vtq:f32[] = div -2.0 vtp
    vtr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vtq
    vts:f32[200] = mul vtr vti
    vtt:f32[] = reduce_sum[axes=(0,)] vts
    vtu:f32[] = mul 0.0010000000474974513 vto
    vtv:f32[] = sub vtd vtu
    vtw:f32[] = mul 0.0010000000474974513 vtt
    vtx:f32[] = sub vtf vtw
    vty:f32[200] = mul vtv a
    vtz:f32[200] = add vty vtx
    vua:f32[200] = sub b vtz
    vub:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vuc:f32[] = div -2.0 vub
    vud:f32[200] = mul a vua
    vue:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vuc
    vuf:f32[200] = mul vue vud
    vug:f32[] = reduce_sum[axes=(0,)] vuf
    vuh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vui:f32[] = div -2.0 vuh
    vuj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vui
    vuk:f32[200] = mul vuj vua
    vul:f32[] = reduce_sum[axes=(0,)] vuk
    vum:f32[] = mul 0.0010000000474974513 vug
    vun:f32[] = sub vtv vum
    vuo:f32[] = mul 0.0010000000474974513 vul
    vup:f32[] = sub vtx vuo
    vuq:f32[200] = mul vun a
    vur:f32[200] = add vuq vup
    vus:f32[200] = sub b vur
    vut:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vuu:f32[] = div -2.0 vut
    vuv:f32[200] = mul a vus
    vuw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vuu
    vux:f32[200] = mul vuw vuv
    vuy:f32[] = reduce_sum[axes=(0,)] vux
    vuz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vva:f32[] = div -2.0 vuz
    vvb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vva
    vvc:f32[200] = mul vvb vus
    vvd:f32[] = reduce_sum[axes=(0,)] vvc
    vve:f32[] = mul 0.0010000000474974513 vuy
    vvf:f32[] = sub vun vve
    vvg:f32[] = mul 0.0010000000474974513 vvd
    vvh:f32[] = sub vup vvg
    vvi:f32[200] = mul vvf a
    vvj:f32[200] = add vvi vvh
    vvk:f32[200] = sub b vvj
    vvl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vvm:f32[] = div -2.0 vvl
    vvn:f32[200] = mul a vvk
    vvo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vvm
    vvp:f32[200] = mul vvo vvn
    vvq:f32[] = reduce_sum[axes=(0,)] vvp
    vvr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vvs:f32[] = div -2.0 vvr
    vvt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vvs
    vvu:f32[200] = mul vvt vvk
    vvv:f32[] = reduce_sum[axes=(0,)] vvu
    vvw:f32[] = mul 0.0010000000474974513 vvq
    vvx:f32[] = sub vvf vvw
    vvy:f32[] = mul 0.0010000000474974513 vvv
    vvz:f32[] = sub vvh vvy
    vwa:f32[200] = mul vvx a
    vwb:f32[200] = add vwa vvz
    vwc:f32[200] = sub b vwb
    vwd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vwe:f32[] = div -2.0 vwd
    vwf:f32[200] = mul a vwc
    vwg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vwe
    vwh:f32[200] = mul vwg vwf
    vwi:f32[] = reduce_sum[axes=(0,)] vwh
    vwj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vwk:f32[] = div -2.0 vwj
    vwl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vwk
    vwm:f32[200] = mul vwl vwc
    vwn:f32[] = reduce_sum[axes=(0,)] vwm
    vwo:f32[] = mul 0.0010000000474974513 vwi
    vwp:f32[] = sub vvx vwo
    vwq:f32[] = mul 0.0010000000474974513 vwn
    vwr:f32[] = sub vvz vwq
    vws:f32[200] = mul vwp a
    vwt:f32[200] = add vws vwr
    vwu:f32[200] = sub b vwt
    vwv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vww:f32[] = div -2.0 vwv
    vwx:f32[200] = mul a vwu
    vwy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vww
    vwz:f32[200] = mul vwy vwx
    vxa:f32[] = reduce_sum[axes=(0,)] vwz
    vxb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vxc:f32[] = div -2.0 vxb
    vxd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vxc
    vxe:f32[200] = mul vxd vwu
    vxf:f32[] = reduce_sum[axes=(0,)] vxe
    vxg:f32[] = mul 0.0010000000474974513 vxa
    vxh:f32[] = sub vwp vxg
    vxi:f32[] = mul 0.0010000000474974513 vxf
    vxj:f32[] = sub vwr vxi
    vxk:f32[200] = mul vxh a
    vxl:f32[200] = add vxk vxj
    vxm:f32[200] = sub b vxl
    vxn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vxo:f32[] = div -2.0 vxn
    vxp:f32[200] = mul a vxm
    vxq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vxo
    vxr:f32[200] = mul vxq vxp
    vxs:f32[] = reduce_sum[axes=(0,)] vxr
    vxt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vxu:f32[] = div -2.0 vxt
    vxv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vxu
    vxw:f32[200] = mul vxv vxm
    vxx:f32[] = reduce_sum[axes=(0,)] vxw
    vxy:f32[] = mul 0.0010000000474974513 vxs
    vxz:f32[] = sub vxh vxy
    vya:f32[] = mul 0.0010000000474974513 vxx
    vyb:f32[] = sub vxj vya
    vyc:f32[200] = mul vxz a
    vyd:f32[200] = add vyc vyb
    vye:f32[200] = sub b vyd
    vyf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vyg:f32[] = div -2.0 vyf
    vyh:f32[200] = mul a vye
    vyi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vyg
    vyj:f32[200] = mul vyi vyh
    vyk:f32[] = reduce_sum[axes=(0,)] vyj
    vyl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vym:f32[] = div -2.0 vyl
    vyn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vym
    vyo:f32[200] = mul vyn vye
    vyp:f32[] = reduce_sum[axes=(0,)] vyo
    vyq:f32[] = mul 0.0010000000474974513 vyk
    vyr:f32[] = sub vxz vyq
    vys:f32[] = mul 0.0010000000474974513 vyp
    vyt:f32[] = sub vyb vys
    vyu:f32[200] = mul vyr a
    vyv:f32[200] = add vyu vyt
    vyw:f32[200] = sub b vyv
    vyx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vyy:f32[] = div -2.0 vyx
    vyz:f32[200] = mul a vyw
    vza:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vyy
    vzb:f32[200] = mul vza vyz
    vzc:f32[] = reduce_sum[axes=(0,)] vzb
    vzd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vze:f32[] = div -2.0 vzd
    vzf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vze
    vzg:f32[200] = mul vzf vyw
    vzh:f32[] = reduce_sum[axes=(0,)] vzg
    vzi:f32[] = mul 0.0010000000474974513 vzc
    vzj:f32[] = sub vyr vzi
    vzk:f32[] = mul 0.0010000000474974513 vzh
    vzl:f32[] = sub vyt vzk
    vzm:f32[200] = mul vzj a
    vzn:f32[200] = add vzm vzl
    vzo:f32[200] = sub b vzn
    vzp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vzq:f32[] = div -2.0 vzp
    vzr:f32[200] = mul a vzo
    vzs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vzq
    vzt:f32[200] = mul vzs vzr
    vzu:f32[] = reduce_sum[axes=(0,)] vzt
    vzv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    vzw:f32[] = div -2.0 vzv
    vzx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] vzw
    vzy:f32[200] = mul vzx vzo
    vzz:f32[] = reduce_sum[axes=(0,)] vzy
    waa:f32[] = mul 0.0010000000474974513 vzu
    wab:f32[] = sub vzj waa
    wac:f32[] = mul 0.0010000000474974513 vzz
    wad:f32[] = sub vzl wac
    wae:f32[200] = mul wab a
    waf:f32[200] = add wae wad
    wag:f32[200] = sub b waf
    wah:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wai:f32[] = div -2.0 wah
    waj:f32[200] = mul a wag
    wak:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wai
    wal:f32[200] = mul wak waj
    wam:f32[] = reduce_sum[axes=(0,)] wal
    wan:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wao:f32[] = div -2.0 wan
    wap:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wao
    waq:f32[200] = mul wap wag
    war:f32[] = reduce_sum[axes=(0,)] waq
    was:f32[] = mul 0.0010000000474974513 wam
    wat:f32[] = sub wab was
    wau:f32[] = mul 0.0010000000474974513 war
    wav:f32[] = sub wad wau
    waw:f32[200] = mul wat a
    wax:f32[200] = add waw wav
    way:f32[200] = sub b wax
    waz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wba:f32[] = div -2.0 waz
    wbb:f32[200] = mul a way
    wbc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wba
    wbd:f32[200] = mul wbc wbb
    wbe:f32[] = reduce_sum[axes=(0,)] wbd
    wbf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wbg:f32[] = div -2.0 wbf
    wbh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wbg
    wbi:f32[200] = mul wbh way
    wbj:f32[] = reduce_sum[axes=(0,)] wbi
    wbk:f32[] = mul 0.0010000000474974513 wbe
    wbl:f32[] = sub wat wbk
    wbm:f32[] = mul 0.0010000000474974513 wbj
    wbn:f32[] = sub wav wbm
    wbo:f32[200] = mul wbl a
    wbp:f32[200] = add wbo wbn
    wbq:f32[200] = sub b wbp
    wbr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wbs:f32[] = div -2.0 wbr
    wbt:f32[200] = mul a wbq
    wbu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wbs
    wbv:f32[200] = mul wbu wbt
    wbw:f32[] = reduce_sum[axes=(0,)] wbv
    wbx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wby:f32[] = div -2.0 wbx
    wbz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wby
    wca:f32[200] = mul wbz wbq
    wcb:f32[] = reduce_sum[axes=(0,)] wca
    wcc:f32[] = mul 0.0010000000474974513 wbw
    wcd:f32[] = sub wbl wcc
    wce:f32[] = mul 0.0010000000474974513 wcb
    wcf:f32[] = sub wbn wce
    wcg:f32[200] = mul wcd a
    wch:f32[200] = add wcg wcf
    wci:f32[200] = sub b wch
    wcj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wck:f32[] = div -2.0 wcj
    wcl:f32[200] = mul a wci
    wcm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wck
    wcn:f32[200] = mul wcm wcl
    wco:f32[] = reduce_sum[axes=(0,)] wcn
    wcp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wcq:f32[] = div -2.0 wcp
    wcr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wcq
    wcs:f32[200] = mul wcr wci
    wct:f32[] = reduce_sum[axes=(0,)] wcs
    wcu:f32[] = mul 0.0010000000474974513 wco
    wcv:f32[] = sub wcd wcu
    wcw:f32[] = mul 0.0010000000474974513 wct
    wcx:f32[] = sub wcf wcw
    wcy:f32[200] = mul wcv a
    wcz:f32[200] = add wcy wcx
    wda:f32[200] = sub b wcz
    wdb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wdc:f32[] = div -2.0 wdb
    wdd:f32[200] = mul a wda
    wde:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wdc
    wdf:f32[200] = mul wde wdd
    wdg:f32[] = reduce_sum[axes=(0,)] wdf
    wdh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wdi:f32[] = div -2.0 wdh
    wdj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wdi
    wdk:f32[200] = mul wdj wda
    wdl:f32[] = reduce_sum[axes=(0,)] wdk
    wdm:f32[] = mul 0.0010000000474974513 wdg
    wdn:f32[] = sub wcv wdm
    wdo:f32[] = mul 0.0010000000474974513 wdl
    wdp:f32[] = sub wcx wdo
    wdq:f32[200] = mul wdn a
    wdr:f32[200] = add wdq wdp
    wds:f32[200] = sub b wdr
    wdt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wdu:f32[] = div -2.0 wdt
    wdv:f32[200] = mul a wds
    wdw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wdu
    wdx:f32[200] = mul wdw wdv
    wdy:f32[] = reduce_sum[axes=(0,)] wdx
    wdz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wea:f32[] = div -2.0 wdz
    web:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wea
    wec:f32[200] = mul web wds
    wed:f32[] = reduce_sum[axes=(0,)] wec
    wee:f32[] = mul 0.0010000000474974513 wdy
    wef:f32[] = sub wdn wee
    weg:f32[] = mul 0.0010000000474974513 wed
    weh:f32[] = sub wdp weg
    wei:f32[200] = mul wef a
    wej:f32[200] = add wei weh
    wek:f32[200] = sub b wej
    wel:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wem:f32[] = div -2.0 wel
    wen:f32[200] = mul a wek
    weo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wem
    wep:f32[200] = mul weo wen
    weq:f32[] = reduce_sum[axes=(0,)] wep
    wer:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wes:f32[] = div -2.0 wer
    wet:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wes
    weu:f32[200] = mul wet wek
    wev:f32[] = reduce_sum[axes=(0,)] weu
    wew:f32[] = mul 0.0010000000474974513 weq
    wex:f32[] = sub wef wew
    wey:f32[] = mul 0.0010000000474974513 wev
    wez:f32[] = sub weh wey
    wfa:f32[200] = mul wex a
    wfb:f32[200] = add wfa wez
    wfc:f32[200] = sub b wfb
    wfd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wfe:f32[] = div -2.0 wfd
    wff:f32[200] = mul a wfc
    wfg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wfe
    wfh:f32[200] = mul wfg wff
    wfi:f32[] = reduce_sum[axes=(0,)] wfh
    wfj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wfk:f32[] = div -2.0 wfj
    wfl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wfk
    wfm:f32[200] = mul wfl wfc
    wfn:f32[] = reduce_sum[axes=(0,)] wfm
    wfo:f32[] = mul 0.0010000000474974513 wfi
    wfp:f32[] = sub wex wfo
    wfq:f32[] = mul 0.0010000000474974513 wfn
    wfr:f32[] = sub wez wfq
    wfs:f32[200] = mul wfp a
    wft:f32[200] = add wfs wfr
    wfu:f32[200] = sub b wft
    wfv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wfw:f32[] = div -2.0 wfv
    wfx:f32[200] = mul a wfu
    wfy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wfw
    wfz:f32[200] = mul wfy wfx
    wga:f32[] = reduce_sum[axes=(0,)] wfz
    wgb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wgc:f32[] = div -2.0 wgb
    wgd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wgc
    wge:f32[200] = mul wgd wfu
    wgf:f32[] = reduce_sum[axes=(0,)] wge
    wgg:f32[] = mul 0.0010000000474974513 wga
    wgh:f32[] = sub wfp wgg
    wgi:f32[] = mul 0.0010000000474974513 wgf
    wgj:f32[] = sub wfr wgi
    wgk:f32[200] = mul wgh a
    wgl:f32[200] = add wgk wgj
    wgm:f32[200] = sub b wgl
    wgn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wgo:f32[] = div -2.0 wgn
    wgp:f32[200] = mul a wgm
    wgq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wgo
    wgr:f32[200] = mul wgq wgp
    wgs:f32[] = reduce_sum[axes=(0,)] wgr
    wgt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wgu:f32[] = div -2.0 wgt
    wgv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wgu
    wgw:f32[200] = mul wgv wgm
    wgx:f32[] = reduce_sum[axes=(0,)] wgw
    wgy:f32[] = mul 0.0010000000474974513 wgs
    wgz:f32[] = sub wgh wgy
    wha:f32[] = mul 0.0010000000474974513 wgx
    whb:f32[] = sub wgj wha
    whc:f32[200] = mul wgz a
    whd:f32[200] = add whc whb
    whe:f32[200] = sub b whd
    whf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    whg:f32[] = div -2.0 whf
    whh:f32[200] = mul a whe
    whi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] whg
    whj:f32[200] = mul whi whh
    whk:f32[] = reduce_sum[axes=(0,)] whj
    whl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    whm:f32[] = div -2.0 whl
    whn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] whm
    who:f32[200] = mul whn whe
    whp:f32[] = reduce_sum[axes=(0,)] who
    whq:f32[] = mul 0.0010000000474974513 whk
    whr:f32[] = sub wgz whq
    whs:f32[] = mul 0.0010000000474974513 whp
    wht:f32[] = sub whb whs
    whu:f32[200] = mul whr a
    whv:f32[200] = add whu wht
    whw:f32[200] = sub b whv
    whx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    why:f32[] = div -2.0 whx
    whz:f32[200] = mul a whw
    wia:f32[] = convert_element_type[new_dtype=float32 weak_type=False] why
    wib:f32[200] = mul wia whz
    wic:f32[] = reduce_sum[axes=(0,)] wib
    wid:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wie:f32[] = div -2.0 wid
    wif:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wie
    wig:f32[200] = mul wif whw
    wih:f32[] = reduce_sum[axes=(0,)] wig
    wii:f32[] = mul 0.0010000000474974513 wic
    wij:f32[] = sub whr wii
    wik:f32[] = mul 0.0010000000474974513 wih
    wil:f32[] = sub wht wik
    wim:f32[200] = mul wij a
    win:f32[200] = add wim wil
    wio:f32[200] = sub b win
    wip:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wiq:f32[] = div -2.0 wip
    wir:f32[200] = mul a wio
    wis:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wiq
    wit:f32[200] = mul wis wir
    wiu:f32[] = reduce_sum[axes=(0,)] wit
    wiv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wiw:f32[] = div -2.0 wiv
    wix:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wiw
    wiy:f32[200] = mul wix wio
    wiz:f32[] = reduce_sum[axes=(0,)] wiy
    wja:f32[] = mul 0.0010000000474974513 wiu
    wjb:f32[] = sub wij wja
    wjc:f32[] = mul 0.0010000000474974513 wiz
    wjd:f32[] = sub wil wjc
    wje:f32[200] = mul wjb a
    wjf:f32[200] = add wje wjd
    wjg:f32[200] = sub b wjf
    wjh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wji:f32[] = div -2.0 wjh
    wjj:f32[200] = mul a wjg
    wjk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wji
    wjl:f32[200] = mul wjk wjj
    wjm:f32[] = reduce_sum[axes=(0,)] wjl
    wjn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wjo:f32[] = div -2.0 wjn
    wjp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wjo
    wjq:f32[200] = mul wjp wjg
    wjr:f32[] = reduce_sum[axes=(0,)] wjq
    wjs:f32[] = mul 0.0010000000474974513 wjm
    wjt:f32[] = sub wjb wjs
    wju:f32[] = mul 0.0010000000474974513 wjr
    wjv:f32[] = sub wjd wju
    wjw:f32[200] = mul wjt a
    wjx:f32[200] = add wjw wjv
    wjy:f32[200] = sub b wjx
    wjz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wka:f32[] = div -2.0 wjz
    wkb:f32[200] = mul a wjy
    wkc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wka
    wkd:f32[200] = mul wkc wkb
    wke:f32[] = reduce_sum[axes=(0,)] wkd
    wkf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wkg:f32[] = div -2.0 wkf
    wkh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wkg
    wki:f32[200] = mul wkh wjy
    wkj:f32[] = reduce_sum[axes=(0,)] wki
    wkk:f32[] = mul 0.0010000000474974513 wke
    wkl:f32[] = sub wjt wkk
    wkm:f32[] = mul 0.0010000000474974513 wkj
    wkn:f32[] = sub wjv wkm
    wko:f32[200] = mul wkl a
    wkp:f32[200] = add wko wkn
    wkq:f32[200] = sub b wkp
    wkr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wks:f32[] = div -2.0 wkr
    wkt:f32[200] = mul a wkq
    wku:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wks
    wkv:f32[200] = mul wku wkt
    wkw:f32[] = reduce_sum[axes=(0,)] wkv
    wkx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wky:f32[] = div -2.0 wkx
    wkz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wky
    wla:f32[200] = mul wkz wkq
    wlb:f32[] = reduce_sum[axes=(0,)] wla
    wlc:f32[] = mul 0.0010000000474974513 wkw
    wld:f32[] = sub wkl wlc
    wle:f32[] = mul 0.0010000000474974513 wlb
    wlf:f32[] = sub wkn wle
    wlg:f32[200] = mul wld a
    wlh:f32[200] = add wlg wlf
    wli:f32[200] = sub b wlh
    wlj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wlk:f32[] = div -2.0 wlj
    wll:f32[200] = mul a wli
    wlm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wlk
    wln:f32[200] = mul wlm wll
    wlo:f32[] = reduce_sum[axes=(0,)] wln
    wlp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wlq:f32[] = div -2.0 wlp
    wlr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wlq
    wls:f32[200] = mul wlr wli
    wlt:f32[] = reduce_sum[axes=(0,)] wls
    wlu:f32[] = mul 0.0010000000474974513 wlo
    wlv:f32[] = sub wld wlu
    wlw:f32[] = mul 0.0010000000474974513 wlt
    wlx:f32[] = sub wlf wlw
    wly:f32[200] = mul wlv a
    wlz:f32[200] = add wly wlx
    wma:f32[200] = sub b wlz
    wmb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wmc:f32[] = div -2.0 wmb
    wmd:f32[200] = mul a wma
    wme:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wmc
    wmf:f32[200] = mul wme wmd
    wmg:f32[] = reduce_sum[axes=(0,)] wmf
    wmh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wmi:f32[] = div -2.0 wmh
    wmj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wmi
    wmk:f32[200] = mul wmj wma
    wml:f32[] = reduce_sum[axes=(0,)] wmk
    wmm:f32[] = mul 0.0010000000474974513 wmg
    wmn:f32[] = sub wlv wmm
    wmo:f32[] = mul 0.0010000000474974513 wml
    wmp:f32[] = sub wlx wmo
    wmq:f32[200] = mul wmn a
    wmr:f32[200] = add wmq wmp
    wms:f32[200] = sub b wmr
    wmt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wmu:f32[] = div -2.0 wmt
    wmv:f32[200] = mul a wms
    wmw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wmu
    wmx:f32[200] = mul wmw wmv
    wmy:f32[] = reduce_sum[axes=(0,)] wmx
    wmz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wna:f32[] = div -2.0 wmz
    wnb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wna
    wnc:f32[200] = mul wnb wms
    wnd:f32[] = reduce_sum[axes=(0,)] wnc
    wne:f32[] = mul 0.0010000000474974513 wmy
    wnf:f32[] = sub wmn wne
    wng:f32[] = mul 0.0010000000474974513 wnd
    wnh:f32[] = sub wmp wng
    wni:f32[200] = mul wnf a
    wnj:f32[200] = add wni wnh
    wnk:f32[200] = sub b wnj
    wnl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wnm:f32[] = div -2.0 wnl
    wnn:f32[200] = mul a wnk
    wno:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wnm
    wnp:f32[200] = mul wno wnn
    wnq:f32[] = reduce_sum[axes=(0,)] wnp
    wnr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wns:f32[] = div -2.0 wnr
    wnt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wns
    wnu:f32[200] = mul wnt wnk
    wnv:f32[] = reduce_sum[axes=(0,)] wnu
    wnw:f32[] = mul 0.0010000000474974513 wnq
    wnx:f32[] = sub wnf wnw
    wny:f32[] = mul 0.0010000000474974513 wnv
    wnz:f32[] = sub wnh wny
    woa:f32[200] = mul wnx a
    wob:f32[200] = add woa wnz
    woc:f32[200] = sub b wob
    wod:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    woe:f32[] = div -2.0 wod
    wof:f32[200] = mul a woc
    wog:f32[] = convert_element_type[new_dtype=float32 weak_type=False] woe
    woh:f32[200] = mul wog wof
    woi:f32[] = reduce_sum[axes=(0,)] woh
    woj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wok:f32[] = div -2.0 woj
    wol:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wok
    wom:f32[200] = mul wol woc
    won:f32[] = reduce_sum[axes=(0,)] wom
    woo:f32[] = mul 0.0010000000474974513 woi
    wop:f32[] = sub wnx woo
    woq:f32[] = mul 0.0010000000474974513 won
    wor:f32[] = sub wnz woq
    wos:f32[200] = mul wop a
    wot:f32[200] = add wos wor
    wou:f32[200] = sub b wot
    wov:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wow:f32[] = div -2.0 wov
    wox:f32[200] = mul a wou
    woy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wow
    woz:f32[200] = mul woy wox
    wpa:f32[] = reduce_sum[axes=(0,)] woz
    wpb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wpc:f32[] = div -2.0 wpb
    wpd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wpc
    wpe:f32[200] = mul wpd wou
    wpf:f32[] = reduce_sum[axes=(0,)] wpe
    wpg:f32[] = mul 0.0010000000474974513 wpa
    wph:f32[] = sub wop wpg
    wpi:f32[] = mul 0.0010000000474974513 wpf
    wpj:f32[] = sub wor wpi
    wpk:f32[200] = mul wph a
    wpl:f32[200] = add wpk wpj
    wpm:f32[200] = sub b wpl
    wpn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wpo:f32[] = div -2.0 wpn
    wpp:f32[200] = mul a wpm
    wpq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wpo
    wpr:f32[200] = mul wpq wpp
    wps:f32[] = reduce_sum[axes=(0,)] wpr
    wpt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wpu:f32[] = div -2.0 wpt
    wpv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wpu
    wpw:f32[200] = mul wpv wpm
    wpx:f32[] = reduce_sum[axes=(0,)] wpw
    wpy:f32[] = mul 0.0010000000474974513 wps
    wpz:f32[] = sub wph wpy
    wqa:f32[] = mul 0.0010000000474974513 wpx
    wqb:f32[] = sub wpj wqa
    wqc:f32[200] = mul wpz a
    wqd:f32[200] = add wqc wqb
    wqe:f32[200] = sub b wqd
    wqf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wqg:f32[] = div -2.0 wqf
    wqh:f32[200] = mul a wqe
    wqi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wqg
    wqj:f32[200] = mul wqi wqh
    wqk:f32[] = reduce_sum[axes=(0,)] wqj
    wql:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wqm:f32[] = div -2.0 wql
    wqn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wqm
    wqo:f32[200] = mul wqn wqe
    wqp:f32[] = reduce_sum[axes=(0,)] wqo
    wqq:f32[] = mul 0.0010000000474974513 wqk
    wqr:f32[] = sub wpz wqq
    wqs:f32[] = mul 0.0010000000474974513 wqp
    wqt:f32[] = sub wqb wqs
    wqu:f32[200] = mul wqr a
    wqv:f32[200] = add wqu wqt
    wqw:f32[200] = sub b wqv
    wqx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wqy:f32[] = div -2.0 wqx
    wqz:f32[200] = mul a wqw
    wra:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wqy
    wrb:f32[200] = mul wra wqz
    wrc:f32[] = reduce_sum[axes=(0,)] wrb
    wrd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wre:f32[] = div -2.0 wrd
    wrf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wre
    wrg:f32[200] = mul wrf wqw
    wrh:f32[] = reduce_sum[axes=(0,)] wrg
    wri:f32[] = mul 0.0010000000474974513 wrc
    wrj:f32[] = sub wqr wri
    wrk:f32[] = mul 0.0010000000474974513 wrh
    wrl:f32[] = sub wqt wrk
    wrm:f32[200] = mul wrj a
    wrn:f32[200] = add wrm wrl
    wro:f32[200] = sub b wrn
    wrp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wrq:f32[] = div -2.0 wrp
    wrr:f32[200] = mul a wro
    wrs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wrq
    wrt:f32[200] = mul wrs wrr
    wru:f32[] = reduce_sum[axes=(0,)] wrt
    wrv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wrw:f32[] = div -2.0 wrv
    wrx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wrw
    wry:f32[200] = mul wrx wro
    wrz:f32[] = reduce_sum[axes=(0,)] wry
    wsa:f32[] = mul 0.0010000000474974513 wru
    wsb:f32[] = sub wrj wsa
    wsc:f32[] = mul 0.0010000000474974513 wrz
    wsd:f32[] = sub wrl wsc
    wse:f32[200] = mul wsb a
    wsf:f32[200] = add wse wsd
    wsg:f32[200] = sub b wsf
    wsh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wsi:f32[] = div -2.0 wsh
    wsj:f32[200] = mul a wsg
    wsk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wsi
    wsl:f32[200] = mul wsk wsj
    wsm:f32[] = reduce_sum[axes=(0,)] wsl
    wsn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wso:f32[] = div -2.0 wsn
    wsp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wso
    wsq:f32[200] = mul wsp wsg
    wsr:f32[] = reduce_sum[axes=(0,)] wsq
    wss:f32[] = mul 0.0010000000474974513 wsm
    wst:f32[] = sub wsb wss
    wsu:f32[] = mul 0.0010000000474974513 wsr
    wsv:f32[] = sub wsd wsu
    wsw:f32[200] = mul wst a
    wsx:f32[200] = add wsw wsv
    wsy:f32[200] = sub b wsx
    wsz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wta:f32[] = div -2.0 wsz
    wtb:f32[200] = mul a wsy
    wtc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wta
    wtd:f32[200] = mul wtc wtb
    wte:f32[] = reduce_sum[axes=(0,)] wtd
    wtf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wtg:f32[] = div -2.0 wtf
    wth:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wtg
    wti:f32[200] = mul wth wsy
    wtj:f32[] = reduce_sum[axes=(0,)] wti
    wtk:f32[] = mul 0.0010000000474974513 wte
    wtl:f32[] = sub wst wtk
    wtm:f32[] = mul 0.0010000000474974513 wtj
    wtn:f32[] = sub wsv wtm
    wto:f32[200] = mul wtl a
    wtp:f32[200] = add wto wtn
    wtq:f32[200] = sub b wtp
    wtr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wts:f32[] = div -2.0 wtr
    wtt:f32[200] = mul a wtq
    wtu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wts
    wtv:f32[200] = mul wtu wtt
    wtw:f32[] = reduce_sum[axes=(0,)] wtv
    wtx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wty:f32[] = div -2.0 wtx
    wtz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wty
    wua:f32[200] = mul wtz wtq
    wub:f32[] = reduce_sum[axes=(0,)] wua
    wuc:f32[] = mul 0.0010000000474974513 wtw
    wud:f32[] = sub wtl wuc
    wue:f32[] = mul 0.0010000000474974513 wub
    wuf:f32[] = sub wtn wue
    wug:f32[200] = mul wud a
    wuh:f32[200] = add wug wuf
    wui:f32[200] = sub b wuh
    wuj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wuk:f32[] = div -2.0 wuj
    wul:f32[200] = mul a wui
    wum:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wuk
    wun:f32[200] = mul wum wul
    wuo:f32[] = reduce_sum[axes=(0,)] wun
    wup:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wuq:f32[] = div -2.0 wup
    wur:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wuq
    wus:f32[200] = mul wur wui
    wut:f32[] = reduce_sum[axes=(0,)] wus
    wuu:f32[] = mul 0.0010000000474974513 wuo
    wuv:f32[] = sub wud wuu
    wuw:f32[] = mul 0.0010000000474974513 wut
    wux:f32[] = sub wuf wuw
    wuy:f32[200] = mul wuv a
    wuz:f32[200] = add wuy wux
    wva:f32[200] = sub b wuz
    wvb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wvc:f32[] = div -2.0 wvb
    wvd:f32[200] = mul a wva
    wve:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wvc
    wvf:f32[200] = mul wve wvd
    wvg:f32[] = reduce_sum[axes=(0,)] wvf
    wvh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wvi:f32[] = div -2.0 wvh
    wvj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wvi
    wvk:f32[200] = mul wvj wva
    wvl:f32[] = reduce_sum[axes=(0,)] wvk
    wvm:f32[] = mul 0.0010000000474974513 wvg
    wvn:f32[] = sub wuv wvm
    wvo:f32[] = mul 0.0010000000474974513 wvl
    wvp:f32[] = sub wux wvo
    wvq:f32[200] = mul wvn a
    wvr:f32[200] = add wvq wvp
    wvs:f32[200] = sub b wvr
    wvt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wvu:f32[] = div -2.0 wvt
    wvv:f32[200] = mul a wvs
    wvw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wvu
    wvx:f32[200] = mul wvw wvv
    wvy:f32[] = reduce_sum[axes=(0,)] wvx
    wvz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wwa:f32[] = div -2.0 wvz
    wwb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wwa
    wwc:f32[200] = mul wwb wvs
    wwd:f32[] = reduce_sum[axes=(0,)] wwc
    wwe:f32[] = mul 0.0010000000474974513 wvy
    wwf:f32[] = sub wvn wwe
    wwg:f32[] = mul 0.0010000000474974513 wwd
    wwh:f32[] = sub wvp wwg
    wwi:f32[200] = mul wwf a
    wwj:f32[200] = add wwi wwh
    wwk:f32[200] = sub b wwj
    wwl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wwm:f32[] = div -2.0 wwl
    wwn:f32[200] = mul a wwk
    wwo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wwm
    wwp:f32[200] = mul wwo wwn
    wwq:f32[] = reduce_sum[axes=(0,)] wwp
    wwr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wws:f32[] = div -2.0 wwr
    wwt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wws
    wwu:f32[200] = mul wwt wwk
    wwv:f32[] = reduce_sum[axes=(0,)] wwu
    www:f32[] = mul 0.0010000000474974513 wwq
    wwx:f32[] = sub wwf www
    wwy:f32[] = mul 0.0010000000474974513 wwv
    wwz:f32[] = sub wwh wwy
    wxa:f32[200] = mul wwx a
    wxb:f32[200] = add wxa wwz
    wxc:f32[200] = sub b wxb
    wxd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wxe:f32[] = div -2.0 wxd
    wxf:f32[200] = mul a wxc
    wxg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wxe
    wxh:f32[200] = mul wxg wxf
    wxi:f32[] = reduce_sum[axes=(0,)] wxh
    wxj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wxk:f32[] = div -2.0 wxj
    wxl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wxk
    wxm:f32[200] = mul wxl wxc
    wxn:f32[] = reduce_sum[axes=(0,)] wxm
    wxo:f32[] = mul 0.0010000000474974513 wxi
    wxp:f32[] = sub wwx wxo
    wxq:f32[] = mul 0.0010000000474974513 wxn
    wxr:f32[] = sub wwz wxq
    wxs:f32[200] = mul wxp a
    wxt:f32[200] = add wxs wxr
    wxu:f32[200] = sub b wxt
    wxv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wxw:f32[] = div -2.0 wxv
    wxx:f32[200] = mul a wxu
    wxy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wxw
    wxz:f32[200] = mul wxy wxx
    wya:f32[] = reduce_sum[axes=(0,)] wxz
    wyb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wyc:f32[] = div -2.0 wyb
    wyd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wyc
    wye:f32[200] = mul wyd wxu
    wyf:f32[] = reduce_sum[axes=(0,)] wye
    wyg:f32[] = mul 0.0010000000474974513 wya
    wyh:f32[] = sub wxp wyg
    wyi:f32[] = mul 0.0010000000474974513 wyf
    wyj:f32[] = sub wxr wyi
    wyk:f32[200] = mul wyh a
    wyl:f32[200] = add wyk wyj
    wym:f32[200] = sub b wyl
    wyn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wyo:f32[] = div -2.0 wyn
    wyp:f32[200] = mul a wym
    wyq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wyo
    wyr:f32[200] = mul wyq wyp
    wys:f32[] = reduce_sum[axes=(0,)] wyr
    wyt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wyu:f32[] = div -2.0 wyt
    wyv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wyu
    wyw:f32[200] = mul wyv wym
    wyx:f32[] = reduce_sum[axes=(0,)] wyw
    wyy:f32[] = mul 0.0010000000474974513 wys
    wyz:f32[] = sub wyh wyy
    wza:f32[] = mul 0.0010000000474974513 wyx
    wzb:f32[] = sub wyj wza
    wzc:f32[200] = mul wyz a
    wzd:f32[200] = add wzc wzb
    wze:f32[200] = sub b wzd
    wzf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wzg:f32[] = div -2.0 wzf
    wzh:f32[200] = mul a wze
    wzi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wzg
    wzj:f32[200] = mul wzi wzh
    wzk:f32[] = reduce_sum[axes=(0,)] wzj
    wzl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wzm:f32[] = div -2.0 wzl
    wzn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wzm
    wzo:f32[200] = mul wzn wze
    wzp:f32[] = reduce_sum[axes=(0,)] wzo
    wzq:f32[] = mul 0.0010000000474974513 wzk
    wzr:f32[] = sub wyz wzq
    wzs:f32[] = mul 0.0010000000474974513 wzp
    wzt:f32[] = sub wzb wzs
    wzu:f32[200] = mul wzr a
    wzv:f32[200] = add wzu wzt
    wzw:f32[200] = sub b wzv
    wzx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    wzy:f32[] = div -2.0 wzx
    wzz:f32[200] = mul a wzw
    xaa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] wzy
    xab:f32[200] = mul xaa wzz
    xac:f32[] = reduce_sum[axes=(0,)] xab
    xad:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xae:f32[] = div -2.0 xad
    xaf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xae
    xag:f32[200] = mul xaf wzw
    xah:f32[] = reduce_sum[axes=(0,)] xag
    xai:f32[] = mul 0.0010000000474974513 xac
    xaj:f32[] = sub wzr xai
    xak:f32[] = mul 0.0010000000474974513 xah
    xal:f32[] = sub wzt xak
    xam:f32[200] = mul xaj a
    xan:f32[200] = add xam xal
    xao:f32[200] = sub b xan
    xap:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xaq:f32[] = div -2.0 xap
    xar:f32[200] = mul a xao
    xas:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xaq
    xat:f32[200] = mul xas xar
    xau:f32[] = reduce_sum[axes=(0,)] xat
    xav:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xaw:f32[] = div -2.0 xav
    xax:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xaw
    xay:f32[200] = mul xax xao
    xaz:f32[] = reduce_sum[axes=(0,)] xay
    xba:f32[] = mul 0.0010000000474974513 xau
    xbb:f32[] = sub xaj xba
    xbc:f32[] = mul 0.0010000000474974513 xaz
    xbd:f32[] = sub xal xbc
    xbe:f32[200] = mul xbb a
    xbf:f32[200] = add xbe xbd
    xbg:f32[200] = sub b xbf
    xbh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xbi:f32[] = div -2.0 xbh
    xbj:f32[200] = mul a xbg
    xbk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xbi
    xbl:f32[200] = mul xbk xbj
    xbm:f32[] = reduce_sum[axes=(0,)] xbl
    xbn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xbo:f32[] = div -2.0 xbn
    xbp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xbo
    xbq:f32[200] = mul xbp xbg
    xbr:f32[] = reduce_sum[axes=(0,)] xbq
    xbs:f32[] = mul 0.0010000000474974513 xbm
    xbt:f32[] = sub xbb xbs
    xbu:f32[] = mul 0.0010000000474974513 xbr
    xbv:f32[] = sub xbd xbu
    xbw:f32[200] = mul xbt a
    xbx:f32[200] = add xbw xbv
    xby:f32[200] = sub b xbx
    xbz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xca:f32[] = div -2.0 xbz
    xcb:f32[200] = mul a xby
    xcc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xca
    xcd:f32[200] = mul xcc xcb
    xce:f32[] = reduce_sum[axes=(0,)] xcd
    xcf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xcg:f32[] = div -2.0 xcf
    xch:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xcg
    xci:f32[200] = mul xch xby
    xcj:f32[] = reduce_sum[axes=(0,)] xci
    xck:f32[] = mul 0.0010000000474974513 xce
    xcl:f32[] = sub xbt xck
    xcm:f32[] = mul 0.0010000000474974513 xcj
    xcn:f32[] = sub xbv xcm
    xco:f32[200] = mul xcl a
    xcp:f32[200] = add xco xcn
    xcq:f32[200] = sub b xcp
    xcr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xcs:f32[] = div -2.0 xcr
    xct:f32[200] = mul a xcq
    xcu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xcs
    xcv:f32[200] = mul xcu xct
    xcw:f32[] = reduce_sum[axes=(0,)] xcv
    xcx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xcy:f32[] = div -2.0 xcx
    xcz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xcy
    xda:f32[200] = mul xcz xcq
    xdb:f32[] = reduce_sum[axes=(0,)] xda
    xdc:f32[] = mul 0.0010000000474974513 xcw
    xdd:f32[] = sub xcl xdc
    xde:f32[] = mul 0.0010000000474974513 xdb
    xdf:f32[] = sub xcn xde
    xdg:f32[200] = mul xdd a
    xdh:f32[200] = add xdg xdf
    xdi:f32[200] = sub b xdh
    xdj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xdk:f32[] = div -2.0 xdj
    xdl:f32[200] = mul a xdi
    xdm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xdk
    xdn:f32[200] = mul xdm xdl
    xdo:f32[] = reduce_sum[axes=(0,)] xdn
    xdp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xdq:f32[] = div -2.0 xdp
    xdr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xdq
    xds:f32[200] = mul xdr xdi
    xdt:f32[] = reduce_sum[axes=(0,)] xds
    xdu:f32[] = mul 0.0010000000474974513 xdo
    xdv:f32[] = sub xdd xdu
    xdw:f32[] = mul 0.0010000000474974513 xdt
    xdx:f32[] = sub xdf xdw
    xdy:f32[200] = mul xdv a
    xdz:f32[200] = add xdy xdx
    xea:f32[200] = sub b xdz
    xeb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xec:f32[] = div -2.0 xeb
    xed:f32[200] = mul a xea
    xee:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xec
    xef:f32[200] = mul xee xed
    xeg:f32[] = reduce_sum[axes=(0,)] xef
    xeh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xei:f32[] = div -2.0 xeh
    xej:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xei
    xek:f32[200] = mul xej xea
    xel:f32[] = reduce_sum[axes=(0,)] xek
    xem:f32[] = mul 0.0010000000474974513 xeg
    xen:f32[] = sub xdv xem
    xeo:f32[] = mul 0.0010000000474974513 xel
    xep:f32[] = sub xdx xeo
    xeq:f32[200] = mul xen a
    xer:f32[200] = add xeq xep
    xes:f32[200] = sub b xer
    xet:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xeu:f32[] = div -2.0 xet
    xev:f32[200] = mul a xes
    xew:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xeu
    xex:f32[200] = mul xew xev
    xey:f32[] = reduce_sum[axes=(0,)] xex
    xez:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xfa:f32[] = div -2.0 xez
    xfb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xfa
    xfc:f32[200] = mul xfb xes
    xfd:f32[] = reduce_sum[axes=(0,)] xfc
    xfe:f32[] = mul 0.0010000000474974513 xey
    xff:f32[] = sub xen xfe
    xfg:f32[] = mul 0.0010000000474974513 xfd
    xfh:f32[] = sub xep xfg
    xfi:f32[200] = mul xff a
    xfj:f32[200] = add xfi xfh
    xfk:f32[200] = sub b xfj
    xfl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xfm:f32[] = div -2.0 xfl
    xfn:f32[200] = mul a xfk
    xfo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xfm
    xfp:f32[200] = mul xfo xfn
    xfq:f32[] = reduce_sum[axes=(0,)] xfp
    xfr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xfs:f32[] = div -2.0 xfr
    xft:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xfs
    xfu:f32[200] = mul xft xfk
    xfv:f32[] = reduce_sum[axes=(0,)] xfu
    xfw:f32[] = mul 0.0010000000474974513 xfq
    xfx:f32[] = sub xff xfw
    xfy:f32[] = mul 0.0010000000474974513 xfv
    xfz:f32[] = sub xfh xfy
    xga:f32[200] = mul xfx a
    xgb:f32[200] = add xga xfz
    xgc:f32[200] = sub b xgb
    xgd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xge:f32[] = div -2.0 xgd
    xgf:f32[200] = mul a xgc
    xgg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xge
    xgh:f32[200] = mul xgg xgf
    xgi:f32[] = reduce_sum[axes=(0,)] xgh
    xgj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xgk:f32[] = div -2.0 xgj
    xgl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xgk
    xgm:f32[200] = mul xgl xgc
    xgn:f32[] = reduce_sum[axes=(0,)] xgm
    xgo:f32[] = mul 0.0010000000474974513 xgi
    xgp:f32[] = sub xfx xgo
    xgq:f32[] = mul 0.0010000000474974513 xgn
    xgr:f32[] = sub xfz xgq
    xgs:f32[200] = mul xgp a
    xgt:f32[200] = add xgs xgr
    xgu:f32[200] = sub b xgt
    xgv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xgw:f32[] = div -2.0 xgv
    xgx:f32[200] = mul a xgu
    xgy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xgw
    xgz:f32[200] = mul xgy xgx
    xha:f32[] = reduce_sum[axes=(0,)] xgz
    xhb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xhc:f32[] = div -2.0 xhb
    xhd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xhc
    xhe:f32[200] = mul xhd xgu
    xhf:f32[] = reduce_sum[axes=(0,)] xhe
    xhg:f32[] = mul 0.0010000000474974513 xha
    xhh:f32[] = sub xgp xhg
    xhi:f32[] = mul 0.0010000000474974513 xhf
    xhj:f32[] = sub xgr xhi
    xhk:f32[200] = mul xhh a
    xhl:f32[200] = add xhk xhj
    xhm:f32[200] = sub b xhl
    xhn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xho:f32[] = div -2.0 xhn
    xhp:f32[200] = mul a xhm
    xhq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xho
    xhr:f32[200] = mul xhq xhp
    xhs:f32[] = reduce_sum[axes=(0,)] xhr
    xht:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xhu:f32[] = div -2.0 xht
    xhv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xhu
    xhw:f32[200] = mul xhv xhm
    xhx:f32[] = reduce_sum[axes=(0,)] xhw
    xhy:f32[] = mul 0.0010000000474974513 xhs
    xhz:f32[] = sub xhh xhy
    xia:f32[] = mul 0.0010000000474974513 xhx
    xib:f32[] = sub xhj xia
    xic:f32[200] = mul xhz a
    xid:f32[200] = add xic xib
    xie:f32[200] = sub b xid
    xif:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xig:f32[] = div -2.0 xif
    xih:f32[200] = mul a xie
    xii:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xig
    xij:f32[200] = mul xii xih
    xik:f32[] = reduce_sum[axes=(0,)] xij
    xil:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xim:f32[] = div -2.0 xil
    xin:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xim
    xio:f32[200] = mul xin xie
    xip:f32[] = reduce_sum[axes=(0,)] xio
    xiq:f32[] = mul 0.0010000000474974513 xik
    xir:f32[] = sub xhz xiq
    xis:f32[] = mul 0.0010000000474974513 xip
    xit:f32[] = sub xib xis
    xiu:f32[200] = mul xir a
    xiv:f32[200] = add xiu xit
    xiw:f32[200] = sub b xiv
    xix:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xiy:f32[] = div -2.0 xix
    xiz:f32[200] = mul a xiw
    xja:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xiy
    xjb:f32[200] = mul xja xiz
    xjc:f32[] = reduce_sum[axes=(0,)] xjb
    xjd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xje:f32[] = div -2.0 xjd
    xjf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xje
    xjg:f32[200] = mul xjf xiw
    xjh:f32[] = reduce_sum[axes=(0,)] xjg
    xji:f32[] = mul 0.0010000000474974513 xjc
    xjj:f32[] = sub xir xji
    xjk:f32[] = mul 0.0010000000474974513 xjh
    xjl:f32[] = sub xit xjk
    xjm:f32[200] = mul xjj a
    xjn:f32[200] = add xjm xjl
    xjo:f32[200] = sub b xjn
    xjp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xjq:f32[] = div -2.0 xjp
    xjr:f32[200] = mul a xjo
    xjs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xjq
    xjt:f32[200] = mul xjs xjr
    xju:f32[] = reduce_sum[axes=(0,)] xjt
    xjv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xjw:f32[] = div -2.0 xjv
    xjx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xjw
    xjy:f32[200] = mul xjx xjo
    xjz:f32[] = reduce_sum[axes=(0,)] xjy
    xka:f32[] = mul 0.0010000000474974513 xju
    xkb:f32[] = sub xjj xka
    xkc:f32[] = mul 0.0010000000474974513 xjz
    xkd:f32[] = sub xjl xkc
    xke:f32[200] = mul xkb a
    xkf:f32[200] = add xke xkd
    xkg:f32[200] = sub b xkf
    xkh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xki:f32[] = div -2.0 xkh
    xkj:f32[200] = mul a xkg
    xkk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xki
    xkl:f32[200] = mul xkk xkj
    xkm:f32[] = reduce_sum[axes=(0,)] xkl
    xkn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xko:f32[] = div -2.0 xkn
    xkp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xko
    xkq:f32[200] = mul xkp xkg
    xkr:f32[] = reduce_sum[axes=(0,)] xkq
    xks:f32[] = mul 0.0010000000474974513 xkm
    xkt:f32[] = sub xkb xks
    xku:f32[] = mul 0.0010000000474974513 xkr
    xkv:f32[] = sub xkd xku
    xkw:f32[200] = mul xkt a
    xkx:f32[200] = add xkw xkv
    xky:f32[200] = sub b xkx
    xkz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xla:f32[] = div -2.0 xkz
    xlb:f32[200] = mul a xky
    xlc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xla
    xld:f32[200] = mul xlc xlb
    xle:f32[] = reduce_sum[axes=(0,)] xld
    xlf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xlg:f32[] = div -2.0 xlf
    xlh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xlg
    xli:f32[200] = mul xlh xky
    xlj:f32[] = reduce_sum[axes=(0,)] xli
    xlk:f32[] = mul 0.0010000000474974513 xle
    xll:f32[] = sub xkt xlk
    xlm:f32[] = mul 0.0010000000474974513 xlj
    xln:f32[] = sub xkv xlm
    xlo:f32[200] = mul xll a
    xlp:f32[200] = add xlo xln
    xlq:f32[200] = sub b xlp
    xlr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xls:f32[] = div -2.0 xlr
    xlt:f32[200] = mul a xlq
    xlu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xls
    xlv:f32[200] = mul xlu xlt
    xlw:f32[] = reduce_sum[axes=(0,)] xlv
    xlx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xly:f32[] = div -2.0 xlx
    xlz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xly
    xma:f32[200] = mul xlz xlq
    xmb:f32[] = reduce_sum[axes=(0,)] xma
    xmc:f32[] = mul 0.0010000000474974513 xlw
    xmd:f32[] = sub xll xmc
    xme:f32[] = mul 0.0010000000474974513 xmb
    xmf:f32[] = sub xln xme
    xmg:f32[200] = mul xmd a
    xmh:f32[200] = add xmg xmf
    xmi:f32[200] = sub b xmh
    xmj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xmk:f32[] = div -2.0 xmj
    xml:f32[200] = mul a xmi
    xmm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xmk
    xmn:f32[200] = mul xmm xml
    xmo:f32[] = reduce_sum[axes=(0,)] xmn
    xmp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xmq:f32[] = div -2.0 xmp
    xmr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xmq
    xms:f32[200] = mul xmr xmi
    xmt:f32[] = reduce_sum[axes=(0,)] xms
    xmu:f32[] = mul 0.0010000000474974513 xmo
    xmv:f32[] = sub xmd xmu
    xmw:f32[] = mul 0.0010000000474974513 xmt
    xmx:f32[] = sub xmf xmw
    xmy:f32[200] = mul xmv a
    xmz:f32[200] = add xmy xmx
    xna:f32[200] = sub b xmz
    xnb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xnc:f32[] = div -2.0 xnb
    xnd:f32[200] = mul a xna
    xne:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xnc
    xnf:f32[200] = mul xne xnd
    xng:f32[] = reduce_sum[axes=(0,)] xnf
    xnh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xni:f32[] = div -2.0 xnh
    xnj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xni
    xnk:f32[200] = mul xnj xna
    xnl:f32[] = reduce_sum[axes=(0,)] xnk
    xnm:f32[] = mul 0.0010000000474974513 xng
    xnn:f32[] = sub xmv xnm
    xno:f32[] = mul 0.0010000000474974513 xnl
    xnp:f32[] = sub xmx xno
    xnq:f32[200] = mul xnn a
    xnr:f32[200] = add xnq xnp
    xns:f32[200] = sub b xnr
    xnt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xnu:f32[] = div -2.0 xnt
    xnv:f32[200] = mul a xns
    xnw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xnu
    xnx:f32[200] = mul xnw xnv
    xny:f32[] = reduce_sum[axes=(0,)] xnx
    xnz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xoa:f32[] = div -2.0 xnz
    xob:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xoa
    xoc:f32[200] = mul xob xns
    xod:f32[] = reduce_sum[axes=(0,)] xoc
    xoe:f32[] = mul 0.0010000000474974513 xny
    xof:f32[] = sub xnn xoe
    xog:f32[] = mul 0.0010000000474974513 xod
    xoh:f32[] = sub xnp xog
    xoi:f32[200] = mul xof a
    xoj:f32[200] = add xoi xoh
    xok:f32[200] = sub b xoj
    xol:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xom:f32[] = div -2.0 xol
    xon:f32[200] = mul a xok
    xoo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xom
    xop:f32[200] = mul xoo xon
    xoq:f32[] = reduce_sum[axes=(0,)] xop
    xor:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xos:f32[] = div -2.0 xor
    xot:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xos
    xou:f32[200] = mul xot xok
    xov:f32[] = reduce_sum[axes=(0,)] xou
    xow:f32[] = mul 0.0010000000474974513 xoq
    xox:f32[] = sub xof xow
    xoy:f32[] = mul 0.0010000000474974513 xov
    xoz:f32[] = sub xoh xoy
    xpa:f32[200] = mul xox a
    xpb:f32[200] = add xpa xoz
    xpc:f32[200] = sub b xpb
    xpd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xpe:f32[] = div -2.0 xpd
    xpf:f32[200] = mul a xpc
    xpg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xpe
    xph:f32[200] = mul xpg xpf
    xpi:f32[] = reduce_sum[axes=(0,)] xph
    xpj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xpk:f32[] = div -2.0 xpj
    xpl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xpk
    xpm:f32[200] = mul xpl xpc
    xpn:f32[] = reduce_sum[axes=(0,)] xpm
    xpo:f32[] = mul 0.0010000000474974513 xpi
    xpp:f32[] = sub xox xpo
    xpq:f32[] = mul 0.0010000000474974513 xpn
    xpr:f32[] = sub xoz xpq
    xps:f32[200] = mul xpp a
    xpt:f32[200] = add xps xpr
    xpu:f32[200] = sub b xpt
    xpv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xpw:f32[] = div -2.0 xpv
    xpx:f32[200] = mul a xpu
    xpy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xpw
    xpz:f32[200] = mul xpy xpx
    xqa:f32[] = reduce_sum[axes=(0,)] xpz
    xqb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xqc:f32[] = div -2.0 xqb
    xqd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xqc
    xqe:f32[200] = mul xqd xpu
    xqf:f32[] = reduce_sum[axes=(0,)] xqe
    xqg:f32[] = mul 0.0010000000474974513 xqa
    xqh:f32[] = sub xpp xqg
    xqi:f32[] = mul 0.0010000000474974513 xqf
    xqj:f32[] = sub xpr xqi
    xqk:f32[200] = mul xqh a
    xql:f32[200] = add xqk xqj
    xqm:f32[200] = sub b xql
    xqn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xqo:f32[] = div -2.0 xqn
    xqp:f32[200] = mul a xqm
    xqq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xqo
    xqr:f32[200] = mul xqq xqp
    xqs:f32[] = reduce_sum[axes=(0,)] xqr
    xqt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xqu:f32[] = div -2.0 xqt
    xqv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xqu
    xqw:f32[200] = mul xqv xqm
    xqx:f32[] = reduce_sum[axes=(0,)] xqw
    xqy:f32[] = mul 0.0010000000474974513 xqs
    xqz:f32[] = sub xqh xqy
    xra:f32[] = mul 0.0010000000474974513 xqx
    xrb:f32[] = sub xqj xra
    xrc:f32[200] = mul xqz a
    xrd:f32[200] = add xrc xrb
    xre:f32[200] = sub b xrd
    xrf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xrg:f32[] = div -2.0 xrf
    xrh:f32[200] = mul a xre
    xri:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xrg
    xrj:f32[200] = mul xri xrh
    xrk:f32[] = reduce_sum[axes=(0,)] xrj
    xrl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xrm:f32[] = div -2.0 xrl
    xrn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xrm
    xro:f32[200] = mul xrn xre
    xrp:f32[] = reduce_sum[axes=(0,)] xro
    xrq:f32[] = mul 0.0010000000474974513 xrk
    xrr:f32[] = sub xqz xrq
    xrs:f32[] = mul 0.0010000000474974513 xrp
    xrt:f32[] = sub xrb xrs
    xru:f32[200] = mul xrr a
    xrv:f32[200] = add xru xrt
    xrw:f32[200] = sub b xrv
    xrx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xry:f32[] = div -2.0 xrx
    xrz:f32[200] = mul a xrw
    xsa:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xry
    xsb:f32[200] = mul xsa xrz
    xsc:f32[] = reduce_sum[axes=(0,)] xsb
    xsd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xse:f32[] = div -2.0 xsd
    xsf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xse
    xsg:f32[200] = mul xsf xrw
    xsh:f32[] = reduce_sum[axes=(0,)] xsg
    xsi:f32[] = mul 0.0010000000474974513 xsc
    xsj:f32[] = sub xrr xsi
    xsk:f32[] = mul 0.0010000000474974513 xsh
    xsl:f32[] = sub xrt xsk
    xsm:f32[200] = mul xsj a
    xsn:f32[200] = add xsm xsl
    xso:f32[200] = sub b xsn
    xsp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xsq:f32[] = div -2.0 xsp
    xsr:f32[200] = mul a xso
    xss:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xsq
    xst:f32[200] = mul xss xsr
    xsu:f32[] = reduce_sum[axes=(0,)] xst
    xsv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xsw:f32[] = div -2.0 xsv
    xsx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xsw
    xsy:f32[200] = mul xsx xso
    xsz:f32[] = reduce_sum[axes=(0,)] xsy
    xta:f32[] = mul 0.0010000000474974513 xsu
    xtb:f32[] = sub xsj xta
    xtc:f32[] = mul 0.0010000000474974513 xsz
    xtd:f32[] = sub xsl xtc
    xte:f32[200] = mul xtb a
    xtf:f32[200] = add xte xtd
    xtg:f32[200] = sub b xtf
    xth:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xti:f32[] = div -2.0 xth
    xtj:f32[200] = mul a xtg
    xtk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xti
    xtl:f32[200] = mul xtk xtj
    xtm:f32[] = reduce_sum[axes=(0,)] xtl
    xtn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xto:f32[] = div -2.0 xtn
    xtp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xto
    xtq:f32[200] = mul xtp xtg
    xtr:f32[] = reduce_sum[axes=(0,)] xtq
    xts:f32[] = mul 0.0010000000474974513 xtm
    xtt:f32[] = sub xtb xts
    xtu:f32[] = mul 0.0010000000474974513 xtr
    xtv:f32[] = sub xtd xtu
    xtw:f32[200] = mul xtt a
    xtx:f32[200] = add xtw xtv
    xty:f32[200] = sub b xtx
    xtz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xua:f32[] = div -2.0 xtz
    xub:f32[200] = mul a xty
    xuc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xua
    xud:f32[200] = mul xuc xub
    xue:f32[] = reduce_sum[axes=(0,)] xud
    xuf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xug:f32[] = div -2.0 xuf
    xuh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xug
    xui:f32[200] = mul xuh xty
    xuj:f32[] = reduce_sum[axes=(0,)] xui
    xuk:f32[] = mul 0.0010000000474974513 xue
    xul:f32[] = sub xtt xuk
    xum:f32[] = mul 0.0010000000474974513 xuj
    xun:f32[] = sub xtv xum
    xuo:f32[200] = mul xul a
    xup:f32[200] = add xuo xun
    xuq:f32[200] = sub b xup
    xur:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xus:f32[] = div -2.0 xur
    xut:f32[200] = mul a xuq
    xuu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xus
    xuv:f32[200] = mul xuu xut
    xuw:f32[] = reduce_sum[axes=(0,)] xuv
    xux:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xuy:f32[] = div -2.0 xux
    xuz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xuy
    xva:f32[200] = mul xuz xuq
    xvb:f32[] = reduce_sum[axes=(0,)] xva
    xvc:f32[] = mul 0.0010000000474974513 xuw
    xvd:f32[] = sub xul xvc
    xve:f32[] = mul 0.0010000000474974513 xvb
    xvf:f32[] = sub xun xve
    xvg:f32[200] = mul xvd a
    xvh:f32[200] = add xvg xvf
    xvi:f32[200] = sub b xvh
    xvj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xvk:f32[] = div -2.0 xvj
    xvl:f32[200] = mul a xvi
    xvm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xvk
    xvn:f32[200] = mul xvm xvl
    xvo:f32[] = reduce_sum[axes=(0,)] xvn
    xvp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xvq:f32[] = div -2.0 xvp
    xvr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xvq
    xvs:f32[200] = mul xvr xvi
    xvt:f32[] = reduce_sum[axes=(0,)] xvs
    xvu:f32[] = mul 0.0010000000474974513 xvo
    xvv:f32[] = sub xvd xvu
    xvw:f32[] = mul 0.0010000000474974513 xvt
    xvx:f32[] = sub xvf xvw
    xvy:f32[200] = mul xvv a
    xvz:f32[200] = add xvy xvx
    xwa:f32[200] = sub b xvz
    xwb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xwc:f32[] = div -2.0 xwb
    xwd:f32[200] = mul a xwa
    xwe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xwc
    xwf:f32[200] = mul xwe xwd
    xwg:f32[] = reduce_sum[axes=(0,)] xwf
    xwh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xwi:f32[] = div -2.0 xwh
    xwj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xwi
    xwk:f32[200] = mul xwj xwa
    xwl:f32[] = reduce_sum[axes=(0,)] xwk
    xwm:f32[] = mul 0.0010000000474974513 xwg
    xwn:f32[] = sub xvv xwm
    xwo:f32[] = mul 0.0010000000474974513 xwl
    xwp:f32[] = sub xvx xwo
    xwq:f32[200] = mul xwn a
    xwr:f32[200] = add xwq xwp
    xws:f32[200] = sub b xwr
    xwt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xwu:f32[] = div -2.0 xwt
    xwv:f32[200] = mul a xws
    xww:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xwu
    xwx:f32[200] = mul xww xwv
    xwy:f32[] = reduce_sum[axes=(0,)] xwx
    xwz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xxa:f32[] = div -2.0 xwz
    xxb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xxa
    xxc:f32[200] = mul xxb xws
    xxd:f32[] = reduce_sum[axes=(0,)] xxc
    xxe:f32[] = mul 0.0010000000474974513 xwy
    xxf:f32[] = sub xwn xxe
    xxg:f32[] = mul 0.0010000000474974513 xxd
    xxh:f32[] = sub xwp xxg
    xxi:f32[200] = mul xxf a
    xxj:f32[200] = add xxi xxh
    xxk:f32[200] = sub b xxj
    xxl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xxm:f32[] = div -2.0 xxl
    xxn:f32[200] = mul a xxk
    xxo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xxm
    xxp:f32[200] = mul xxo xxn
    xxq:f32[] = reduce_sum[axes=(0,)] xxp
    xxr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xxs:f32[] = div -2.0 xxr
    xxt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xxs
    xxu:f32[200] = mul xxt xxk
    xxv:f32[] = reduce_sum[axes=(0,)] xxu
    xxw:f32[] = mul 0.0010000000474974513 xxq
    xxx:f32[] = sub xxf xxw
    xxy:f32[] = mul 0.0010000000474974513 xxv
    xxz:f32[] = sub xxh xxy
    xya:f32[200] = mul xxx a
    xyb:f32[200] = add xya xxz
    xyc:f32[200] = sub b xyb
    xyd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xye:f32[] = div -2.0 xyd
    xyf:f32[200] = mul a xyc
    xyg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xye
    xyh:f32[200] = mul xyg xyf
    xyi:f32[] = reduce_sum[axes=(0,)] xyh
    xyj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xyk:f32[] = div -2.0 xyj
    xyl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xyk
    xym:f32[200] = mul xyl xyc
    xyn:f32[] = reduce_sum[axes=(0,)] xym
    xyo:f32[] = mul 0.0010000000474974513 xyi
    xyp:f32[] = sub xxx xyo
    xyq:f32[] = mul 0.0010000000474974513 xyn
    xyr:f32[] = sub xxz xyq
    xys:f32[200] = mul xyp a
    xyt:f32[200] = add xys xyr
    xyu:f32[200] = sub b xyt
    xyv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xyw:f32[] = div -2.0 xyv
    xyx:f32[200] = mul a xyu
    xyy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xyw
    xyz:f32[200] = mul xyy xyx
    xza:f32[] = reduce_sum[axes=(0,)] xyz
    xzb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xzc:f32[] = div -2.0 xzb
    xzd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xzc
    xze:f32[200] = mul xzd xyu
    xzf:f32[] = reduce_sum[axes=(0,)] xze
    xzg:f32[] = mul 0.0010000000474974513 xza
    xzh:f32[] = sub xyp xzg
    xzi:f32[] = mul 0.0010000000474974513 xzf
    xzj:f32[] = sub xyr xzi
    xzk:f32[200] = mul xzh a
    xzl:f32[200] = add xzk xzj
    xzm:f32[200] = sub b xzl
    xzn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xzo:f32[] = div -2.0 xzn
    xzp:f32[200] = mul a xzm
    xzq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xzo
    xzr:f32[200] = mul xzq xzp
    xzs:f32[] = reduce_sum[axes=(0,)] xzr
    xzt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    xzu:f32[] = div -2.0 xzt
    xzv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] xzu
    xzw:f32[200] = mul xzv xzm
    xzx:f32[] = reduce_sum[axes=(0,)] xzw
    xzy:f32[] = mul 0.0010000000474974513 xzs
    xzz:f32[] = sub xzh xzy
    yaa:f32[] = mul 0.0010000000474974513 xzx
    yab:f32[] = sub xzj yaa
    yac:f32[200] = mul xzz a
    yad:f32[200] = add yac yab
    yae:f32[200] = sub b yad
    yaf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yag:f32[] = div -2.0 yaf
    yah:f32[200] = mul a yae
    yai:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yag
    yaj:f32[200] = mul yai yah
    yak:f32[] = reduce_sum[axes=(0,)] yaj
    yal:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yam:f32[] = div -2.0 yal
    yan:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yam
    yao:f32[200] = mul yan yae
    yap:f32[] = reduce_sum[axes=(0,)] yao
    yaq:f32[] = mul 0.0010000000474974513 yak
    yar:f32[] = sub xzz yaq
    yas:f32[] = mul 0.0010000000474974513 yap
    yat:f32[] = sub yab yas
    yau:f32[200] = mul yar a
    yav:f32[200] = add yau yat
    yaw:f32[200] = sub b yav
    yax:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yay:f32[] = div -2.0 yax
    yaz:f32[200] = mul a yaw
    yba:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yay
    ybb:f32[200] = mul yba yaz
    ybc:f32[] = reduce_sum[axes=(0,)] ybb
    ybd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ybe:f32[] = div -2.0 ybd
    ybf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ybe
    ybg:f32[200] = mul ybf yaw
    ybh:f32[] = reduce_sum[axes=(0,)] ybg
    ybi:f32[] = mul 0.0010000000474974513 ybc
    ybj:f32[] = sub yar ybi
    ybk:f32[] = mul 0.0010000000474974513 ybh
    ybl:f32[] = sub yat ybk
    ybm:f32[200] = mul ybj a
    ybn:f32[200] = add ybm ybl
    ybo:f32[200] = sub b ybn
    ybp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ybq:f32[] = div -2.0 ybp
    ybr:f32[200] = mul a ybo
    ybs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ybq
    ybt:f32[200] = mul ybs ybr
    ybu:f32[] = reduce_sum[axes=(0,)] ybt
    ybv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ybw:f32[] = div -2.0 ybv
    ybx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ybw
    yby:f32[200] = mul ybx ybo
    ybz:f32[] = reduce_sum[axes=(0,)] yby
    yca:f32[] = mul 0.0010000000474974513 ybu
    ycb:f32[] = sub ybj yca
    ycc:f32[] = mul 0.0010000000474974513 ybz
    ycd:f32[] = sub ybl ycc
    yce:f32[200] = mul ycb a
    ycf:f32[200] = add yce ycd
    ycg:f32[200] = sub b ycf
    ych:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yci:f32[] = div -2.0 ych
    ycj:f32[200] = mul a ycg
    yck:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yci
    ycl:f32[200] = mul yck ycj
    ycm:f32[] = reduce_sum[axes=(0,)] ycl
    ycn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yco:f32[] = div -2.0 ycn
    ycp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yco
    ycq:f32[200] = mul ycp ycg
    ycr:f32[] = reduce_sum[axes=(0,)] ycq
    ycs:f32[] = mul 0.0010000000474974513 ycm
    yct:f32[] = sub ycb ycs
    ycu:f32[] = mul 0.0010000000474974513 ycr
    ycv:f32[] = sub ycd ycu
    ycw:f32[200] = mul yct a
    ycx:f32[200] = add ycw ycv
    ycy:f32[200] = sub b ycx
    ycz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yda:f32[] = div -2.0 ycz
    ydb:f32[200] = mul a ycy
    ydc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yda
    ydd:f32[200] = mul ydc ydb
    yde:f32[] = reduce_sum[axes=(0,)] ydd
    ydf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ydg:f32[] = div -2.0 ydf
    ydh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ydg
    ydi:f32[200] = mul ydh ycy
    ydj:f32[] = reduce_sum[axes=(0,)] ydi
    ydk:f32[] = mul 0.0010000000474974513 yde
    ydl:f32[] = sub yct ydk
    ydm:f32[] = mul 0.0010000000474974513 ydj
    ydn:f32[] = sub ycv ydm
    ydo:f32[200] = mul ydl a
    ydp:f32[200] = add ydo ydn
    ydq:f32[200] = sub b ydp
    ydr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yds:f32[] = div -2.0 ydr
    ydt:f32[200] = mul a ydq
    ydu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yds
    ydv:f32[200] = mul ydu ydt
    ydw:f32[] = reduce_sum[axes=(0,)] ydv
    ydx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ydy:f32[] = div -2.0 ydx
    ydz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ydy
    yea:f32[200] = mul ydz ydq
    yeb:f32[] = reduce_sum[axes=(0,)] yea
    yec:f32[] = mul 0.0010000000474974513 ydw
    yed:f32[] = sub ydl yec
    yee:f32[] = mul 0.0010000000474974513 yeb
    yef:f32[] = sub ydn yee
    yeg:f32[200] = mul yed a
    yeh:f32[200] = add yeg yef
    yei:f32[200] = sub b yeh
    yej:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yek:f32[] = div -2.0 yej
    yel:f32[200] = mul a yei
    yem:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yek
    yen:f32[200] = mul yem yel
    yeo:f32[] = reduce_sum[axes=(0,)] yen
    yep:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yeq:f32[] = div -2.0 yep
    yer:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yeq
    yes:f32[200] = mul yer yei
    yet:f32[] = reduce_sum[axes=(0,)] yes
    yeu:f32[] = mul 0.0010000000474974513 yeo
    yev:f32[] = sub yed yeu
    yew:f32[] = mul 0.0010000000474974513 yet
    yex:f32[] = sub yef yew
    yey:f32[200] = mul yev a
    yez:f32[200] = add yey yex
    yfa:f32[200] = sub b yez
    yfb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yfc:f32[] = div -2.0 yfb
    yfd:f32[200] = mul a yfa
    yfe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yfc
    yff:f32[200] = mul yfe yfd
    yfg:f32[] = reduce_sum[axes=(0,)] yff
    yfh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yfi:f32[] = div -2.0 yfh
    yfj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yfi
    yfk:f32[200] = mul yfj yfa
    yfl:f32[] = reduce_sum[axes=(0,)] yfk
    yfm:f32[] = mul 0.0010000000474974513 yfg
    yfn:f32[] = sub yev yfm
    yfo:f32[] = mul 0.0010000000474974513 yfl
    yfp:f32[] = sub yex yfo
    yfq:f32[200] = mul yfn a
    yfr:f32[200] = add yfq yfp
    yfs:f32[200] = sub b yfr
    yft:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yfu:f32[] = div -2.0 yft
    yfv:f32[200] = mul a yfs
    yfw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yfu
    yfx:f32[200] = mul yfw yfv
    yfy:f32[] = reduce_sum[axes=(0,)] yfx
    yfz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yga:f32[] = div -2.0 yfz
    ygb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yga
    ygc:f32[200] = mul ygb yfs
    ygd:f32[] = reduce_sum[axes=(0,)] ygc
    yge:f32[] = mul 0.0010000000474974513 yfy
    ygf:f32[] = sub yfn yge
    ygg:f32[] = mul 0.0010000000474974513 ygd
    ygh:f32[] = sub yfp ygg
    ygi:f32[200] = mul ygf a
    ygj:f32[200] = add ygi ygh
    ygk:f32[200] = sub b ygj
    ygl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ygm:f32[] = div -2.0 ygl
    ygn:f32[200] = mul a ygk
    ygo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ygm
    ygp:f32[200] = mul ygo ygn
    ygq:f32[] = reduce_sum[axes=(0,)] ygp
    ygr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ygs:f32[] = div -2.0 ygr
    ygt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ygs
    ygu:f32[200] = mul ygt ygk
    ygv:f32[] = reduce_sum[axes=(0,)] ygu
    ygw:f32[] = mul 0.0010000000474974513 ygq
    ygx:f32[] = sub ygf ygw
    ygy:f32[] = mul 0.0010000000474974513 ygv
    ygz:f32[] = sub ygh ygy
    yha:f32[200] = mul ygx a
    yhb:f32[200] = add yha ygz
    yhc:f32[200] = sub b yhb
    yhd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yhe:f32[] = div -2.0 yhd
    yhf:f32[200] = mul a yhc
    yhg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yhe
    yhh:f32[200] = mul yhg yhf
    yhi:f32[] = reduce_sum[axes=(0,)] yhh
    yhj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yhk:f32[] = div -2.0 yhj
    yhl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yhk
    yhm:f32[200] = mul yhl yhc
    yhn:f32[] = reduce_sum[axes=(0,)] yhm
    yho:f32[] = mul 0.0010000000474974513 yhi
    yhp:f32[] = sub ygx yho
    yhq:f32[] = mul 0.0010000000474974513 yhn
    yhr:f32[] = sub ygz yhq
    yhs:f32[200] = mul yhp a
    yht:f32[200] = add yhs yhr
    yhu:f32[200] = sub b yht
    yhv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yhw:f32[] = div -2.0 yhv
    yhx:f32[200] = mul a yhu
    yhy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yhw
    yhz:f32[200] = mul yhy yhx
    yia:f32[] = reduce_sum[axes=(0,)] yhz
    yib:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yic:f32[] = div -2.0 yib
    yid:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yic
    yie:f32[200] = mul yid yhu
    yif:f32[] = reduce_sum[axes=(0,)] yie
    yig:f32[] = mul 0.0010000000474974513 yia
    yih:f32[] = sub yhp yig
    yii:f32[] = mul 0.0010000000474974513 yif
    yij:f32[] = sub yhr yii
    yik:f32[200] = mul yih a
    yil:f32[200] = add yik yij
    yim:f32[200] = sub b yil
    yin:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yio:f32[] = div -2.0 yin
    yip:f32[200] = mul a yim
    yiq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yio
    yir:f32[200] = mul yiq yip
    yis:f32[] = reduce_sum[axes=(0,)] yir
    yit:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yiu:f32[] = div -2.0 yit
    yiv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yiu
    yiw:f32[200] = mul yiv yim
    yix:f32[] = reduce_sum[axes=(0,)] yiw
    yiy:f32[] = mul 0.0010000000474974513 yis
    yiz:f32[] = sub yih yiy
    yja:f32[] = mul 0.0010000000474974513 yix
    yjb:f32[] = sub yij yja
    yjc:f32[200] = mul yiz a
    yjd:f32[200] = add yjc yjb
    yje:f32[200] = sub b yjd
    yjf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yjg:f32[] = div -2.0 yjf
    yjh:f32[200] = mul a yje
    yji:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yjg
    yjj:f32[200] = mul yji yjh
    yjk:f32[] = reduce_sum[axes=(0,)] yjj
    yjl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yjm:f32[] = div -2.0 yjl
    yjn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yjm
    yjo:f32[200] = mul yjn yje
    yjp:f32[] = reduce_sum[axes=(0,)] yjo
    yjq:f32[] = mul 0.0010000000474974513 yjk
    yjr:f32[] = sub yiz yjq
    yjs:f32[] = mul 0.0010000000474974513 yjp
    yjt:f32[] = sub yjb yjs
    yju:f32[200] = mul yjr a
    yjv:f32[200] = add yju yjt
    yjw:f32[200] = sub b yjv
    yjx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yjy:f32[] = div -2.0 yjx
    yjz:f32[200] = mul a yjw
    yka:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yjy
    ykb:f32[200] = mul yka yjz
    ykc:f32[] = reduce_sum[axes=(0,)] ykb
    ykd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yke:f32[] = div -2.0 ykd
    ykf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yke
    ykg:f32[200] = mul ykf yjw
    ykh:f32[] = reduce_sum[axes=(0,)] ykg
    yki:f32[] = mul 0.0010000000474974513 ykc
    ykj:f32[] = sub yjr yki
    ykk:f32[] = mul 0.0010000000474974513 ykh
    ykl:f32[] = sub yjt ykk
    ykm:f32[200] = mul ykj a
    ykn:f32[200] = add ykm ykl
    yko:f32[200] = sub b ykn
    ykp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ykq:f32[] = div -2.0 ykp
    ykr:f32[200] = mul a yko
    yks:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ykq
    ykt:f32[200] = mul yks ykr
    yku:f32[] = reduce_sum[axes=(0,)] ykt
    ykv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ykw:f32[] = div -2.0 ykv
    ykx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ykw
    yky:f32[200] = mul ykx yko
    ykz:f32[] = reduce_sum[axes=(0,)] yky
    yla:f32[] = mul 0.0010000000474974513 yku
    ylb:f32[] = sub ykj yla
    ylc:f32[] = mul 0.0010000000474974513 ykz
    yld:f32[] = sub ykl ylc
    yle:f32[200] = mul ylb a
    ylf:f32[200] = add yle yld
    ylg:f32[200] = sub b ylf
    ylh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yli:f32[] = div -2.0 ylh
    ylj:f32[200] = mul a ylg
    ylk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yli
    yll:f32[200] = mul ylk ylj
    ylm:f32[] = reduce_sum[axes=(0,)] yll
    yln:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ylo:f32[] = div -2.0 yln
    ylp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ylo
    ylq:f32[200] = mul ylp ylg
    ylr:f32[] = reduce_sum[axes=(0,)] ylq
    yls:f32[] = mul 0.0010000000474974513 ylm
    ylt:f32[] = sub ylb yls
    ylu:f32[] = mul 0.0010000000474974513 ylr
    ylv:f32[] = sub yld ylu
    ylw:f32[200] = mul ylt a
    ylx:f32[200] = add ylw ylv
    yly:f32[200] = sub b ylx
    ylz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yma:f32[] = div -2.0 ylz
    ymb:f32[200] = mul a yly
    ymc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yma
    ymd:f32[200] = mul ymc ymb
    yme:f32[] = reduce_sum[axes=(0,)] ymd
    ymf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ymg:f32[] = div -2.0 ymf
    ymh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ymg
    ymi:f32[200] = mul ymh yly
    ymj:f32[] = reduce_sum[axes=(0,)] ymi
    ymk:f32[] = mul 0.0010000000474974513 yme
    yml:f32[] = sub ylt ymk
    ymm:f32[] = mul 0.0010000000474974513 ymj
    ymn:f32[] = sub ylv ymm
    ymo:f32[200] = mul yml a
    ymp:f32[200] = add ymo ymn
    ymq:f32[200] = sub b ymp
    ymr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yms:f32[] = div -2.0 ymr
    ymt:f32[200] = mul a ymq
    ymu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yms
    ymv:f32[200] = mul ymu ymt
    ymw:f32[] = reduce_sum[axes=(0,)] ymv
    ymx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ymy:f32[] = div -2.0 ymx
    ymz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ymy
    yna:f32[200] = mul ymz ymq
    ynb:f32[] = reduce_sum[axes=(0,)] yna
    ync:f32[] = mul 0.0010000000474974513 ymw
    ynd:f32[] = sub yml ync
    yne:f32[] = mul 0.0010000000474974513 ynb
    ynf:f32[] = sub ymn yne
    yng:f32[200] = mul ynd a
    ynh:f32[200] = add yng ynf
    yni:f32[200] = sub b ynh
    ynj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ynk:f32[] = div -2.0 ynj
    ynl:f32[200] = mul a yni
    ynm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ynk
    ynn:f32[200] = mul ynm ynl
    yno:f32[] = reduce_sum[axes=(0,)] ynn
    ynp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ynq:f32[] = div -2.0 ynp
    ynr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ynq
    yns:f32[200] = mul ynr yni
    ynt:f32[] = reduce_sum[axes=(0,)] yns
    ynu:f32[] = mul 0.0010000000474974513 yno
    ynv:f32[] = sub ynd ynu
    ynw:f32[] = mul 0.0010000000474974513 ynt
    ynx:f32[] = sub ynf ynw
    yny:f32[200] = mul ynv a
    ynz:f32[200] = add yny ynx
    yoa:f32[200] = sub b ynz
    yob:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yoc:f32[] = div -2.0 yob
    yod:f32[200] = mul a yoa
    yoe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yoc
    yof:f32[200] = mul yoe yod
    yog:f32[] = reduce_sum[axes=(0,)] yof
    yoh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yoi:f32[] = div -2.0 yoh
    yoj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yoi
    yok:f32[200] = mul yoj yoa
    yol:f32[] = reduce_sum[axes=(0,)] yok
    yom:f32[] = mul 0.0010000000474974513 yog
    yon:f32[] = sub ynv yom
    yoo:f32[] = mul 0.0010000000474974513 yol
    yop:f32[] = sub ynx yoo
    yoq:f32[200] = mul yon a
    yor:f32[200] = add yoq yop
    yos:f32[200] = sub b yor
    yot:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    you:f32[] = div -2.0 yot
    yov:f32[200] = mul a yos
    yow:f32[] = convert_element_type[new_dtype=float32 weak_type=False] you
    yox:f32[200] = mul yow yov
    yoy:f32[] = reduce_sum[axes=(0,)] yox
    yoz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ypa:f32[] = div -2.0 yoz
    ypb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ypa
    ypc:f32[200] = mul ypb yos
    ypd:f32[] = reduce_sum[axes=(0,)] ypc
    ype:f32[] = mul 0.0010000000474974513 yoy
    ypf:f32[] = sub yon ype
    ypg:f32[] = mul 0.0010000000474974513 ypd
    yph:f32[] = sub yop ypg
    ypi:f32[200] = mul ypf a
    ypj:f32[200] = add ypi yph
    ypk:f32[200] = sub b ypj
    ypl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ypm:f32[] = div -2.0 ypl
    ypn:f32[200] = mul a ypk
    ypo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ypm
    ypp:f32[200] = mul ypo ypn
    ypq:f32[] = reduce_sum[axes=(0,)] ypp
    ypr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yps:f32[] = div -2.0 ypr
    ypt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yps
    ypu:f32[200] = mul ypt ypk
    ypv:f32[] = reduce_sum[axes=(0,)] ypu
    ypw:f32[] = mul 0.0010000000474974513 ypq
    ypx:f32[] = sub ypf ypw
    ypy:f32[] = mul 0.0010000000474974513 ypv
    ypz:f32[] = sub yph ypy
    yqa:f32[200] = mul ypx a
    yqb:f32[200] = add yqa ypz
    yqc:f32[200] = sub b yqb
    yqd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yqe:f32[] = div -2.0 yqd
    yqf:f32[200] = mul a yqc
    yqg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yqe
    yqh:f32[200] = mul yqg yqf
    yqi:f32[] = reduce_sum[axes=(0,)] yqh
    yqj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yqk:f32[] = div -2.0 yqj
    yql:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yqk
    yqm:f32[200] = mul yql yqc
    yqn:f32[] = reduce_sum[axes=(0,)] yqm
    yqo:f32[] = mul 0.0010000000474974513 yqi
    yqp:f32[] = sub ypx yqo
    yqq:f32[] = mul 0.0010000000474974513 yqn
    yqr:f32[] = sub ypz yqq
    yqs:f32[200] = mul yqp a
    yqt:f32[200] = add yqs yqr
    yqu:f32[200] = sub b yqt
    yqv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yqw:f32[] = div -2.0 yqv
    yqx:f32[200] = mul a yqu
    yqy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yqw
    yqz:f32[200] = mul yqy yqx
    yra:f32[] = reduce_sum[axes=(0,)] yqz
    yrb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yrc:f32[] = div -2.0 yrb
    yrd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yrc
    yre:f32[200] = mul yrd yqu
    yrf:f32[] = reduce_sum[axes=(0,)] yre
    yrg:f32[] = mul 0.0010000000474974513 yra
    yrh:f32[] = sub yqp yrg
    yri:f32[] = mul 0.0010000000474974513 yrf
    yrj:f32[] = sub yqr yri
    yrk:f32[200] = mul yrh a
    yrl:f32[200] = add yrk yrj
    yrm:f32[200] = sub b yrl
    yrn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yro:f32[] = div -2.0 yrn
    yrp:f32[200] = mul a yrm
    yrq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yro
    yrr:f32[200] = mul yrq yrp
    yrs:f32[] = reduce_sum[axes=(0,)] yrr
    yrt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yru:f32[] = div -2.0 yrt
    yrv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yru
    yrw:f32[200] = mul yrv yrm
    yrx:f32[] = reduce_sum[axes=(0,)] yrw
    yry:f32[] = mul 0.0010000000474974513 yrs
    yrz:f32[] = sub yrh yry
    ysa:f32[] = mul 0.0010000000474974513 yrx
    ysb:f32[] = sub yrj ysa
    ysc:f32[200] = mul yrz a
    ysd:f32[200] = add ysc ysb
    yse:f32[200] = sub b ysd
    ysf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ysg:f32[] = div -2.0 ysf
    ysh:f32[200] = mul a yse
    ysi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ysg
    ysj:f32[200] = mul ysi ysh
    ysk:f32[] = reduce_sum[axes=(0,)] ysj
    ysl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ysm:f32[] = div -2.0 ysl
    ysn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ysm
    yso:f32[200] = mul ysn yse
    ysp:f32[] = reduce_sum[axes=(0,)] yso
    ysq:f32[] = mul 0.0010000000474974513 ysk
    ysr:f32[] = sub yrz ysq
    yss:f32[] = mul 0.0010000000474974513 ysp
    yst:f32[] = sub ysb yss
    ysu:f32[200] = mul ysr a
    ysv:f32[200] = add ysu yst
    ysw:f32[200] = sub b ysv
    ysx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ysy:f32[] = div -2.0 ysx
    ysz:f32[200] = mul a ysw
    yta:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ysy
    ytb:f32[200] = mul yta ysz
    ytc:f32[] = reduce_sum[axes=(0,)] ytb
    ytd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yte:f32[] = div -2.0 ytd
    ytf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yte
    ytg:f32[200] = mul ytf ysw
    yth:f32[] = reduce_sum[axes=(0,)] ytg
    yti:f32[] = mul 0.0010000000474974513 ytc
    ytj:f32[] = sub ysr yti
    ytk:f32[] = mul 0.0010000000474974513 yth
    ytl:f32[] = sub yst ytk
    ytm:f32[200] = mul ytj a
    ytn:f32[200] = add ytm ytl
    yto:f32[200] = sub b ytn
    ytp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ytq:f32[] = div -2.0 ytp
    ytr:f32[200] = mul a yto
    yts:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ytq
    ytt:f32[200] = mul yts ytr
    ytu:f32[] = reduce_sum[axes=(0,)] ytt
    ytv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ytw:f32[] = div -2.0 ytv
    ytx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ytw
    yty:f32[200] = mul ytx yto
    ytz:f32[] = reduce_sum[axes=(0,)] yty
    yua:f32[] = mul 0.0010000000474974513 ytu
    yub:f32[] = sub ytj yua
    yuc:f32[] = mul 0.0010000000474974513 ytz
    yud:f32[] = sub ytl yuc
    yue:f32[200] = mul yub a
    yuf:f32[200] = add yue yud
    yug:f32[200] = sub b yuf
    yuh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yui:f32[] = div -2.0 yuh
    yuj:f32[200] = mul a yug
    yuk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yui
    yul:f32[200] = mul yuk yuj
    yum:f32[] = reduce_sum[axes=(0,)] yul
    yun:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yuo:f32[] = div -2.0 yun
    yup:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yuo
    yuq:f32[200] = mul yup yug
    yur:f32[] = reduce_sum[axes=(0,)] yuq
    yus:f32[] = mul 0.0010000000474974513 yum
    yut:f32[] = sub yub yus
    yuu:f32[] = mul 0.0010000000474974513 yur
    yuv:f32[] = sub yud yuu
    yuw:f32[200] = mul yut a
    yux:f32[200] = add yuw yuv
    yuy:f32[200] = sub b yux
    yuz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yva:f32[] = div -2.0 yuz
    yvb:f32[200] = mul a yuy
    yvc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yva
    yvd:f32[200] = mul yvc yvb
    yve:f32[] = reduce_sum[axes=(0,)] yvd
    yvf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yvg:f32[] = div -2.0 yvf
    yvh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yvg
    yvi:f32[200] = mul yvh yuy
    yvj:f32[] = reduce_sum[axes=(0,)] yvi
    yvk:f32[] = mul 0.0010000000474974513 yve
    yvl:f32[] = sub yut yvk
    yvm:f32[] = mul 0.0010000000474974513 yvj
    yvn:f32[] = sub yuv yvm
    yvo:f32[200] = mul yvl a
    yvp:f32[200] = add yvo yvn
    yvq:f32[200] = sub b yvp
    yvr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yvs:f32[] = div -2.0 yvr
    yvt:f32[200] = mul a yvq
    yvu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yvs
    yvv:f32[200] = mul yvu yvt
    yvw:f32[] = reduce_sum[axes=(0,)] yvv
    yvx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yvy:f32[] = div -2.0 yvx
    yvz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yvy
    ywa:f32[200] = mul yvz yvq
    ywb:f32[] = reduce_sum[axes=(0,)] ywa
    ywc:f32[] = mul 0.0010000000474974513 yvw
    ywd:f32[] = sub yvl ywc
    ywe:f32[] = mul 0.0010000000474974513 ywb
    ywf:f32[] = sub yvn ywe
    ywg:f32[200] = mul ywd a
    ywh:f32[200] = add ywg ywf
    ywi:f32[200] = sub b ywh
    ywj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ywk:f32[] = div -2.0 ywj
    ywl:f32[200] = mul a ywi
    ywm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ywk
    ywn:f32[200] = mul ywm ywl
    ywo:f32[] = reduce_sum[axes=(0,)] ywn
    ywp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ywq:f32[] = div -2.0 ywp
    ywr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ywq
    yws:f32[200] = mul ywr ywi
    ywt:f32[] = reduce_sum[axes=(0,)] yws
    ywu:f32[] = mul 0.0010000000474974513 ywo
    ywv:f32[] = sub ywd ywu
    yww:f32[] = mul 0.0010000000474974513 ywt
    ywx:f32[] = sub ywf yww
    ywy:f32[200] = mul ywv a
    ywz:f32[200] = add ywy ywx
    yxa:f32[200] = sub b ywz
    yxb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yxc:f32[] = div -2.0 yxb
    yxd:f32[200] = mul a yxa
    yxe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yxc
    yxf:f32[200] = mul yxe yxd
    yxg:f32[] = reduce_sum[axes=(0,)] yxf
    yxh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yxi:f32[] = div -2.0 yxh
    yxj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yxi
    yxk:f32[200] = mul yxj yxa
    yxl:f32[] = reduce_sum[axes=(0,)] yxk
    yxm:f32[] = mul 0.0010000000474974513 yxg
    yxn:f32[] = sub ywv yxm
    yxo:f32[] = mul 0.0010000000474974513 yxl
    yxp:f32[] = sub ywx yxo
    yxq:f32[200] = mul yxn a
    yxr:f32[200] = add yxq yxp
    yxs:f32[200] = sub b yxr
    yxt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yxu:f32[] = div -2.0 yxt
    yxv:f32[200] = mul a yxs
    yxw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yxu
    yxx:f32[200] = mul yxw yxv
    yxy:f32[] = reduce_sum[axes=(0,)] yxx
    yxz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yya:f32[] = div -2.0 yxz
    yyb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yya
    yyc:f32[200] = mul yyb yxs
    yyd:f32[] = reduce_sum[axes=(0,)] yyc
    yye:f32[] = mul 0.0010000000474974513 yxy
    yyf:f32[] = sub yxn yye
    yyg:f32[] = mul 0.0010000000474974513 yyd
    yyh:f32[] = sub yxp yyg
    yyi:f32[200] = mul yyf a
    yyj:f32[200] = add yyi yyh
    yyk:f32[200] = sub b yyj
    yyl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yym:f32[] = div -2.0 yyl
    yyn:f32[200] = mul a yyk
    yyo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yym
    yyp:f32[200] = mul yyo yyn
    yyq:f32[] = reduce_sum[axes=(0,)] yyp
    yyr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yys:f32[] = div -2.0 yyr
    yyt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yys
    yyu:f32[200] = mul yyt yyk
    yyv:f32[] = reduce_sum[axes=(0,)] yyu
    yyw:f32[] = mul 0.0010000000474974513 yyq
    yyx:f32[] = sub yyf yyw
    yyy:f32[] = mul 0.0010000000474974513 yyv
    yyz:f32[] = sub yyh yyy
    yza:f32[200] = mul yyx a
    yzb:f32[200] = add yza yyz
    yzc:f32[200] = sub b yzb
    yzd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yze:f32[] = div -2.0 yzd
    yzf:f32[200] = mul a yzc
    yzg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yze
    yzh:f32[200] = mul yzg yzf
    yzi:f32[] = reduce_sum[axes=(0,)] yzh
    yzj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yzk:f32[] = div -2.0 yzj
    yzl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yzk
    yzm:f32[200] = mul yzl yzc
    yzn:f32[] = reduce_sum[axes=(0,)] yzm
    yzo:f32[] = mul 0.0010000000474974513 yzi
    yzp:f32[] = sub yyx yzo
    yzq:f32[] = mul 0.0010000000474974513 yzn
    yzr:f32[] = sub yyz yzq
    yzs:f32[200] = mul yzp a
    yzt:f32[200] = add yzs yzr
    yzu:f32[200] = sub b yzt
    yzv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    yzw:f32[] = div -2.0 yzv
    yzx:f32[200] = mul a yzu
    yzy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] yzw
    yzz:f32[200] = mul yzy yzx
    zaa:f32[] = reduce_sum[axes=(0,)] yzz
    zab:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zac:f32[] = div -2.0 zab
    zad:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zac
    zae:f32[200] = mul zad yzu
    zaf:f32[] = reduce_sum[axes=(0,)] zae
    zag:f32[] = mul 0.0010000000474974513 zaa
    zah:f32[] = sub yzp zag
    zai:f32[] = mul 0.0010000000474974513 zaf
    zaj:f32[] = sub yzr zai
    zak:f32[200] = mul zah a
    zal:f32[200] = add zak zaj
    zam:f32[200] = sub b zal
    zan:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zao:f32[] = div -2.0 zan
    zap:f32[200] = mul a zam
    zaq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zao
    zar:f32[200] = mul zaq zap
    zas:f32[] = reduce_sum[axes=(0,)] zar
    zat:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zau:f32[] = div -2.0 zat
    zav:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zau
    zaw:f32[200] = mul zav zam
    zax:f32[] = reduce_sum[axes=(0,)] zaw
    zay:f32[] = mul 0.0010000000474974513 zas
    zaz:f32[] = sub zah zay
    zba:f32[] = mul 0.0010000000474974513 zax
    zbb:f32[] = sub zaj zba
    zbc:f32[200] = mul zaz a
    zbd:f32[200] = add zbc zbb
    zbe:f32[200] = sub b zbd
    zbf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zbg:f32[] = div -2.0 zbf
    zbh:f32[200] = mul a zbe
    zbi:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zbg
    zbj:f32[200] = mul zbi zbh
    zbk:f32[] = reduce_sum[axes=(0,)] zbj
    zbl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zbm:f32[] = div -2.0 zbl
    zbn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zbm
    zbo:f32[200] = mul zbn zbe
    zbp:f32[] = reduce_sum[axes=(0,)] zbo
    zbq:f32[] = mul 0.0010000000474974513 zbk
    zbr:f32[] = sub zaz zbq
    zbs:f32[] = mul 0.0010000000474974513 zbp
    zbt:f32[] = sub zbb zbs
    zbu:f32[200] = mul zbr a
    zbv:f32[200] = add zbu zbt
    zbw:f32[200] = sub b zbv
    zbx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zby:f32[] = div -2.0 zbx
    zbz:f32[200] = mul a zbw
    zca:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zby
    zcb:f32[200] = mul zca zbz
    zcc:f32[] = reduce_sum[axes=(0,)] zcb
    zcd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zce:f32[] = div -2.0 zcd
    zcf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zce
    zcg:f32[200] = mul zcf zbw
    zch:f32[] = reduce_sum[axes=(0,)] zcg
    zci:f32[] = mul 0.0010000000474974513 zcc
    zcj:f32[] = sub zbr zci
    zck:f32[] = mul 0.0010000000474974513 zch
    zcl:f32[] = sub zbt zck
    zcm:f32[200] = mul zcj a
    zcn:f32[200] = add zcm zcl
    zco:f32[200] = sub b zcn
    zcp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zcq:f32[] = div -2.0 zcp
    zcr:f32[200] = mul a zco
    zcs:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zcq
    zct:f32[200] = mul zcs zcr
    zcu:f32[] = reduce_sum[axes=(0,)] zct
    zcv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zcw:f32[] = div -2.0 zcv
    zcx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zcw
    zcy:f32[200] = mul zcx zco
    zcz:f32[] = reduce_sum[axes=(0,)] zcy
    zda:f32[] = mul 0.0010000000474974513 zcu
    zdb:f32[] = sub zcj zda
    zdc:f32[] = mul 0.0010000000474974513 zcz
    zdd:f32[] = sub zcl zdc
    zde:f32[200] = mul zdb a
    zdf:f32[200] = add zde zdd
    zdg:f32[200] = sub b zdf
    zdh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zdi:f32[] = div -2.0 zdh
    zdj:f32[200] = mul a zdg
    zdk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zdi
    zdl:f32[200] = mul zdk zdj
    zdm:f32[] = reduce_sum[axes=(0,)] zdl
    zdn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zdo:f32[] = div -2.0 zdn
    zdp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zdo
    zdq:f32[200] = mul zdp zdg
    zdr:f32[] = reduce_sum[axes=(0,)] zdq
    zds:f32[] = mul 0.0010000000474974513 zdm
    zdt:f32[] = sub zdb zds
    zdu:f32[] = mul 0.0010000000474974513 zdr
    zdv:f32[] = sub zdd zdu
    zdw:f32[200] = mul zdt a
    zdx:f32[200] = add zdw zdv
    zdy:f32[200] = sub b zdx
    zdz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zea:f32[] = div -2.0 zdz
    zeb:f32[200] = mul a zdy
    zec:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zea
    zed:f32[200] = mul zec zeb
    zee:f32[] = reduce_sum[axes=(0,)] zed
    zef:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zeg:f32[] = div -2.0 zef
    zeh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zeg
    zei:f32[200] = mul zeh zdy
    zej:f32[] = reduce_sum[axes=(0,)] zei
    zek:f32[] = mul 0.0010000000474974513 zee
    zel:f32[] = sub zdt zek
    zem:f32[] = mul 0.0010000000474974513 zej
    zen:f32[] = sub zdv zem
    zeo:f32[200] = mul zel a
    zep:f32[200] = add zeo zen
    zeq:f32[200] = sub b zep
    zer:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zes:f32[] = div -2.0 zer
    zet:f32[200] = mul a zeq
    zeu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zes
    zev:f32[200] = mul zeu zet
    zew:f32[] = reduce_sum[axes=(0,)] zev
    zex:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zey:f32[] = div -2.0 zex
    zez:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zey
    zfa:f32[200] = mul zez zeq
    zfb:f32[] = reduce_sum[axes=(0,)] zfa
    zfc:f32[] = mul 0.0010000000474974513 zew
    zfd:f32[] = sub zel zfc
    zfe:f32[] = mul 0.0010000000474974513 zfb
    zff:f32[] = sub zen zfe
    zfg:f32[200] = mul zfd a
    zfh:f32[200] = add zfg zff
    zfi:f32[200] = sub b zfh
    zfj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zfk:f32[] = div -2.0 zfj
    zfl:f32[200] = mul a zfi
    zfm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zfk
    zfn:f32[200] = mul zfm zfl
    zfo:f32[] = reduce_sum[axes=(0,)] zfn
    zfp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zfq:f32[] = div -2.0 zfp
    zfr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zfq
    zfs:f32[200] = mul zfr zfi
    zft:f32[] = reduce_sum[axes=(0,)] zfs
    zfu:f32[] = mul 0.0010000000474974513 zfo
    zfv:f32[] = sub zfd zfu
    zfw:f32[] = mul 0.0010000000474974513 zft
    zfx:f32[] = sub zff zfw
    zfy:f32[200] = mul zfv a
    zfz:f32[200] = add zfy zfx
    zga:f32[200] = sub b zfz
    zgb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zgc:f32[] = div -2.0 zgb
    zgd:f32[200] = mul a zga
    zge:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zgc
    zgf:f32[200] = mul zge zgd
    zgg:f32[] = reduce_sum[axes=(0,)] zgf
    zgh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zgi:f32[] = div -2.0 zgh
    zgj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zgi
    zgk:f32[200] = mul zgj zga
    zgl:f32[] = reduce_sum[axes=(0,)] zgk
    zgm:f32[] = mul 0.0010000000474974513 zgg
    zgn:f32[] = sub zfv zgm
    zgo:f32[] = mul 0.0010000000474974513 zgl
    zgp:f32[] = sub zfx zgo
    zgq:f32[200] = mul zgn a
    zgr:f32[200] = add zgq zgp
    zgs:f32[200] = sub b zgr
    zgt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zgu:f32[] = div -2.0 zgt
    zgv:f32[200] = mul a zgs
    zgw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zgu
    zgx:f32[200] = mul zgw zgv
    zgy:f32[] = reduce_sum[axes=(0,)] zgx
    zgz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zha:f32[] = div -2.0 zgz
    zhb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zha
    zhc:f32[200] = mul zhb zgs
    zhd:f32[] = reduce_sum[axes=(0,)] zhc
    zhe:f32[] = mul 0.0010000000474974513 zgy
    zhf:f32[] = sub zgn zhe
    zhg:f32[] = mul 0.0010000000474974513 zhd
    zhh:f32[] = sub zgp zhg
    zhi:f32[200] = mul zhf a
    zhj:f32[200] = add zhi zhh
    zhk:f32[200] = sub b zhj
    zhl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zhm:f32[] = div -2.0 zhl
    zhn:f32[200] = mul a zhk
    zho:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zhm
    zhp:f32[200] = mul zho zhn
    zhq:f32[] = reduce_sum[axes=(0,)] zhp
    zhr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zhs:f32[] = div -2.0 zhr
    zht:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zhs
    zhu:f32[200] = mul zht zhk
    zhv:f32[] = reduce_sum[axes=(0,)] zhu
    zhw:f32[] = mul 0.0010000000474974513 zhq
    zhx:f32[] = sub zhf zhw
    zhy:f32[] = mul 0.0010000000474974513 zhv
    zhz:f32[] = sub zhh zhy
    zia:f32[200] = mul zhx a
    zib:f32[200] = add zia zhz
    zic:f32[200] = sub b zib
    zid:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zie:f32[] = div -2.0 zid
    zif:f32[200] = mul a zic
    zig:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zie
    zih:f32[200] = mul zig zif
    zii:f32[] = reduce_sum[axes=(0,)] zih
    zij:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zik:f32[] = div -2.0 zij
    zil:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zik
    zim:f32[200] = mul zil zic
    zin:f32[] = reduce_sum[axes=(0,)] zim
    zio:f32[] = mul 0.0010000000474974513 zii
    zip:f32[] = sub zhx zio
    ziq:f32[] = mul 0.0010000000474974513 zin
    zir:f32[] = sub zhz ziq
    zis:f32[200] = mul zip a
    zit:f32[200] = add zis zir
    ziu:f32[200] = sub b zit
    ziv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ziw:f32[] = div -2.0 ziv
    zix:f32[200] = mul a ziu
    ziy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ziw
    ziz:f32[200] = mul ziy zix
    zja:f32[] = reduce_sum[axes=(0,)] ziz
    zjb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zjc:f32[] = div -2.0 zjb
    zjd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zjc
    zje:f32[200] = mul zjd ziu
    zjf:f32[] = reduce_sum[axes=(0,)] zje
    zjg:f32[] = mul 0.0010000000474974513 zja
    zjh:f32[] = sub zip zjg
    zji:f32[] = mul 0.0010000000474974513 zjf
    zjj:f32[] = sub zir zji
    zjk:f32[200] = mul zjh a
    zjl:f32[200] = add zjk zjj
    zjm:f32[200] = sub b zjl
    zjn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zjo:f32[] = div -2.0 zjn
    zjp:f32[200] = mul a zjm
    zjq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zjo
    zjr:f32[200] = mul zjq zjp
    zjs:f32[] = reduce_sum[axes=(0,)] zjr
    zjt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zju:f32[] = div -2.0 zjt
    zjv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zju
    zjw:f32[200] = mul zjv zjm
    zjx:f32[] = reduce_sum[axes=(0,)] zjw
    zjy:f32[] = mul 0.0010000000474974513 zjs
    zjz:f32[] = sub zjh zjy
    zka:f32[] = mul 0.0010000000474974513 zjx
    zkb:f32[] = sub zjj zka
    zkc:f32[200] = mul zjz a
    zkd:f32[200] = add zkc zkb
    zke:f32[200] = sub b zkd
    zkf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zkg:f32[] = div -2.0 zkf
    zkh:f32[200] = mul a zke
    zki:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zkg
    zkj:f32[200] = mul zki zkh
    zkk:f32[] = reduce_sum[axes=(0,)] zkj
    zkl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zkm:f32[] = div -2.0 zkl
    zkn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zkm
    zko:f32[200] = mul zkn zke
    zkp:f32[] = reduce_sum[axes=(0,)] zko
    zkq:f32[] = mul 0.0010000000474974513 zkk
    zkr:f32[] = sub zjz zkq
    zks:f32[] = mul 0.0010000000474974513 zkp
    zkt:f32[] = sub zkb zks
    zku:f32[200] = mul zkr a
    zkv:f32[200] = add zku zkt
    zkw:f32[200] = sub b zkv
    zkx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zky:f32[] = div -2.0 zkx
    zkz:f32[200] = mul a zkw
    zla:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zky
    zlb:f32[200] = mul zla zkz
    zlc:f32[] = reduce_sum[axes=(0,)] zlb
    zld:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zle:f32[] = div -2.0 zld
    zlf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zle
    zlg:f32[200] = mul zlf zkw
    zlh:f32[] = reduce_sum[axes=(0,)] zlg
    zli:f32[] = mul 0.0010000000474974513 zlc
    zlj:f32[] = sub zkr zli
    zlk:f32[] = mul 0.0010000000474974513 zlh
    zll:f32[] = sub zkt zlk
    zlm:f32[200] = mul zlj a
    zln:f32[200] = add zlm zll
    zlo:f32[200] = sub b zln
    zlp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zlq:f32[] = div -2.0 zlp
    zlr:f32[200] = mul a zlo
    zls:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zlq
    zlt:f32[200] = mul zls zlr
    zlu:f32[] = reduce_sum[axes=(0,)] zlt
    zlv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zlw:f32[] = div -2.0 zlv
    zlx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zlw
    zly:f32[200] = mul zlx zlo
    zlz:f32[] = reduce_sum[axes=(0,)] zly
    zma:f32[] = mul 0.0010000000474974513 zlu
    zmb:f32[] = sub zlj zma
    zmc:f32[] = mul 0.0010000000474974513 zlz
    zmd:f32[] = sub zll zmc
    zme:f32[200] = mul zmb a
    zmf:f32[200] = add zme zmd
    zmg:f32[200] = sub b zmf
    zmh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zmi:f32[] = div -2.0 zmh
    zmj:f32[200] = mul a zmg
    zmk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zmi
    zml:f32[200] = mul zmk zmj
    zmm:f32[] = reduce_sum[axes=(0,)] zml
    zmn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zmo:f32[] = div -2.0 zmn
    zmp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zmo
    zmq:f32[200] = mul zmp zmg
    zmr:f32[] = reduce_sum[axes=(0,)] zmq
    zms:f32[] = mul 0.0010000000474974513 zmm
    zmt:f32[] = sub zmb zms
    zmu:f32[] = mul 0.0010000000474974513 zmr
    zmv:f32[] = sub zmd zmu
    zmw:f32[200] = mul zmt a
    zmx:f32[200] = add zmw zmv
    zmy:f32[200] = sub b zmx
    zmz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zna:f32[] = div -2.0 zmz
    znb:f32[200] = mul a zmy
    znc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zna
    znd:f32[200] = mul znc znb
    zne:f32[] = reduce_sum[axes=(0,)] znd
    znf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zng:f32[] = div -2.0 znf
    znh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zng
    zni:f32[200] = mul znh zmy
    znj:f32[] = reduce_sum[axes=(0,)] zni
    znk:f32[] = mul 0.0010000000474974513 zne
    znl:f32[] = sub zmt znk
    znm:f32[] = mul 0.0010000000474974513 znj
    znn:f32[] = sub zmv znm
    zno:f32[200] = mul znl a
    znp:f32[200] = add zno znn
    znq:f32[200] = sub b znp
    znr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zns:f32[] = div -2.0 znr
    znt:f32[200] = mul a znq
    znu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zns
    znv:f32[200] = mul znu znt
    znw:f32[] = reduce_sum[axes=(0,)] znv
    znx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zny:f32[] = div -2.0 znx
    znz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zny
    zoa:f32[200] = mul znz znq
    zob:f32[] = reduce_sum[axes=(0,)] zoa
    zoc:f32[] = mul 0.0010000000474974513 znw
    zod:f32[] = sub znl zoc
    zoe:f32[] = mul 0.0010000000474974513 zob
    zof:f32[] = sub znn zoe
    zog:f32[200] = mul zod a
    zoh:f32[200] = add zog zof
    zoi:f32[200] = sub b zoh
    zoj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zok:f32[] = div -2.0 zoj
    zol:f32[200] = mul a zoi
    zom:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zok
    zon:f32[200] = mul zom zol
    zoo:f32[] = reduce_sum[axes=(0,)] zon
    zop:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zoq:f32[] = div -2.0 zop
    zor:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zoq
    zos:f32[200] = mul zor zoi
    zot:f32[] = reduce_sum[axes=(0,)] zos
    zou:f32[] = mul 0.0010000000474974513 zoo
    zov:f32[] = sub zod zou
    zow:f32[] = mul 0.0010000000474974513 zot
    zox:f32[] = sub zof zow
    zoy:f32[200] = mul zov a
    zoz:f32[200] = add zoy zox
    zpa:f32[200] = sub b zoz
    zpb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zpc:f32[] = div -2.0 zpb
    zpd:f32[200] = mul a zpa
    zpe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zpc
    zpf:f32[200] = mul zpe zpd
    zpg:f32[] = reduce_sum[axes=(0,)] zpf
    zph:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zpi:f32[] = div -2.0 zph
    zpj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zpi
    zpk:f32[200] = mul zpj zpa
    zpl:f32[] = reduce_sum[axes=(0,)] zpk
    zpm:f32[] = mul 0.0010000000474974513 zpg
    zpn:f32[] = sub zov zpm
    zpo:f32[] = mul 0.0010000000474974513 zpl
    zpp:f32[] = sub zox zpo
    zpq:f32[200] = mul zpn a
    zpr:f32[200] = add zpq zpp
    zps:f32[200] = sub b zpr
    zpt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zpu:f32[] = div -2.0 zpt
    zpv:f32[200] = mul a zps
    zpw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zpu
    zpx:f32[200] = mul zpw zpv
    zpy:f32[] = reduce_sum[axes=(0,)] zpx
    zpz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zqa:f32[] = div -2.0 zpz
    zqb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zqa
    zqc:f32[200] = mul zqb zps
    zqd:f32[] = reduce_sum[axes=(0,)] zqc
    zqe:f32[] = mul 0.0010000000474974513 zpy
    zqf:f32[] = sub zpn zqe
    zqg:f32[] = mul 0.0010000000474974513 zqd
    zqh:f32[] = sub zpp zqg
    zqi:f32[200] = mul zqf a
    zqj:f32[200] = add zqi zqh
    zqk:f32[200] = sub b zqj
    zql:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zqm:f32[] = div -2.0 zql
    zqn:f32[200] = mul a zqk
    zqo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zqm
    zqp:f32[200] = mul zqo zqn
    zqq:f32[] = reduce_sum[axes=(0,)] zqp
    zqr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zqs:f32[] = div -2.0 zqr
    zqt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zqs
    zqu:f32[200] = mul zqt zqk
    zqv:f32[] = reduce_sum[axes=(0,)] zqu
    zqw:f32[] = mul 0.0010000000474974513 zqq
    zqx:f32[] = sub zqf zqw
    zqy:f32[] = mul 0.0010000000474974513 zqv
    zqz:f32[] = sub zqh zqy
    zra:f32[200] = mul zqx a
    zrb:f32[200] = add zra zqz
    zrc:f32[200] = sub b zrb
    zrd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zre:f32[] = div -2.0 zrd
    zrf:f32[200] = mul a zrc
    zrg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zre
    zrh:f32[200] = mul zrg zrf
    zri:f32[] = reduce_sum[axes=(0,)] zrh
    zrj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zrk:f32[] = div -2.0 zrj
    zrl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zrk
    zrm:f32[200] = mul zrl zrc
    zrn:f32[] = reduce_sum[axes=(0,)] zrm
    zro:f32[] = mul 0.0010000000474974513 zri
    zrp:f32[] = sub zqx zro
    zrq:f32[] = mul 0.0010000000474974513 zrn
    zrr:f32[] = sub zqz zrq
    zrs:f32[200] = mul zrp a
    zrt:f32[200] = add zrs zrr
    zru:f32[200] = sub b zrt
    zrv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zrw:f32[] = div -2.0 zrv
    zrx:f32[200] = mul a zru
    zry:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zrw
    zrz:f32[200] = mul zry zrx
    zsa:f32[] = reduce_sum[axes=(0,)] zrz
    zsb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zsc:f32[] = div -2.0 zsb
    zsd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zsc
    zse:f32[200] = mul zsd zru
    zsf:f32[] = reduce_sum[axes=(0,)] zse
    zsg:f32[] = mul 0.0010000000474974513 zsa
    zsh:f32[] = sub zrp zsg
    zsi:f32[] = mul 0.0010000000474974513 zsf
    zsj:f32[] = sub zrr zsi
    zsk:f32[200] = mul zsh a
    zsl:f32[200] = add zsk zsj
    zsm:f32[200] = sub b zsl
    zsn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zso:f32[] = div -2.0 zsn
    zsp:f32[200] = mul a zsm
    zsq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zso
    zsr:f32[200] = mul zsq zsp
    zss:f32[] = reduce_sum[axes=(0,)] zsr
    zst:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zsu:f32[] = div -2.0 zst
    zsv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zsu
    zsw:f32[200] = mul zsv zsm
    zsx:f32[] = reduce_sum[axes=(0,)] zsw
    zsy:f32[] = mul 0.0010000000474974513 zss
    zsz:f32[] = sub zsh zsy
    zta:f32[] = mul 0.0010000000474974513 zsx
    ztb:f32[] = sub zsj zta
    ztc:f32[200] = mul zsz a
    ztd:f32[200] = add ztc ztb
    zte:f32[200] = sub b ztd
    ztf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ztg:f32[] = div -2.0 ztf
    zth:f32[200] = mul a zte
    zti:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ztg
    ztj:f32[200] = mul zti zth
    ztk:f32[] = reduce_sum[axes=(0,)] ztj
    ztl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    ztm:f32[] = div -2.0 ztl
    ztn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] ztm
    zto:f32[200] = mul ztn zte
    ztp:f32[] = reduce_sum[axes=(0,)] zto
    ztq:f32[] = mul 0.0010000000474974513 ztk
    ztr:f32[] = sub zsz ztq
    zts:f32[] = mul 0.0010000000474974513 ztp
    ztt:f32[] = sub ztb zts
    ztu:f32[200] = mul ztr a
    ztv:f32[200] = add ztu ztt
    ztw:f32[200] = sub b ztv
    ztx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zty:f32[] = div -2.0 ztx
    ztz:f32[200] = mul a ztw
    zua:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zty
    zub:f32[200] = mul zua ztz
    zuc:f32[] = reduce_sum[axes=(0,)] zub
    zud:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zue:f32[] = div -2.0 zud
    zuf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zue
    zug:f32[200] = mul zuf ztw
    zuh:f32[] = reduce_sum[axes=(0,)] zug
    zui:f32[] = mul 0.0010000000474974513 zuc
    zuj:f32[] = sub ztr zui
    zuk:f32[] = mul 0.0010000000474974513 zuh
    zul:f32[] = sub ztt zuk
    zum:f32[200] = mul zuj a
    zun:f32[200] = add zum zul
    zuo:f32[200] = sub b zun
    zup:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zuq:f32[] = div -2.0 zup
    zur:f32[200] = mul a zuo
    zus:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zuq
    zut:f32[200] = mul zus zur
    zuu:f32[] = reduce_sum[axes=(0,)] zut
    zuv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zuw:f32[] = div -2.0 zuv
    zux:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zuw
    zuy:f32[200] = mul zux zuo
    zuz:f32[] = reduce_sum[axes=(0,)] zuy
    zva:f32[] = mul 0.0010000000474974513 zuu
    zvb:f32[] = sub zuj zva
    zvc:f32[] = mul 0.0010000000474974513 zuz
    zvd:f32[] = sub zul zvc
    zve:f32[200] = mul zvb a
    zvf:f32[200] = add zve zvd
    zvg:f32[200] = sub b zvf
    zvh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zvi:f32[] = div -2.0 zvh
    zvj:f32[200] = mul a zvg
    zvk:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zvi
    zvl:f32[200] = mul zvk zvj
    zvm:f32[] = reduce_sum[axes=(0,)] zvl
    zvn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zvo:f32[] = div -2.0 zvn
    zvp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zvo
    zvq:f32[200] = mul zvp zvg
    zvr:f32[] = reduce_sum[axes=(0,)] zvq
    zvs:f32[] = mul 0.0010000000474974513 zvm
    zvt:f32[] = sub zvb zvs
    zvu:f32[] = mul 0.0010000000474974513 zvr
    zvv:f32[] = sub zvd zvu
    zvw:f32[200] = mul zvt a
    zvx:f32[200] = add zvw zvv
    zvy:f32[200] = sub b zvx
    zvz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zwa:f32[] = div -2.0 zvz
    zwb:f32[200] = mul a zvy
    zwc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zwa
    zwd:f32[200] = mul zwc zwb
    zwe:f32[] = reduce_sum[axes=(0,)] zwd
    zwf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zwg:f32[] = div -2.0 zwf
    zwh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zwg
    zwi:f32[200] = mul zwh zvy
    zwj:f32[] = reduce_sum[axes=(0,)] zwi
    zwk:f32[] = mul 0.0010000000474974513 zwe
    zwl:f32[] = sub zvt zwk
    zwm:f32[] = mul 0.0010000000474974513 zwj
    zwn:f32[] = sub zvv zwm
    zwo:f32[200] = mul zwl a
    zwp:f32[200] = add zwo zwn
    zwq:f32[200] = sub b zwp
    zwr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zws:f32[] = div -2.0 zwr
    zwt:f32[200] = mul a zwq
    zwu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zws
    zwv:f32[200] = mul zwu zwt
    zww:f32[] = reduce_sum[axes=(0,)] zwv
    zwx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zwy:f32[] = div -2.0 zwx
    zwz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zwy
    zxa:f32[200] = mul zwz zwq
    zxb:f32[] = reduce_sum[axes=(0,)] zxa
    zxc:f32[] = mul 0.0010000000474974513 zww
    zxd:f32[] = sub zwl zxc
    zxe:f32[] = mul 0.0010000000474974513 zxb
    zxf:f32[] = sub zwn zxe
    zxg:f32[200] = mul zxd a
    zxh:f32[200] = add zxg zxf
    zxi:f32[200] = sub b zxh
    zxj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zxk:f32[] = div -2.0 zxj
    zxl:f32[200] = mul a zxi
    zxm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zxk
    zxn:f32[200] = mul zxm zxl
    zxo:f32[] = reduce_sum[axes=(0,)] zxn
    zxp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zxq:f32[] = div -2.0 zxp
    zxr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zxq
    zxs:f32[200] = mul zxr zxi
    zxt:f32[] = reduce_sum[axes=(0,)] zxs
    zxu:f32[] = mul 0.0010000000474974513 zxo
    zxv:f32[] = sub zxd zxu
    zxw:f32[] = mul 0.0010000000474974513 zxt
    zxx:f32[] = sub zxf zxw
    zxy:f32[200] = mul zxv a
    zxz:f32[200] = add zxy zxx
    zya:f32[200] = sub b zxz
    zyb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zyc:f32[] = div -2.0 zyb
    zyd:f32[200] = mul a zya
    zye:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zyc
    zyf:f32[200] = mul zye zyd
    zyg:f32[] = reduce_sum[axes=(0,)] zyf
    zyh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zyi:f32[] = div -2.0 zyh
    zyj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zyi
    zyk:f32[200] = mul zyj zya
    zyl:f32[] = reduce_sum[axes=(0,)] zyk
    zym:f32[] = mul 0.0010000000474974513 zyg
    zyn:f32[] = sub zxv zym
    zyo:f32[] = mul 0.0010000000474974513 zyl
    zyp:f32[] = sub zxx zyo
    zyq:f32[200] = mul zyn a
    zyr:f32[200] = add zyq zyp
    zys:f32[200] = sub b zyr
    zyt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zyu:f32[] = div -2.0 zyt
    zyv:f32[200] = mul a zys
    zyw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zyu
    zyx:f32[200] = mul zyw zyv
    zyy:f32[] = reduce_sum[axes=(0,)] zyx
    zyz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zza:f32[] = div -2.0 zyz
    zzb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zza
    zzc:f32[200] = mul zzb zys
    zzd:f32[] = reduce_sum[axes=(0,)] zzc
    zze:f32[] = mul 0.0010000000474974513 zyy
    zzf:f32[] = sub zyn zze
    zzg:f32[] = mul 0.0010000000474974513 zzd
    zzh:f32[] = sub zyp zzg
    zzi:f32[200] = mul zzf a
    zzj:f32[200] = add zzi zzh
    zzk:f32[200] = sub b zzj
    zzl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zzm:f32[] = div -2.0 zzl
    zzn:f32[200] = mul a zzk
    zzo:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zzm
    zzp:f32[200] = mul zzo zzn
    zzq:f32[] = reduce_sum[axes=(0,)] zzp
    zzr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    zzs:f32[] = div -2.0 zzr
    zzt:f32[] = convert_element_type[new_dtype=float32 weak_type=False] zzs
    zzu:f32[200] = mul zzt zzk
    zzv:f32[] = reduce_sum[axes=(0,)] zzu
    zzw:f32[] = mul 0.0010000000474974513 zzq
    zzx:f32[] = sub zzf zzw
    zzy:f32[] = mul 0.0010000000474974513 zzv
    zzz:f32[] = sub zzh zzy
    baaa:f32[200] = mul zzx a
    baab:f32[200] = add baaa zzz
    baac:f32[200] = sub b baab
    baad:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baae:f32[] = div -2.0 baad
    baaf:f32[200] = mul a baac
    baag:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baae
    baah:f32[200] = mul baag baaf
    baai:f32[] = reduce_sum[axes=(0,)] baah
    baaj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baak:f32[] = div -2.0 baaj
    baal:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baak
    baam:f32[200] = mul baal baac
    baan:f32[] = reduce_sum[axes=(0,)] baam
    baao:f32[] = mul 0.0010000000474974513 baai
    baap:f32[] = sub zzx baao
    baaq:f32[] = mul 0.0010000000474974513 baan
    baar:f32[] = sub zzz baaq
    baas:f32[200] = mul baap a
    baat:f32[200] = add baas baar
    baau:f32[200] = sub b baat
    baav:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baaw:f32[] = div -2.0 baav
    baax:f32[200] = mul a baau
    baay:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baaw
    baaz:f32[200] = mul baay baax
    baba:f32[] = reduce_sum[axes=(0,)] baaz
    babb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    babc:f32[] = div -2.0 babb
    babd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] babc
    babe:f32[200] = mul babd baau
    babf:f32[] = reduce_sum[axes=(0,)] babe
    babg:f32[] = mul 0.0010000000474974513 baba
    babh:f32[] = sub baap babg
    babi:f32[] = mul 0.0010000000474974513 babf
    babj:f32[] = sub baar babi
    babk:f32[200] = mul babh a
    babl:f32[200] = add babk babj
    babm:f32[200] = sub b babl
    babn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    babo:f32[] = div -2.0 babn
    babp:f32[200] = mul a babm
    babq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] babo
    babr:f32[200] = mul babq babp
    babs:f32[] = reduce_sum[axes=(0,)] babr
    babt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    babu:f32[] = div -2.0 babt
    babv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] babu
    babw:f32[200] = mul babv babm
    babx:f32[] = reduce_sum[axes=(0,)] babw
    baby:f32[] = mul 0.0010000000474974513 babs
    babz:f32[] = sub babh baby
    baca:f32[] = mul 0.0010000000474974513 babx
    bacb:f32[] = sub babj baca
    bacc:f32[200] = mul babz a
    bacd:f32[200] = add bacc bacb
    bace:f32[200] = sub b bacd
    bacf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bacg:f32[] = div -2.0 bacf
    bach:f32[200] = mul a bace
    baci:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bacg
    bacj:f32[200] = mul baci bach
    back:f32[] = reduce_sum[axes=(0,)] bacj
    bacl:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bacm:f32[] = div -2.0 bacl
    bacn:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bacm
    baco:f32[200] = mul bacn bace
    bacp:f32[] = reduce_sum[axes=(0,)] baco
    bacq:f32[] = mul 0.0010000000474974513 back
    bacr:f32[] = sub babz bacq
    bacs:f32[] = mul 0.0010000000474974513 bacp
    bact:f32[] = sub bacb bacs
    bacu:f32[200] = mul bacr a
    bacv:f32[200] = add bacu bact
    bacw:f32[200] = sub b bacv
    bacx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bacy:f32[] = div -2.0 bacx
    bacz:f32[200] = mul a bacw
    bada:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bacy
    badb:f32[200] = mul bada bacz
    badc:f32[] = reduce_sum[axes=(0,)] badb
    badd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bade:f32[] = div -2.0 badd
    badf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bade
    badg:f32[200] = mul badf bacw
    badh:f32[] = reduce_sum[axes=(0,)] badg
    badi:f32[] = mul 0.0010000000474974513 badc
    badj:f32[] = sub bacr badi
    badk:f32[] = mul 0.0010000000474974513 badh
    badl:f32[] = sub bact badk
    badm:f32[200] = mul badj a
    badn:f32[200] = add badm badl
    bado:f32[200] = sub b badn
    badp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    badq:f32[] = div -2.0 badp
    badr:f32[200] = mul a bado
    bads:f32[] = convert_element_type[new_dtype=float32 weak_type=False] badq
    badt:f32[200] = mul bads badr
    badu:f32[] = reduce_sum[axes=(0,)] badt
    badv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    badw:f32[] = div -2.0 badv
    badx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] badw
    bady:f32[200] = mul badx bado
    badz:f32[] = reduce_sum[axes=(0,)] bady
    baea:f32[] = mul 0.0010000000474974513 badu
    baeb:f32[] = sub badj baea
    baec:f32[] = mul 0.0010000000474974513 badz
    baed:f32[] = sub badl baec
    baee:f32[200] = mul baeb a
    baef:f32[200] = add baee baed
    baeg:f32[200] = sub b baef
    baeh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baei:f32[] = div -2.0 baeh
    baej:f32[200] = mul a baeg
    baek:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baei
    bael:f32[200] = mul baek baej
    baem:f32[] = reduce_sum[axes=(0,)] bael
    baen:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baeo:f32[] = div -2.0 baen
    baep:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baeo
    baeq:f32[200] = mul baep baeg
    baer:f32[] = reduce_sum[axes=(0,)] baeq
    baes:f32[] = mul 0.0010000000474974513 baem
    baet:f32[] = sub baeb baes
    baeu:f32[] = mul 0.0010000000474974513 baer
    baev:f32[] = sub baed baeu
    baew:f32[200] = mul baet a
    baex:f32[200] = add baew baev
    baey:f32[200] = sub b baex
    baez:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bafa:f32[] = div -2.0 baez
    bafb:f32[200] = mul a baey
    bafc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bafa
    bafd:f32[200] = mul bafc bafb
    bafe:f32[] = reduce_sum[axes=(0,)] bafd
    baff:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bafg:f32[] = div -2.0 baff
    bafh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bafg
    bafi:f32[200] = mul bafh baey
    bafj:f32[] = reduce_sum[axes=(0,)] bafi
    bafk:f32[] = mul 0.0010000000474974513 bafe
    bafl:f32[] = sub baet bafk
    bafm:f32[] = mul 0.0010000000474974513 bafj
    bafn:f32[] = sub baev bafm
    bafo:f32[200] = mul bafl a
    bafp:f32[200] = add bafo bafn
    bafq:f32[200] = sub b bafp
    bafr:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bafs:f32[] = div -2.0 bafr
    baft:f32[200] = mul a bafq
    bafu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bafs
    bafv:f32[200] = mul bafu baft
    bafw:f32[] = reduce_sum[axes=(0,)] bafv
    bafx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bafy:f32[] = div -2.0 bafx
    bafz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bafy
    baga:f32[200] = mul bafz bafq
    bagb:f32[] = reduce_sum[axes=(0,)] baga
    bagc:f32[] = mul 0.0010000000474974513 bafw
    bagd:f32[] = sub bafl bagc
    bage:f32[] = mul 0.0010000000474974513 bagb
    bagf:f32[] = sub bafn bage
    bagg:f32[200] = mul bagd a
    bagh:f32[200] = add bagg bagf
    bagi:f32[200] = sub b bagh
    bagj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bagk:f32[] = div -2.0 bagj
    bagl:f32[200] = mul a bagi
    bagm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bagk
    bagn:f32[200] = mul bagm bagl
    bago:f32[] = reduce_sum[axes=(0,)] bagn
    bagp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bagq:f32[] = div -2.0 bagp
    bagr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bagq
    bags:f32[200] = mul bagr bagi
    bagt:f32[] = reduce_sum[axes=(0,)] bags
    bagu:f32[] = mul 0.0010000000474974513 bago
    bagv:f32[] = sub bagd bagu
    bagw:f32[] = mul 0.0010000000474974513 bagt
    bagx:f32[] = sub bagf bagw
    bagy:f32[200] = mul bagv a
    bagz:f32[200] = add bagy bagx
    baha:f32[200] = sub b bagz
    bahb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bahc:f32[] = div -2.0 bahb
    bahd:f32[200] = mul a baha
    bahe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bahc
    bahf:f32[200] = mul bahe bahd
    bahg:f32[] = reduce_sum[axes=(0,)] bahf
    bahh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bahi:f32[] = div -2.0 bahh
    bahj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bahi
    bahk:f32[200] = mul bahj baha
    bahl:f32[] = reduce_sum[axes=(0,)] bahk
    bahm:f32[] = mul 0.0010000000474974513 bahg
    bahn:f32[] = sub bagv bahm
    baho:f32[] = mul 0.0010000000474974513 bahl
    bahp:f32[] = sub bagx baho
    bahq:f32[200] = mul bahn a
    bahr:f32[200] = add bahq bahp
    bahs:f32[200] = sub b bahr
    baht:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bahu:f32[] = div -2.0 baht
    bahv:f32[200] = mul a bahs
    bahw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bahu
    bahx:f32[200] = mul bahw bahv
    bahy:f32[] = reduce_sum[axes=(0,)] bahx
    bahz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baia:f32[] = div -2.0 bahz
    baib:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baia
    baic:f32[200] = mul baib bahs
    baid:f32[] = reduce_sum[axes=(0,)] baic
    baie:f32[] = mul 0.0010000000474974513 bahy
    baif:f32[] = sub bahn baie
    baig:f32[] = mul 0.0010000000474974513 baid
    baih:f32[] = sub bahp baig
    baii:f32[200] = mul baif a
    baij:f32[200] = add baii baih
    baik:f32[200] = sub b baij
    bail:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baim:f32[] = div -2.0 bail
    bain:f32[200] = mul a baik
    baio:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baim
    baip:f32[200] = mul baio bain
    baiq:f32[] = reduce_sum[axes=(0,)] baip
    bair:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bais:f32[] = div -2.0 bair
    bait:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bais
    baiu:f32[200] = mul bait baik
    baiv:f32[] = reduce_sum[axes=(0,)] baiu
    baiw:f32[] = mul 0.0010000000474974513 baiq
    baix:f32[] = sub baif baiw
    baiy:f32[] = mul 0.0010000000474974513 baiv
    baiz:f32[] = sub baih baiy
    baja:f32[200] = mul baix a
    bajb:f32[200] = add baja baiz
    bajc:f32[200] = sub b bajb
    bajd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baje:f32[] = div -2.0 bajd
    bajf:f32[200] = mul a bajc
    bajg:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baje
    bajh:f32[200] = mul bajg bajf
    baji:f32[] = reduce_sum[axes=(0,)] bajh
    bajj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bajk:f32[] = div -2.0 bajj
    bajl:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bajk
    bajm:f32[200] = mul bajl bajc
    bajn:f32[] = reduce_sum[axes=(0,)] bajm
    bajo:f32[] = mul 0.0010000000474974513 baji
    bajp:f32[] = sub baix bajo
    bajq:f32[] = mul 0.0010000000474974513 bajn
    bajr:f32[] = sub baiz bajq
    bajs:f32[200] = mul bajp a
    bajt:f32[200] = add bajs bajr
    baju:f32[200] = sub b bajt
    bajv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bajw:f32[] = div -2.0 bajv
    bajx:f32[200] = mul a baju
    bajy:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bajw
    bajz:f32[200] = mul bajy bajx
    baka:f32[] = reduce_sum[axes=(0,)] bajz
    bakb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bakc:f32[] = div -2.0 bakb
    bakd:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bakc
    bake:f32[200] = mul bakd baju
    bakf:f32[] = reduce_sum[axes=(0,)] bake
    bakg:f32[] = mul 0.0010000000474974513 baka
    bakh:f32[] = sub bajp bakg
    baki:f32[] = mul 0.0010000000474974513 bakf
    bakj:f32[] = sub bajr baki
    bakk:f32[200] = mul bakh a
    bakl:f32[200] = add bakk bakj
    bakm:f32[200] = sub b bakl
    bakn:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bako:f32[] = div -2.0 bakn
    bakp:f32[200] = mul a bakm
    bakq:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bako
    bakr:f32[200] = mul bakq bakp
    baks:f32[] = reduce_sum[axes=(0,)] bakr
    bakt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baku:f32[] = div -2.0 bakt
    bakv:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baku
    bakw:f32[200] = mul bakv bakm
    bakx:f32[] = reduce_sum[axes=(0,)] bakw
    baky:f32[] = mul 0.0010000000474974513 baks
    bakz:f32[] = sub bakh baky
    bala:f32[] = mul 0.0010000000474974513 bakx
    balb:f32[] = sub bakj bala
    balc:f32[200] = mul bakz a
    bald:f32[200] = add balc balb
    bale:f32[200] = sub b bald
    balf:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    balg:f32[] = div -2.0 balf
    balh:f32[200] = mul a bale
    bali:f32[] = convert_element_type[new_dtype=float32 weak_type=False] balg
    balj:f32[200] = mul bali balh
    balk:f32[] = reduce_sum[axes=(0,)] balj
    ball:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    balm:f32[] = div -2.0 ball
    baln:f32[] = convert_element_type[new_dtype=float32 weak_type=False] balm
    balo:f32[200] = mul baln bale
    balp:f32[] = reduce_sum[axes=(0,)] balo
    balq:f32[] = mul 0.0010000000474974513 balk
    balr:f32[] = sub bakz balq
    bals:f32[] = mul 0.0010000000474974513 balp
    balt:f32[] = sub balb bals
    balu:f32[200] = mul balr a
    balv:f32[200] = add balu balt
    balw:f32[200] = sub b balv
    balx:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baly:f32[] = div -2.0 balx
    balz:f32[200] = mul a balw
    bama:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baly
    bamb:f32[200] = mul bama balz
    bamc:f32[] = reduce_sum[axes=(0,)] bamb
    bamd:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bame:f32[] = div -2.0 bamd
    bamf:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bame
    bamg:f32[200] = mul bamf balw
    bamh:f32[] = reduce_sum[axes=(0,)] bamg
    bami:f32[] = mul 0.0010000000474974513 bamc
    bamj:f32[] = sub balr bami
    bamk:f32[] = mul 0.0010000000474974513 bamh
    baml:f32[] = sub balt bamk
    bamm:f32[200] = mul bamj a
    bamn:f32[200] = add bamm baml
    bamo:f32[200] = sub b bamn
    bamp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bamq:f32[] = div -2.0 bamp
    bamr:f32[200] = mul a bamo
    bams:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bamq
    bamt:f32[200] = mul bams bamr
    bamu:f32[] = reduce_sum[axes=(0,)] bamt
    bamv:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bamw:f32[] = div -2.0 bamv
    bamx:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bamw
    bamy:f32[200] = mul bamx bamo
    bamz:f32[] = reduce_sum[axes=(0,)] bamy
    bana:f32[] = mul 0.0010000000474974513 bamu
    banb:f32[] = sub bamj bana
    banc:f32[] = mul 0.0010000000474974513 bamz
    band:f32[] = sub baml banc
    bane:f32[200] = mul banb a
    banf:f32[200] = add bane band
    bang:f32[200] = sub b banf
    banh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bani:f32[] = div -2.0 banh
    banj:f32[200] = mul a bang
    bank:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bani
    banl:f32[200] = mul bank banj
    banm:f32[] = reduce_sum[axes=(0,)] banl
    bann:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bano:f32[] = div -2.0 bann
    banp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bano
    banq:f32[200] = mul banp bang
    banr:f32[] = reduce_sum[axes=(0,)] banq
    bans:f32[] = mul 0.0010000000474974513 banm
    bant:f32[] = sub banb bans
    banu:f32[] = mul 0.0010000000474974513 banr
    banv:f32[] = sub band banu
    banw:f32[200] = mul bant a
    banx:f32[200] = add banw banv
    bany:f32[200] = sub b banx
    banz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baoa:f32[] = div -2.0 banz
    baob:f32[200] = mul a bany
    baoc:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baoa
    baod:f32[200] = mul baoc baob
    baoe:f32[] = reduce_sum[axes=(0,)] baod
    baof:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baog:f32[] = div -2.0 baof
    baoh:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baog
    baoi:f32[200] = mul baoh bany
    baoj:f32[] = reduce_sum[axes=(0,)] baoi
    baok:f32[] = mul 0.0010000000474974513 baoe
    baol:f32[] = sub bant baok
    baom:f32[] = mul 0.0010000000474974513 baoj
    baon:f32[] = sub banv baom
    baoo:f32[200] = mul baol a
    baop:f32[200] = add baoo baon
    baoq:f32[200] = sub b baop
    baor:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baos:f32[] = div -2.0 baor
    baot:f32[200] = mul a baoq
    baou:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baos
    baov:f32[200] = mul baou baot
    baow:f32[] = reduce_sum[axes=(0,)] baov
    baox:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baoy:f32[] = div -2.0 baox
    baoz:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baoy
    bapa:f32[200] = mul baoz baoq
    bapb:f32[] = reduce_sum[axes=(0,)] bapa
    bapc:f32[] = mul 0.0010000000474974513 baow
    bapd:f32[] = sub baol bapc
    bape:f32[] = mul 0.0010000000474974513 bapb
    bapf:f32[] = sub baon bape
    bapg:f32[200] = mul bapd a
    baph:f32[200] = add bapg bapf
    bapi:f32[200] = sub b baph
    bapj:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bapk:f32[] = div -2.0 bapj
    bapl:f32[200] = mul a bapi
    bapm:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bapk
    bapn:f32[200] = mul bapm bapl
    bapo:f32[] = reduce_sum[axes=(0,)] bapn
    bapp:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bapq:f32[] = div -2.0 bapp
    bapr:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bapq
    baps:f32[200] = mul bapr bapi
    bapt:f32[] = reduce_sum[axes=(0,)] baps
    bapu:f32[] = mul 0.0010000000474974513 bapo
    bapv:f32[] = sub bapd bapu
    bapw:f32[] = mul 0.0010000000474974513 bapt
    bapx:f32[] = sub bapf bapw
    bapy:f32[200] = mul bapv a
    bapz:f32[200] = add bapy bapx
    baqa:f32[200] = sub b bapz
    baqb:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baqc:f32[] = div -2.0 baqb
    baqd:f32[200] = mul a baqa
    baqe:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baqc
    baqf:f32[200] = mul baqe baqd
    baqg:f32[] = reduce_sum[axes=(0,)] baqf
    baqh:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baqi:f32[] = div -2.0 baqh
    baqj:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baqi
    baqk:f32[200] = mul baqj baqa
    baql:f32[] = reduce_sum[axes=(0,)] baqk
    baqm:f32[] = mul 0.0010000000474974513 baqg
    baqn:f32[] = sub bapv baqm
    baqo:f32[] = mul 0.0010000000474974513 baql
    baqp:f32[] = sub bapx baqo
    baqq:f32[200] = mul baqn a
    baqr:f32[200] = add baqq baqp
    baqs:f32[200] = sub b baqr
    baqt:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    baqu:f32[] = div -2.0 baqt
    baqv:f32[200] = mul a baqs
    baqw:f32[] = convert_element_type[new_dtype=float32 weak_type=False] baqu
    baqx:f32[200] = mul baqw baqv
    baqy:f32[] = reduce_sum[axes=(0,)] baqx
    baqz:f32[] = convert_element_type[new_dtype=float32 weak_type=True] c
    bara:f32[] = div -2.0 baqz
    barb:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bara
    barc:f32[200] = mul barb baqs
    bard:f32[] = reduce_sum[axes=(0,)] barc
    bare:f32[] = mul 0.0010000000474974513 baqy
    barf:f32[] = sub baqn bare
    barg:f32[] = mul 0.0010000000474974513 bard
    barh:f32[] = sub baqp barg
    bari:f32[200] = mul barf a
    barj:f32[200] = add bari barh
  in (barj,) }

{ lambda ; a:f32[200] b:f32[200] c:i32[] d:u32[2]. let
    e:key<fry>[] = random_wrap[impl=fry] d
    f:f32[2] = pjit[
      name=_uniform
      jaxpr={ lambda ; g:key<fry>[] h:f32[] i:f32[]. let
          j:f32[] = convert_element_type[new_dtype=float32 weak_type=False] h
          k:f32[] = convert_element_type[new_dtype=float32 weak_type=False] i
          l:f32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] j
          m:f32[1] = broadcast_in_dim[broadcast_dimensions=() shape=(1,)] k
          n:u32[2] = random_bits[bit_width=32 shape=(2,)] g
          o:u32[2] = shift_right_logical n 9
          p:u32[2] = or o 1065353216
          q:f32[2] = bitcast_convert_type[new_dtype=float32] p
          r:f32[2] = sub q 1.0
          s:f32[1] = sub m l
          t:f32[2] = mul r s
          u:f32[2] = add t l
          v:f32[2] = max l u
        in (v,) }
    ] e 0.0 1.0
    w:f32[1] = slice[limit_indices=(1,) start_indices=(0,) strides=(1,)] f
    x:f32[] = squeeze[dimensions=(0,)] w
    y:f32[1] = slice[limit_indices=(2,) start_indices=(1,) strides=(1,)] f
    z:f32[] = squeeze[dimensions=(0,)] y
    _:i32[] ba:f32[] bb:f32[] = scan[
      _split_transpose=False
      jaxpr={ lambda ; bc:f32[200] bd:f32[200] be:i32[] bf:i32[] bg:f32[] bh:f32[]. let
          bi:i32[] = add bf 1
          bj:f32[200] = mul bg bc
          bk:f32[200] = add bj bh
          bl:f32[200] = sub bd bk
          bm:f32[] = convert_element_type[new_dtype=float32 weak_type=True] be
          bn:f32[] = div -2.0 bm
          bo:f32[200] = mul bc bl
          bp:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bn
          bq:f32[200] = mul bp bo
          br:f32[] = reduce_sum[axes=(0,)] bq
          bs:f32[] = convert_element_type[new_dtype=float32 weak_type=True] be
          bt:f32[] = div -2.0 bs
          bu:f32[] = convert_element_type[new_dtype=float32 weak_type=False] bt
          bv:f32[200] = mul bu bl
          bw:f32[] = reduce_sum[axes=(0,)] bv
          bx:f32[] = mul 0.0010000000474974513 br
          by:f32[] = sub bg bx
          bz:f32[] = mul 0.0010000000474974513 bw
          ca:f32[] = sub bh bz
        in (bi, by, ca) }
      length=1000
      linear=(False, False, False, False, False, False)
      num_carry=3
      num_consts=3
      reverse=False
      unroll=1
    ] a b c 0 x z
    cb:f32[200] = mul ba a
    cc:f32[200] = add cb bb
  in (cc,) }